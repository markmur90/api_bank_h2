# Generated by Django 5.2 on 2025-04-30 03:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SepaCreditTransfer',
            fields=[
                ('payment_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('auth_id', models.CharField(max_length=50)),
                ('transaction_status', models.CharField(max_length=10)),
                ('purpose_code', models.CharField(max_length=4)),
                ('requested_execution_date', models.DateField()),
                ('debtor_name', models.CharField(choices=[('---', '---'), ('MIRYA TRADING CO LTD', 'MIRYA TRADING CO LTD'), ('ZAIBATSUS.L.', 'ZAIBATSUS.L.'), ('ELIZABETH GARDEN GROUP S.L.', 'ELIZABETH GARDEN GROUP S.L.'), ('REVSTAR GLOBAL INTERNATIONAL LTD', 'REVSTAR GLOBAL INTERNATIONAL LTD'), ('ECLIPS CORPORATION LTD.', 'ECLIPS CORPORATION LTD.'), ('CDG SYSTEM LTD', 'CDG SYSTEM LTD'), ('BFP FINANCE SERVICE S.L.', 'BFP FINANCE SERVICE S.L.'), ('MOHAMMAD REZA NAJAFI KALASHI', 'MOHAMMAD REZA NAJAFI KALASHI'), ('SERVICES ET PUBLICITÉ ONLINE LTD', 'SERVICES ET PUBLICITÉ ONLINE LTD'), ('XXX', 'XXX')], max_length=140)),
                ('debtor_iban', models.CharField(choices=[('---', '---'), ('DE86500700100925993805', 'DE86500700100925993805'), ('ES3901821250410201520178', 'ES3901821250410201520178'), ('ES7901824036500201650056', 'ES7901824036500201650056'), ('GB69BUKB20041558708288', 'GB69BUKB20041558708288'), ('GB43HBUK40127669998520', 'GB43HBUK40127669998520'), ('DE64202208000053288296', 'DE64202208000053288296'), ('ES5868880001643861269006', 'ES5868880001643861269006'), ('DE41400501500154813455', 'DE41400501500154813455'), ('GB33REVO00996939552283', 'GB33REVO00996939552283'), ('XXX', 'XXX')], max_length=34, validators=[django.core.validators.RegexValidator('^[A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}$')])),
                ('debtor_bic', models.CharField(choices=[('---', '---'), ('DEUTDEFFXXX', 'DEUTDEFFXXX'), ('BBVAESMMXXX', 'BBVAESMMXXX'), ('BUKBGB22XXX', 'BUKBGB22XXX'), ('HBUKGB4BXXX', 'HBUKGB4BXXX'), ('SXPYDEHHXXX', 'SXPYDEHHXXX'), ('QNTOESB2XXX', 'QNTOESB2XXX'), ('WELADED1MST', 'WELADED1MST'), ('REVOGB21XXX', 'REVOGB21XXX'), ('XXX', 'XXX')], max_length=11, validators=[django.core.validators.RegexValidator('^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$')])),
                ('debtor_currency', models.CharField(choices=[('---', '---'), ('EUR', 'EUR'), ('GBP', 'GBP'), ('USD', 'USD'), ('JPY', 'JPY')], max_length=3)),
                ('creditor_name', models.CharField(choices=[('---', '---'), ('MIRYA TRADING CO LTD', 'MIRYA TRADING CO LTD'), ('ZAIBATSUS.L.', 'ZAIBATSUS.L.'), ('ELIZABETH GARDEN GROUP S.L.', 'ELIZABETH GARDEN GROUP S.L.'), ('REVSTAR GLOBAL INTERNATIONAL LTD', 'REVSTAR GLOBAL INTERNATIONAL LTD'), ('ECLIPS CORPORATION LTD.', 'ECLIPS CORPORATION LTD.'), ('CDG SYSTEM LTD', 'CDG SYSTEM LTD'), ('BFP FINANCE SERVICE S.L.', 'BFP FINANCE SERVICE S.L.'), ('MOHAMMAD REZA NAJAFI KALASHI', 'MOHAMMAD REZA NAJAFI KALASHI'), ('SERVICES ET PUBLICITÉ ONLINE LTD', 'SERVICES ET PUBLICITÉ ONLINE LTD'), ('XXX', 'XXX')], max_length=70)),
                ('creditor_iban', models.CharField(choices=[('---', '---'), ('DE86500700100925993805', 'DE86500700100925993805'), ('ES3901821250410201520178', 'ES3901821250410201520178'), ('ES7901824036500201650056', 'ES7901824036500201650056'), ('GB69BUKB20041558708288', 'GB69BUKB20041558708288'), ('GB43HBUK40127669998520', 'GB43HBUK40127669998520'), ('DE64202208000053288296', 'DE64202208000053288296'), ('ES5868880001643861269006', 'ES5868880001643861269006'), ('DE41400501500154813455', 'DE41400501500154813455'), ('GB33REVO00996939552283', 'GB33REVO00996939552283'), ('XXX', 'XXX')], max_length=34, validators=[django.core.validators.RegexValidator('^[A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}$')])),
                ('creditor_bic', models.CharField(choices=[('---', '---'), ('DEUTDEFFXXX', 'DEUTDEFFXXX'), ('BBVAESMMXXX', 'BBVAESMMXXX'), ('BUKBGB22XXX', 'BUKBGB22XXX'), ('HBUKGB4BXXX', 'HBUKGB4BXXX'), ('SXPYDEHHXXX', 'SXPYDEHHXXX'), ('QNTOESB2XXX', 'QNTOESB2XXX'), ('WELADED1MST', 'WELADED1MST'), ('REVOGB21XXX', 'REVOGB21XXX'), ('XXX', 'XXX')], max_length=11, validators=[django.core.validators.RegexValidator('^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$')])),
                ('creditor_currency', models.CharField(choices=[('---', '---'), ('EUR', 'EUR'), ('GBP', 'GBP'), ('USD', 'USD'), ('JPY', 'JPY')], max_length=3)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('end_to_end_id', models.CharField(max_length=36)),
                ('instruction_id', models.CharField(max_length=36)),
                ('remittance_structured', models.CharField(blank=True, max_length=140, null=True)),
                ('remittance_unstructured', models.CharField(blank=True, max_length=140, null=True)),
                ('debtor_address_country', models.CharField(choices=[('--', '--'), ('DE', 'Germany'), ('ES', 'Spain'), ('GB', 'Great Britain'), ('UK', 'United Kingdom'), ('FR', 'France')], max_length=2)),
                ('debtor_address_street', models.CharField(choices=[('---', '---'), ('TAUNUSANLAGE 12', 'TAUNUSANLAGE 12'), ('CALLE IPARRAGUIRRE 20', 'CALLE IPARRAGUIRRE 20'), ('CALLE GENERAL RICARDOS 12 PLANTA 4, PUERTA E', 'CALLE GENERAL RICARDOS 12 PLANTA 4, PUERTA E'), ('PAVILION DR BARCLAYCARD HOUSE', 'PAVILION DR BARCLAYCARD HOUSE'), ('CENTENARY SQUARE 1', 'CENTENARY SQUARE 1'), ('MAXIMILIANSTRASSE 54', 'MAXIMILIANSTRASSE 54'), ('PZ CATALUNYA NUM.1', 'PZ CATALUNYA NUM.1'), ('WESELER STRABE 230', 'WESELER STRABE 230'), ('WESTFERRY CIRCUS 7', 'WESTFERRY CIRCUS 7'), ('XXX', 'XXX')], max_length=70)),
                ('debtor_address_zip', models.CharField(choices=[('---', '---'), ('60325 FRANKFURT', '60325 FRANKFURT'), ('48009 BILBAO', '48009 BILBAO'), ('28012 MADRID', '28012 MADRID'), ('NN4 75G NORTHAMPTON', 'NN4 75G NORTHAMPTON'), ('B1 1HQ BIRMINGHAM', 'B1 1HQ BIRMINGHAM'), ('80538 MÜNCHEN', '80538 MÜNCHEN'), ('08850 GAVA', '08850 GAVA'), ('48151 MÜNSTER', '48151 MÜNSTER'), ('E14 4HD LONDON', 'E14 4HD LONDON'), ('XXX', 'XXX')], max_length=70)),
                ('creditor_address_country', models.CharField(choices=[('--', '--'), ('DE', 'Germany'), ('ES', 'Spain'), ('GB', 'Great Britain'), ('UK', 'United Kingdom'), ('FR', 'France')], max_length=2)),
                ('creditor_address_street', models.CharField(choices=[('---', '---'), ('TAUNUSANLAGE 12', 'TAUNUSANLAGE 12'), ('CALLE IPARRAGUIRRE 20', 'CALLE IPARRAGUIRRE 20'), ('CALLE GENERAL RICARDOS 12 PLANTA 4, PUERTA E', 'CALLE GENERAL RICARDOS 12 PLANTA 4, PUERTA E'), ('PAVILION DR BARCLAYCARD HOUSE', 'PAVILION DR BARCLAYCARD HOUSE'), ('CENTENARY SQUARE 1', 'CENTENARY SQUARE 1'), ('MAXIMILIANSTRASSE 54', 'MAXIMILIANSTRASSE 54'), ('PZ CATALUNYA NUM.1', 'PZ CATALUNYA NUM.1'), ('WESELER STRABE 230', 'WESELER STRABE 230'), ('WESTFERRY CIRCUS 7', 'WESTFERRY CIRCUS 7'), ('XXX', 'XXX')], max_length=70)),
                ('creditor_address_zip', models.CharField(choices=[('---', '---'), ('60325 FRANKFURT', '60325 FRANKFURT'), ('48009 BILBAO', '48009 BILBAO'), ('28012 MADRID', '28012 MADRID'), ('NN4 75G NORTHAMPTON', 'NN4 75G NORTHAMPTON'), ('B1 1HQ BIRMINGHAM', 'B1 1HQ BIRMINGHAM'), ('80538 MÜNCHEN', '80538 MÜNCHEN'), ('08850 GAVA', '08850 GAVA'), ('48151 MÜNSTER', '48151 MÜNSTER'), ('E14 4HD LONDON', 'E14 4HD LONDON'), ('XXX', 'XXX')], max_length=70)),
                ('creditor_agent_id', models.CharField(choices=[('---', '---'), ('DEUTSCHE BANK AG', 'DEUTSCHE BANK AG'), ('BANCO BILBAO VIZCAYA ARGENTARIA S.A.', 'BANCO BILBAO VIZCAYA ARGENTARIA S.A.'), ('BARCLAYS BANK UK PLC', 'BARCLAYS BANK UK PLC'), ('HSBC UK BANK PLC', 'HSBC UK BANK PLC'), ('BANKING CIRCLE', 'BANKING CIRCLE'), ('OLINDA SAS SUCURSAL EN ESPAÑA', 'OLINDA SAS SUCURSAL EN ESPAÑA'), ('SPARKASSE MÜNSTERLAND OST', 'SPARKASSE MÜNSTERLAND OST'), ('REVOLUT LIMITED', 'REVOLUT LIMITED'), ('XXX', 'XXX')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transferencia SEPA',
                'verbose_name_plural': 'Transferencias SEPA',
            },
        ),
        migrations.CreateModel(
            name='SepaCreditTransferDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_id', models.CharField(max_length=50)),
                ('transaction_status', models.CharField(max_length=10)),
                ('purpose_code', models.CharField(max_length=4)),
                ('requested_execution_date', models.DateField()),
                ('debtor_name', models.CharField(max_length=140)),
                ('debtor_iban', models.CharField(max_length=34, validators=[django.core.validators.RegexValidator('^[A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}$')])),
                ('debtor_currency', models.CharField(max_length=3)),
                ('creditor_name', models.CharField(max_length=70)),
                ('creditor_iban', models.CharField(max_length=34, validators=[django.core.validators.RegexValidator('^[A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}$')])),
                ('creditor_currency', models.CharField(max_length=3)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('end_to_end_id', models.CharField(max_length=36)),
                ('instruction_id', models.CharField(max_length=36)),
                ('remittance_structured', models.CharField(blank=True, max_length=140, null=True)),
                ('remittance_unstructured', models.CharField(blank=True, max_length=140, null=True)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='sepa_payment.sepacredittransfer')),
            ],
            options={
                'verbose_name': 'Detalles de Transferencia SEPA',
                'verbose_name_plural': 'Detalles de Transferencias SEPA',
            },
        ),
        migrations.CreateModel(
            name='SepaCreditTransferError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_code', models.IntegerField()),
                ('error_message', models.TextField()),
                ('message_id', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='sepa_payment.sepacredittransfer')),
            ],
            options={
                'verbose_name': 'Error de Transferencia SEPA',
                'verbose_name_plural': 'Errores de Transferencias SEPA',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SepaCreditTransferStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('RJCT', 'RJCT'), ('RCVD', 'RCVD'), ('ACCP', 'ACCP'), ('ACTP', 'ACTP'), ('ACSP', 'ACSP'), ('ACWC', 'ACWC'), ('ACWP', 'ACWP'), ('ACCC', 'ACCC'), ('CANC', 'CANC'), ('PDNG', 'PDNG')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='sepa_payment.sepacredittransfer')),
            ],
            options={
                'verbose_name': 'Estado de Transferencia SEPA',
                'verbose_name_plural': 'Estados de Transferencias SEPA',
                'ordering': ['-timestamp'],
            },
        ),
    ]
