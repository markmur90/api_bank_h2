openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/auth/profile/:
    get:
      operationId: listUserProfiles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/accounts/accounts/:
    get:
      operationId: listAccounts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
    post:
      operationId: createAccount
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
  /api/accounts/accounts/{id}/:
    get:
      operationId: retrieveAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
    put:
      operationId: updateAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/accounts/accounts/me/:
    get:
      operationId: retrieveAccount
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
  /api/transactions/:
    get:
      operationId: listTransactions
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
    post:
      operationId: createTransactionList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/transactions/{id}/:
    get:
      operationId: retrieveTransaction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transaction.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      tags:
      - api
    put:
      operationId: updateTransaction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transaction.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTransaction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transaction.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTransaction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transaction.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/transfers/transfers/{id}/:
    get:
      operationId: retrieveTransfer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transfer.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: ''
      tags:
      - api
    put:
      operationId: updateTransfer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transfer.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transfer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTransfer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transfer.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transfer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTransfer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transfer.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/transfers/transfers/all/:
    get:
      operationId: listTransfers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transfer'
          description: ''
      tags:
      - api
    post:
      operationId: createTransfer
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transfer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: ''
      tags:
      - api
  /api/collection/mandates/:
    get:
      operationId: listMandates
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mandate'
          description: ''
      tags:
      - api
    post:
      operationId: createMandate
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mandate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mandate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mandate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
          description: ''
      tags:
      - api
  /api/collection/mandates/{reference}/:
    get:
      operationId: retrieveMandate
      description: ''
      parameters:
      - name: reference
        in: path
        required: true
        description: A UUID string identifying this mandate.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
          description: ''
      tags:
      - api
    put:
      operationId: updateMandate
      description: ''
      parameters:
      - name: reference
        in: path
        required: true
        description: A UUID string identifying this mandate.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mandate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mandate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mandate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMandate
      description: ''
      parameters:
      - name: reference
        in: path
        required: true
        description: A UUID string identifying this mandate.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mandate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mandate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mandate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMandate
      description: ''
      parameters:
      - name: reference
        in: path
        required: true
        description: A UUID string identifying this mandate.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/collection/collections/:
    get:
      operationId: listCollections
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
          description: ''
      tags:
      - api
    post:
      operationId: createCollection
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
      tags:
      - api
  /api/collection/collections/{id}/:
    get:
      operationId: retrieveCollection
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this collection.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
      tags:
      - api
    put:
      operationId: updateCollection
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this collection.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCollection
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this collection.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCollection
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this collection.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/auth/login/:
    post:
      operationId: createLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/transfers/transfers/:
    post:
      operationId: createTransfer
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        status:
          enum:
          - active
          - closed
          type: string
        balance:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 10000000000
          minimum: -10000000000
        currency:
          type: string
          maxLength: 3
        iban:
          type: string
          maxLength: 34
        type:
          enum:
          - current_account
          - ring_fenced_account
          - settlement_account
          - specially_dedicated_account
          - trust_account
          - meal_voucher_account
          - booster_account
          type: string
        is_main:
          type: boolean
        user:
          type: integer
      required:
      - name
      - status
      - iban
      - type
      - user
    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        reference:
          type: string
          format: uuid
          readOnly: true
        source_account:
          type: string
          maxLength: 50
        destination_account:
          type: string
          maxLength: 50
        amount:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        local_iban:
          type: string
          maxLength: 34
        currency:
          type: string
          maxLength: 3
        direction:
          enum:
          - debit
          - credit
          type: string
        request_date:
          type: string
          format: date-time
        execution_date:
          type: string
          format: date-time
        accounting_date:
          type: string
          format: date-time
          nullable: true
        counterparty_name:
          type: string
          maxLength: 255
        internal_note:
          type: string
          nullable: true
        status:
          enum:
          - RJCT
          - RCVD
          - ACCP
          - ACTP
          - ACSP
          - ACWC
          - ACWP
          - ACCC
          - CANC
          - PDNG
          type: string
        custom_id:
          type: string
          nullable: true
          maxLength: 256
        custom_metadata:
          type: string
          nullable: true
        attachment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        idempotency_key:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        account:
          type: string
        user:
          type: integer
      required:
      - source_account
      - destination_account
      - amount
      - local_iban
      - direction
      - request_date
      - execution_date
      - counterparty_name
      - account
      - user
    Transfer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        reference:
          type: string
          format: uuid
          readOnly: true
        idempotency_key:
          type: string
          nullable: true
          maxLength: 255
        source_account:
          type: string
          maxLength: 50
        destination_account:
          type: string
          maxLength: 50
        amount:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        currency:
          type: string
          maxLength: 3
        local_iban:
          type: string
          maxLength: 34
        beneficiary_iban:
          type: string
          maxLength: 34
        transfer_type:
          enum:
          - standard
          - instant
          type: string
          nullable: true
        type_strategy:
          enum:
          - standard_only
          - instant_only
          - instant_if_available
          type: string
        status:
          enum:
          - RJCT
          - RCVD
          - ACCP
          - ACTP
          - ACSP
          - ACWC
          - ACWP
          - ACCC
          - CANC
          - PDNG
          type: string
        failure_code:
          type: string
          nullable: true
          maxLength: 50
        scheduled_date:
          type: string
          format: date
          nullable: true
        message:
          type: string
          nullable: true
        end_to_end_id:
          type: string
          nullable: true
          maxLength: 35
        internal_note:
          type: string
          nullable: true
        custom_id:
          type: string
          nullable: true
          maxLength: 256
        custom_metadata:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        account:
          type: string
          nullable: true
      required:
      - source_account
      - destination_account
      - amount
      - local_iban
      - beneficiary_iban
      - type_strategy
    Mandate:
      type: object
      properties:
        reference:
          type: string
          format: uuid
          readOnly: true
        scheme:
          enum:
          - b2b
          - core
          type: string
        debtor_name:
          type: string
          maxLength: 256
        signature_date:
          type: string
          format: date
        contract_reference:
          type: string
          nullable: true
          maxLength: 256
        is_active:
          type: boolean
        debtor_iban:
          type: string
      required:
      - scheme
      - debtor_name
      - signature_date
      - debtor_iban
    Collection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        scheduled_date:
          type: string
          format: date
        local_iban:
          type: string
          maxLength: 34
        status:
          enum:
          - pending
          - scheduled
          - confirmed
          - canceled
          - failed
          type: string
        message:
          type: string
          nullable: true
          maxLength: 256
        end_to_end_id:
          type: string
          nullable: true
          maxLength: 35
        internal_note:
          type: string
          nullable: true
          maxLength: 256
        custom_id:
          type: string
          nullable: true
          maxLength: 256
        custom_metadata:
          type: string
          nullable: true
        mandate:
          type: string
      required:
      - amount
      - scheduled_date
      - local_iban
      - mandate
