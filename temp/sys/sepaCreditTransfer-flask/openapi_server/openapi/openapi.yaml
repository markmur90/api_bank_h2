openapi: 3.0.1
info:
  contact:
    email: bank.api@db.com
    url: https://developer.db.com/contact
  description: Easily initiate SEPA credit transfer then if required cancel or get
    the status and get the details afterwards.
  termsOfService: https://developer.db.com/termsandconditions
  title: dbapi-sepaCreditTransfer
  version: v1
servers:
- url: https://simulator-api.db.com:443/gw/dbapi/paymentInitiation/payments/v1/sepaCreditTransfer
paths:
  /:
    post:
      description: This API is for creating a Sepa Credit Transfer
      operationId: root_post
      parameters:
      - description: Unique id of the service call. Must be present during retries
          to avoid multiple processing of the same request
        explode: false
        in: header
        name: idempotency-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "One time password required for SCT creation, you can use photo\
          \ tan or push tan. In case of push tan pass otp as 'PUSHTAN'. in case of\
          \ photo tan please generate otp by using transaction authorisation APIs.\
          \ there you must use requestType as 'SEPA_TRANSFER_GRANT'."
        explode: false
        in: header
        name: otp
        required: true
        schema:
          type: string
        style: simple
      - description: Free form key controlled by the caller e.g. uuid
        explode: false
        in: header
        name: Correlation-Id
        required: false
        schema:
          maxLength: 50
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SepaCreditTransferRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SepaCreditTransferResponse'
          description: successful operation
        "400":
          content:
            application/json:
              example:
              - code: 2
                message: Invalid value for %s.
              - code: 16
                message: "OTP invalid challenge response: %s."
              - code: 17
                message: Invalid OTP.
              - code: 114
                message: Unable to identify transaction by Id.
              - code: 127
                message: Booking date from must precede booking date to.
              - code: 131
                message: "Invalid value for 'sortBy'. Valid values are 'bookingDate[ASC]'\
                  \ and 'bookingDate[DESC]'."
              - code: 132
                message: not supported
              - code: 138
                message: it seems that you started a non pushTAN challenge. Please
                  use the PATCH endpoint to continue
              - code: 139
                message: it seems that you started a pushTAN challenge. Please use
                  the GET endpoint to continue
              - code: 6500
                message: "Parameters in the url or content type are incorrect, please\
                  \ check and retry."
              - code: 6501
                message: Contracting bank details are Invalid or Missing.
              - code: 6502
                message: The accepted instructed amount currency is EUR. Please correct
                  your entry and try again.
              - code: 6503
                message: Parameters submitted are missing or invalid.
              - code: 6505
                message: Invalid execution date.
              - code: 6507
                message: Cancellation is not allowed for this transaction.
              - code: 6509
                message: The parameter in the request does not match with the latest
                  Auth id.
              - code: 6510
                message: Current status does not allow second factor update with the
                  action provided.
              - code: 6511
                message: Invalid execution date.
              - code: 6515
                message: The source iban or account type is invalid.
              - code: 6516
                message: Cancellation is not allowed for this transaction.
              - code: 6517
                message: The accepted creditor account currency is EUR. Please correct
                  your entry and try again.
              - code: 6518
                message: 'The requested collection date should not be a public holiday
                  or in the weekends. Please try again. '
              - code: 6519
                message: The requested execution date should not be greater than 90
                  days in the future. Please try again.
              - code: 6520
                message: "Invalid value: requestedExecutionDate must match yyyy-MM-dd\
                  \ format."
              - code: 6521
                message: The accepted debtor account currency is EUR. Please correct
                  your entry and try again.
              - code: 6523
                message: There is no legal entity present for the source iban. Please
                  correct your entry and try again.
              - code: 6524
                message: You have reached the maximum allowable limit for the day.
                  Please wait until tomorrow to initiate additional transfers or reduce
                  your transfer amount and try again.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 400. See 'example'\
            \ property for possible values."
        "401":
          content:
            application/json:
              example:
              - code: 401
                message: The requested function requires a SCA Level Authentication.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 401. See 'example'\
            \ property for possible values."
        "404":
          content:
            application/json:
              example:
              - code: 6504
                message: The parameters in the request do not match the initial request.
              - code: 6508
                message: Sepa payment not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 404. See 'example'\
            \ property for possible values."
        "409":
          content:
            application/json:
              example:
              - code: 6506
                message: The IdempotencyId already being used.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 409. See 'example'\
            \ property for possible values."
      security:
      - api_auth_code:
        - sepa_credit_transfers
      - api_implicit:
        - sepa_credit_transfers
      - api_db_smart_access:
        - sepa_credit_transfers
      summary: Initiates a SEPA Credit Transfer
      tags:
      - create SEPA Credit Transfer
      x-openapi-router-controller: openapi_server.controllers.create_sepa_credit_transfer_controller
  /{paymentId}:
    delete:
      description: Cancel a previously initiated Sepa Credit Transfer.
      operationId: payment_id_delete
      parameters:
      - description: Payment Id of Sepa Credit Transfer
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique id of the service call. Must be present during retries
          to avoid multiple processing of the same request
        explode: false
        in: header
        name: idempotency-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "One time password required for SCT cancellation, you can use\
          \ photo tan or push tan. In case of push tan pass otp as 'PUSHTAN'. in case\
          \ of photo tan please generate otp by using transaction authorisation APIs.\
          \ there you must use requestType as 'SEPA_TRANSFER_CANCELLATION'."
        explode: false
        in: header
        name: otp
        required: true
        schema:
          type: string
        style: simple
      - description: Free form key controlled by the caller e.g. uuid
        explode: false
        in: header
        name: Correlation-Id
        required: false
        schema:
          maxLength: 50
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SepaCreditTransferResponse'
          description: successful operation
        "400":
          content:
            application/json:
              example:
              - code: 2
                message: Invalid value for %s.
              - code: 16
                message: "OTP invalid challenge response: %s."
              - code: 17
                message: Invalid OTP.
              - code: 114
                message: Unable to identify transaction by Id.
              - code: 127
                message: Booking date from must precede booking date to.
              - code: 131
                message: "Invalid value for 'sortBy'. Valid values are 'bookingDate[ASC]'\
                  \ and 'bookingDate[DESC]'."
              - code: 132
                message: not supported
              - code: 138
                message: it seems that you started a non pushTAN challenge. Please
                  use the PATCH endpoint to continue
              - code: 139
                message: it seems that you started a pushTAN challenge. Please use
                  the GET endpoint to continue
              - code: 6500
                message: "Parameters in the url or content type are incorrect, please\
                  \ check and retry."
              - code: 6501
                message: Contracting bank details are Invalid or Missing.
              - code: 6502
                message: The accepted instructed amount currency is EUR. Please correct
                  your entry and try again.
              - code: 6503
                message: Parameters submitted are missing or invalid.
              - code: 6505
                message: Invalid execution date.
              - code: 6507
                message: Cancellation is not allowed for this transaction.
              - code: 6509
                message: The parameter in the request does not match with the latest
                  Auth id.
              - code: 6510
                message: Current status does not allow second factor update with the
                  action provided.
              - code: 6511
                message: Invalid execution date.
              - code: 6515
                message: The source iban or account type is invalid.
              - code: 6516
                message: Cancellation is not allowed for this transaction.
              - code: 6517
                message: The accepted creditor account currency is EUR. Please correct
                  your entry and try again.
              - code: 6518
                message: 'The requested collection date should not be a public holiday
                  or in the weekends. Please try again. '
              - code: 6519
                message: The requested execution date should not be greater than 90
                  days in the future. Please try again.
              - code: 6520
                message: "Invalid value: requestedExecutionDate must match yyyy-MM-dd\
                  \ format."
              - code: 6521
                message: The accepted debtor account currency is EUR. Please correct
                  your entry and try again.
              - code: 6523
                message: There is no legal entity present for the source iban. Please
                  correct your entry and try again.
              - code: 6524
                message: You have reached the maximum allowable limit for the day.
                  Please wait until tomorrow to initiate additional transfers or reduce
                  your transfer amount and try again.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 400. See 'example'\
            \ property for possible values."
        "401":
          content:
            application/json:
              example:
              - code: 401
                message: The requested function requires a SCA Level Authentication.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 401. See 'example'\
            \ property for possible values."
        "404":
          content:
            application/json:
              example:
              - code: 6504
                message: The parameters in the request do not match the initial request.
              - code: 6508
                message: Sepa payment not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 404. See 'example'\
            \ property for possible values."
        "409":
          content:
            application/json:
              example:
              - code: 6506
                message: The IdempotencyId already being used.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 409. See 'example'\
            \ property for possible values."
      security:
      - api_auth_code:
        - sepa_credit_transfers
      - api_implicit:
        - sepa_credit_transfers
      - api_db_smart_access:
        - sepa_credit_transfers
      summary: Cancel the Sepa Credit Transfer
      tags:
      - Delete Sepa Credit Transfer
      x-openapi-router-controller: openapi_server.controllers.delete_sepa_credit_transfer_controller
    get:
      description: Retrieve the details of a previously initiated Sepa Credit Transfer.
      operationId: payment_id_get
      parameters:
      - description: Payment Id of Sepa Credit Transfer
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Free form key controlled by the caller e.g. uuid
        explode: false
        in: header
        name: Correlation-Id
        required: false
        schema:
          maxLength: 50
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SepaCreditTransferDetailsResponse'
          description: successful operation
        "400":
          content:
            application/json:
              example:
              - code: 2
                message: Invalid value for %s.
              - code: 16
                message: "OTP invalid challenge response: %s."
              - code: 17
                message: Invalid OTP.
              - code: 114
                message: Unable to identify transaction by Id.
              - code: 127
                message: Booking date from must precede booking date to.
              - code: 131
                message: "Invalid value for 'sortBy'. Valid values are 'bookingDate[ASC]'\
                  \ and 'bookingDate[DESC]'."
              - code: 132
                message: not supported
              - code: 138
                message: it seems that you started a non pushTAN challenge. Please
                  use the PATCH endpoint to continue
              - code: 139
                message: it seems that you started a pushTAN challenge. Please use
                  the GET endpoint to continue
              - code: 6500
                message: "Parameters in the url or content type are incorrect, please\
                  \ check and retry."
              - code: 6501
                message: Contracting bank details are Invalid or Missing.
              - code: 6502
                message: The accepted instructed amount currency is EUR. Please correct
                  your entry and try again.
              - code: 6503
                message: Parameters submitted are missing or invalid.
              - code: 6505
                message: Invalid execution date.
              - code: 6507
                message: Cancellation is not allowed for this transaction.
              - code: 6509
                message: The parameter in the request does not match with the latest
                  Auth id.
              - code: 6510
                message: Current status does not allow second factor update with the
                  action provided.
              - code: 6511
                message: Invalid execution date.
              - code: 6515
                message: The source iban or account type is invalid.
              - code: 6516
                message: Cancellation is not allowed for this transaction.
              - code: 6517
                message: The accepted creditor account currency is EUR. Please correct
                  your entry and try again.
              - code: 6518
                message: 'The requested collection date should not be a public holiday
                  or in the weekends. Please try again. '
              - code: 6519
                message: The requested execution date should not be greater than 90
                  days in the future. Please try again.
              - code: 6520
                message: "Invalid value: requestedExecutionDate must match yyyy-MM-dd\
                  \ format."
              - code: 6521
                message: The accepted debtor account currency is EUR. Please correct
                  your entry and try again.
              - code: 6523
                message: There is no legal entity present for the source iban. Please
                  correct your entry and try again.
              - code: 6524
                message: You have reached the maximum allowable limit for the day.
                  Please wait until tomorrow to initiate additional transfers or reduce
                  your transfer amount and try again.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 400. See 'example'\
            \ property for possible values."
        "401":
          content:
            application/json:
              example:
              - code: 401
                message: The requested function requires a SCA Level Authentication.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 401. See 'example'\
            \ property for possible values."
        "404":
          content:
            application/json:
              example:
              - code: 6504
                message: The parameters in the request do not match the initial request.
              - code: 6508
                message: Sepa payment not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 404. See 'example'\
            \ property for possible values."
        "409":
          content:
            application/json:
              example:
              - code: 6506
                message: The IdempotencyId already being used.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 409. See 'example'\
            \ property for possible values."
      security:
      - api_auth_code:
        - sepa_credit_transfers
      - api_implicit:
        - sepa_credit_transfers
      - api_db_smart_access:
        - sepa_credit_transfers
      summary: Retrieve the Sepa Credit Transfer details
      tags:
      - Get Sepa Credit Transfer details
      x-openapi-router-controller: openapi_server.controllers.get_sepa_credit_transfer_details_controller
    patch:
      description: "User can retry the second factor if it's failed, The new once's\
        \ will be initiated after deleting the existing once's."
      operationId: payment_id_patch
      parameters:
      - description: Payment Id of Sepa Credit Transfer
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique id of the service call. Must be present during retries
          to avoid multiple processing of the same request
        explode: false
        in: header
        name: idempotency-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "One time password required for second factor update, in case\
          \ of push tan use 'PUSHTAN'. in case of photo tan please generate otp by\
          \ using transaction authorisation APIs. there you must use requestType corresponds\
          \ to the action. for create action it must be 'SEPA_TRANSFER_GRANT' and\
          \ for cancel 'SEPA_TRANSFER_CANCELLATION'."
        explode: false
        in: header
        name: otp
        required: true
        schema:
          type: string
        style: simple
      - description: Free form key controlled by the caller e.g. uuid
        explode: false
        in: header
        name: Correlation-Id
        required: false
        schema:
          maxLength: 50
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SepaCreditTransferUpdateScaRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SepaCreditTransferResponse'
          description: successful operation
        "400":
          content:
            application/json:
              example:
              - code: 2
                message: Invalid value for %s.
              - code: 16
                message: "OTP invalid challenge response: %s."
              - code: 17
                message: Invalid OTP.
              - code: 114
                message: Unable to identify transaction by Id.
              - code: 127
                message: Booking date from must precede booking date to.
              - code: 131
                message: "Invalid value for 'sortBy'. Valid values are 'bookingDate[ASC]'\
                  \ and 'bookingDate[DESC]'."
              - code: 132
                message: not supported
              - code: 138
                message: it seems that you started a non pushTAN challenge. Please
                  use the PATCH endpoint to continue
              - code: 139
                message: it seems that you started a pushTAN challenge. Please use
                  the GET endpoint to continue
              - code: 6500
                message: "Parameters in the url or content type are incorrect, please\
                  \ check and retry."
              - code: 6501
                message: Contracting bank details are Invalid or Missing.
              - code: 6502
                message: The accepted instructed amount currency is EUR. Please correct
                  your entry and try again.
              - code: 6503
                message: Parameters submitted are missing or invalid.
              - code: 6505
                message: Invalid execution date.
              - code: 6507
                message: Cancellation is not allowed for this transaction.
              - code: 6509
                message: The parameter in the request does not match with the latest
                  Auth id.
              - code: 6510
                message: Current status does not allow second factor update with the
                  action provided.
              - code: 6511
                message: Invalid execution date.
              - code: 6515
                message: The source iban or account type is invalid.
              - code: 6516
                message: Cancellation is not allowed for this transaction.
              - code: 6517
                message: The accepted creditor account currency is EUR. Please correct
                  your entry and try again.
              - code: 6518
                message: 'The requested collection date should not be a public holiday
                  or in the weekends. Please try again. '
              - code: 6519
                message: The requested execution date should not be greater than 90
                  days in the future. Please try again.
              - code: 6520
                message: "Invalid value: requestedExecutionDate must match yyyy-MM-dd\
                  \ format."
              - code: 6521
                message: The accepted debtor account currency is EUR. Please correct
                  your entry and try again.
              - code: 6523
                message: There is no legal entity present for the source iban. Please
                  correct your entry and try again.
              - code: 6524
                message: You have reached the maximum allowable limit for the day.
                  Please wait until tomorrow to initiate additional transfers or reduce
                  your transfer amount and try again.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 400. See 'example'\
            \ property for possible values."
        "401":
          content:
            application/json:
              example:
              - code: 401
                message: The requested function requires a SCA Level Authentication.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 401. See 'example'\
            \ property for possible values."
        "404":
          content:
            application/json:
              example:
              - code: 6504
                message: The parameters in the request do not match the initial request.
              - code: 6508
                message: Sepa payment not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 404. See 'example'\
            \ property for possible values."
        "409":
          content:
            application/json:
              example:
              - code: 6506
                message: The IdempotencyId already being used.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 409. See 'example'\
            \ property for possible values."
      security:
      - api_auth_code:
        - sepa_credit_transfers
      - api_implicit:
        - sepa_credit_transfers
      - api_db_smart_access:
        - sepa_credit_transfers
      summary: Second factor retry for Sepa Credit Transfer
      tags:
      - Second factor retry for Sepa Credit Transfer
      x-openapi-router-controller: openapi_server.controllers.second_factor_retry_for_sepa_credit_transfer_controller
  /{paymentId}/status:
    get:
      description: Retrieve the status of a previously initiated Sepa Credit Transfer.
      operationId: payment_id_status_get
      parameters:
      - description: Payment Id of Sepa Credit Transfer
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Free form key controlled by the caller e.g. uuid
        explode: false
        in: header
        name: Correlation-Id
        required: false
        schema:
          maxLength: 50
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SepaCreditTransferResponse'
          description: successful operation
        "400":
          content:
            application/json:
              example:
              - code: 2
                message: Invalid value for %s.
              - code: 16
                message: "OTP invalid challenge response: %s."
              - code: 17
                message: Invalid OTP.
              - code: 114
                message: Unable to identify transaction by Id.
              - code: 127
                message: Booking date from must precede booking date to.
              - code: 131
                message: "Invalid value for 'sortBy'. Valid values are 'bookingDate[ASC]'\
                  \ and 'bookingDate[DESC]'."
              - code: 132
                message: not supported
              - code: 138
                message: it seems that you started a non pushTAN challenge. Please
                  use the PATCH endpoint to continue
              - code: 139
                message: it seems that you started a pushTAN challenge. Please use
                  the GET endpoint to continue
              - code: 6500
                message: "Parameters in the url or content type are incorrect, please\
                  \ check and retry."
              - code: 6501
                message: Contracting bank details are Invalid or Missing.
              - code: 6502
                message: The accepted instructed amount currency is EUR. Please correct
                  your entry and try again.
              - code: 6503
                message: Parameters submitted are missing or invalid.
              - code: 6505
                message: Invalid execution date.
              - code: 6507
                message: Cancellation is not allowed for this transaction.
              - code: 6509
                message: The parameter in the request does not match with the latest
                  Auth id.
              - code: 6510
                message: Current status does not allow second factor update with the
                  action provided.
              - code: 6511
                message: Invalid execution date.
              - code: 6515
                message: The source iban or account type is invalid.
              - code: 6516
                message: Cancellation is not allowed for this transaction.
              - code: 6517
                message: The accepted creditor account currency is EUR. Please correct
                  your entry and try again.
              - code: 6518
                message: 'The requested collection date should not be a public holiday
                  or in the weekends. Please try again. '
              - code: 6519
                message: The requested execution date should not be greater than 90
                  days in the future. Please try again.
              - code: 6520
                message: "Invalid value: requestedExecutionDate must match yyyy-MM-dd\
                  \ format."
              - code: 6521
                message: The accepted debtor account currency is EUR. Please correct
                  your entry and try again.
              - code: 6523
                message: There is no legal entity present for the source iban. Please
                  correct your entry and try again.
              - code: 6524
                message: You have reached the maximum allowable limit for the day.
                  Please wait until tomorrow to initiate additional transfers or reduce
                  your transfer amount and try again.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 400. See 'example'\
            \ property for possible values."
        "401":
          content:
            application/json:
              example:
              - code: 401
                message: The requested function requires a SCA Level Authentication.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 401. See 'example'\
            \ property for possible values."
        "404":
          content:
            application/json:
              example:
              - code: 6504
                message: The parameters in the request do not match the initial request.
              - code: 6508
                message: Sepa payment not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 404. See 'example'\
            \ property for possible values."
        "409":
          content:
            application/json:
              example:
              - code: 6506
                message: The IdempotencyId already being used.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unsuccessful operation, returns http status 409. See 'example'\
            \ property for possible values."
      security:
      - api_auth_code:
        - sepa_credit_transfers
      - api_implicit:
        - sepa_credit_transfers
      - api_db_smart_access:
        - sepa_credit_transfers
      summary: 'Retrieve the status of the Sepa Credit Transfer '
      tags:
      - get the status of Sepa Credit Transfer
      x-openapi-router-controller: openapi_server.controllers.get_the_status_of_sepa_credit_transfer_controller
components:
  schemas:
    SepaCreditTransferRequest:
      example:
        debtorAccount:
          iban: iban
          currency: EUR
        paymentIdentification:
          instructionId: instructionId
          endToEndId: endToEndId
        requestedExecutionDate: 2000-01-23
        debtor:
          debtorName: debtorName
          debtorPostalAddress:
            country: DE
            addressLine:
              zipCodeAndCity: zipCodeAndCity
              streetAndHouseNumber: streetAndHouseNumber
        creditorAgent:
          financialInstitutionId: financialInstitutionId
        remittanceInformationStructured: remittanceInformationStructured
        purposeCode: purposeCode
        creditorAccount:
          iban: iban
          currency: EUR
        instructedAmount:
          amount: 58.13
          currency: EUR
        creditor:
          creditorName: creditorName
          creditorPostalAddress:
            country: DE
            addressLine:
              zipCodeAndCity: zipCodeAndCity
              streetAndHouseNumber: streetAndHouseNumber
        remittanceInformationUnstructured: remittanceInformationUnstructured
      properties:
        purposeCode:
          description: ExternalPurpose1Code
          maxLength: 4
          minLength: 4
          title: purposeCode
          type: string
        requestedExecutionDate:
          description: "must match yyyy-MM-dd format, also in CET timezone."
          format: date
          title: requestedExecutionDate
          type: string
        debtor:
          $ref: '#/components/schemas/Debtor'
        debtorAccount:
          $ref: '#/components/schemas/DebtorAccount'
        paymentIdentification:
          $ref: '#/components/schemas/PaymentIdentification'
        instructedAmount:
          $ref: '#/components/schemas/InstructedAmount'
        creditorAgent:
          $ref: '#/components/schemas/CreditorAgent'
        creditor:
          $ref: '#/components/schemas/Creditor'
        creditorAccount:
          $ref: '#/components/schemas/CreditorAccount'
        remittanceInformationStructured:
          description: recommended to be used in each transaction ; contract related
            - references to the business; it depends on the client what they want
            to include
          maxLength: 140
          title: remittanceInformationStructured
          type: string
        remittanceInformationUnstructured:
          description: "recommended to be used in each transaction ; contract related\
            \ : references to the business; it depends on the client what they want\
            \ to include"
          maxLength: 140
          title: remittanceInformationUnstructured
          type: string
      required:
      - creditor
      - creditorAccount
      - creditorAgent
      - debtor
      - debtorAccount
      - instructedAmount
      title: SepaCreditTransferRequest
      type: object
    SepaCreditTransferUpdateScaRequest:
      example:
        action: CREATE
        authId: 232ed5b7-fc70-4c67-98bb-bf95b3300001
      properties:
        action:
          $ref: '#/components/schemas/Action'
        authId:
          description: "Authentication Id used for update SCA status SEPA payment,\
            \ It will be valid for 5 minutes."
          example: 232ed5b7-fc70-4c67-98bb-bf95b3300001
          title: authId
          type: string
      required:
      - action
      - authId
      title: SepaCreditTransferUpdateScaRequest
      type: object
    SepaCreditTransferResponse:
      example:
        transactionStatus: ACCP
        paymentId: 232ed5b7-fc70-4c67-98bb-bf95b3300001
        authId: 232ed5b7-fc70-4c67-98bb-bf95b3300001
      properties:
        transactionStatus:
          $ref: '#/components/schemas/TransactionStatus'
        paymentId:
          description: resource identification of the generated paymentinitiation
            resource ('Transaction-ID' from the header which is populated with the
            Intra Bank ID); should be available at least when status is PDNG or ACCP
          example: 232ed5b7-fc70-4c67-98bb-bf95b3300001
          title: paymentId
          type: string
        authId:
          description: "Authentication Id used for update SCA status SEPA payment,\
            \ It will be valid for 5 minutes."
          example: 232ed5b7-fc70-4c67-98bb-bf95b3300001
          title: authId
          type: string
      required:
      - authId
      - paymentId
      - transactionStatus
      title: SepaCreditTransferResponse
      type: object
    SepaCreditTransferDetailsResponse:
      example:
        debtorAccount:
          iban: iban
          currency: EUR
        transactionStatus: ACCP
        creditorAgent:
          financialInstitutionId: financialInstitutionId
        remittanceInformationStructured: remittanceInformationStructured
        paymentIdentification:
          instructionId: instructionId
          endToEndId: endToEndId
        requestedExecutionDate: 2000-01-23
        debtor:
          debtorName: debtorName
          debtorPostalAddress:
            country: DE
            addressLine:
              zipCodeAndCity: zipCodeAndCity
              streetAndHouseNumber: streetAndHouseNumber
        paymentId: 232ed5b7-fc70-4c67-98bb-bf95b3300001
        purposeCode: purposeCode
        creditorAccount:
          iban: iban
          currency: EUR
        creditor:
          creditorName: creditorName
          creditorPostalAddress:
            country: DE
            addressLine:
              zipCodeAndCity: zipCodeAndCity
              streetAndHouseNumber: streetAndHouseNumber
        instructedAmount:
          amount: 58.13
          currency: EUR
        remittanceInformationUnstructured: remittanceInformationUnstructured
      properties:
        transactionStatus:
          $ref: '#/components/schemas/TransactionStatus'
        paymentId:
          description: resource identification of the generated paymentinitiation
            resource ('Transaction-ID' from the header which is populated with the
            Intra Bank ID); should be available at least when status is PDNG or ACCP
          example: 232ed5b7-fc70-4c67-98bb-bf95b3300001
          title: paymentId
          type: string
        purposeCode:
          description: ExternalPurpose1Code
          maxLength: 4
          minLength: 4
          title: purposeCode
          type: string
        requestedExecutionDate:
          description: "must match yyyy-MM-dd format, also in CET timezone."
          format: date
          title: requestedExecutionDate
          type: string
        debtor:
          $ref: '#/components/schemas/Debtor'
        debtorAccount:
          $ref: '#/components/schemas/DebtorAccount'
        creditorAgent:
          $ref: '#/components/schemas/CreditorAgent'
        creditor:
          $ref: '#/components/schemas/Creditor'
        creditorAccount:
          $ref: '#/components/schemas/CreditorAccount'
        paymentIdentification:
          $ref: '#/components/schemas/PaymentIdentification'
        instructedAmount:
          $ref: '#/components/schemas/InstructedAmount'
        remittanceInformationStructured:
          description: recommended to be used in each transaction ; contract related
            - references to the business; it depends on the client what they want
            to include
          maxLength: 140
          title: remittanceInformationStructured
          type: string
        remittanceInformationUnstructured:
          description: "recommended to be used in each transaction ; contract related\
            \ : references to the business; it depends on the client what they want\
            \ to include"
          maxLength: 140
          title: remittanceInformationUnstructured
          type: string
      required:
      - creditor
      - creditorAccount
      - creditorAgent
      - debtor
      - debtorAccount
      - instructedAmount
      - paymentId
      - purposeCode
      - remittanceInformationStructured
      - remittanceInformationUnstructured
      - requestedExecutionDate
      - transactionStatus
      title: SepaCreditTransferDetailsResponse
      type: object
    PurposeCode:
      description: ExternalPurpose1Code
      maxLength: 4
      minLength: 4
      title: purposeCode
      type: string
    RequestedExecutionDate:
      description: "must match yyyy-MM-dd format, also in CET timezone."
      format: date
      title: requestedExecutionDate
      type: string
    Debtor:
      example:
        debtorName: debtorName
        debtorPostalAddress:
          country: DE
          addressLine:
            zipCodeAndCity: zipCodeAndCity
            streetAndHouseNumber: streetAndHouseNumber
      properties:
        debtorName:
          maxLength: 140
          title: DebtorName
          type: string
        debtorPostalAddress:
          $ref: '#/components/schemas/Address'
      required:
      - debtorName
      title: Debtor
      type: object
    DebtorAccount:
      example:
        iban: iban
        currency: EUR
      properties:
        iban:
          description: The IBAN of this account.
          pattern: "[A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}"
          title: IBAN
          type: string
        currency:
          description: ISO 4217 Alpha 3 currency code.
          example: EUR
          pattern: "[A-Z]{3}"
          title: Currency
          type: string
      required:
      - iban
      title: DebtorAccount
      type: object
    PaymentIdentification:
      example:
        instructionId: instructionId
        endToEndId: endToEndId
      properties:
        endToEndId:
          description: Unique identification assigned by the initiating party to unambiguously
            identify the transaction
          pattern: "[a-zA-Z0-9.-]{1,35}"
          title: EndToEndId
          type: string
        instructionId:
          pattern: "[a-zA-Z0-9.-]{1,35}"
          title: InstructionId
          type: string
      title: PaymentIdentification
      type: object
    InstructedAmount:
      example:
        amount: 58.13
        currency: EUR
      properties:
        amount:
          example: 58.13
          format: double
          title: amount
          type: number
        currency:
          description: ISO 4217 Alpha 3 currency code.
          example: EUR
          pattern: "[A-Z]{3}"
          title: Currency
          type: string
      required:
      - amount
      - currency
      title: InstructedAmount
      type: object
    CreditorAgent:
      example:
        financialInstitutionId: financialInstitutionId
      properties:
        financialInstitutionId:
          description: ""
          title: FinancialInstitutionId
          type: string
      required:
      - financialInstitutionId
      title: CreditorAgent
      type: object
    Creditor:
      example:
        creditorName: creditorName
        creditorPostalAddress:
          country: DE
          addressLine:
            zipCodeAndCity: zipCodeAndCity
            streetAndHouseNumber: streetAndHouseNumber
      properties:
        creditorName:
          description: Name by which a party is known and which is usually used to
            identify that party
          maxLength: 70
          title: CreditorName
          type: string
        creditorPostalAddress:
          $ref: '#/components/schemas/Address'
      required:
      - creditorName
      title: Creditor
      type: object
    CreditorAccount:
      example:
        iban: iban
        currency: EUR
      properties:
        iban:
          description: The IBAN of this account.
          pattern: "[A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}"
          title: IBAN
          type: string
        currency:
          description: ISO 4217 Alpha 3 currency code.
          example: EUR
          pattern: "[A-Z]{3}"
          title: Currency
          type: string
      required:
      - currency
      - iban
      title: CreditorAccount
      type: object
    RemittanceInformationStructured:
      description: recommended to be used in each transaction ; contract related -
        references to the business; it depends on the client what they want to include
      maxLength: 140
      title: remittanceInformationStructured
      type: string
    RemittanceInformationUnstructured:
      description: "recommended to be used in each transaction ; contract related\
        \ : references to the business; it depends on the client what they want to\
        \ include"
      maxLength: 140
      title: remittanceInformationUnstructured
      type: string
    DebtorName:
      maxLength: 140
      title: DebtorName
      type: string
    Address:
      example:
        country: DE
        addressLine:
          zipCodeAndCity: zipCodeAndCity
          streetAndHouseNumber: streetAndHouseNumber
      properties:
        country:
          description: ISO 3166-1 alpha-2 country code
          example: DE
          maxLength: 2
          minLength: 2
          title: country
          type: string
        addressLine:
          $ref: '#/components/schemas/AddressLine'
      title: Address
      type: object
    AddressLine:
      example:
        zipCodeAndCity: zipCodeAndCity
        streetAndHouseNumber: streetAndHouseNumber
      properties:
        streetAndHouseNumber:
          description: Street name and house number
          maxLength: 70
          title: streetAndHouseNumber
          type: string
        zipCodeAndCity:
          description: Zip code and city name
          maxLength: 70
          title: zipCodeAndCity
          type: string
      title: AddressLine
      type: object
    EndToEndId:
      description: Unique identification assigned by the initiating party to unambiguously
        identify the transaction
      pattern: "[a-zA-Z0-9.-]{1,35}"
      title: EndToEndId
      type: string
    InstructionId:
      pattern: "[a-zA-Z0-9.-]{1,35}"
      title: InstructionId
      type: string
    Currency:
      description: ISO 4217 Alpha 3 currency code.
      example: EUR
      pattern: "[A-Z]{3}"
      title: Currency
      type: string
    FinancialInstitutionId:
      description: ""
      title: FinancialInstitutionId
      type: string
    CreditorName:
      description: Name by which a party is known and which is usually used to identify
        that party
      maxLength: 70
      title: CreditorName
      type: string
    IBAN:
      description: The IBAN of this account.
      pattern: "[A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}"
      title: IBAN
      type: string
    ErrorResponse:
      description: Default error response message
      example:
        code: 0
        messageId: messageId
        message: message
      properties:
        code:
          description: The error code
          title: code
          type: integer
        message:
          description: Description of the belonging error code.
          title: message
          type: string
        messageId:
          description: dbAPI internal message-id (unique identifier) that allow reference
            to each of your API calls.
          title: messageId
          type: string
      required:
      - code
      - message
      title: ErrorResponse
      type: object
    TransactionStatus:
      description: "Specifies the status of a transaction in a coded form based on\
        \ SEPA Rulebook: AT-R1 The type of R-message 'RJCT’ in case of a negative\
        \ confirmation or reject, or 'ACCP' in case of a positive confirmation. 'PDNG'\
        \ value is possible in case Payment Order Response is sent for not yet rejected\
        \ transaction"
      enum:
      - RJCT
      - RCVD
      - ACCP
      - ACTC
      - ACSP
      - ACSC
      - ACWC
      - ACWP
      - ACCC
      - CANC
      - PDNG
      example: ACCP
      title: TransactionStatus
      type: string
    Action:
      description: "defines the action for retry second factor, CREATE is for updating\
        \ the second factor for create Sepa Credit Transfer and  CANCEL is for cancel"
      enum:
      - CREATE
      - CANCEL
      title: Action
      type: string
    PaymentId:
      description: resource identification of the generated paymentinitiation resource
        ('Transaction-ID' from the header which is populated with the Intra Bank ID);
        should be available at least when status is PDNG or ACCP
      example: 232ed5b7-fc70-4c67-98bb-bf95b3300001
      title: paymentId
      type: string
    AuthId:
      description: "Authentication Id used for update SCA status SEPA payment, It\
        \ will be valid for 5 minutes."
      example: 232ed5b7-fc70-4c67-98bb-bf95b3300001
      title: authId
      type: string
  securitySchemes:
    api_auth_code:
      flows:
        authorizationCode:
          authorizationUrl: https://simulator-api.db.com:443/gw/oidc/authorize
          scopes:
            sepa_credit_transfers: Initiate and check status of Sepa Credit Transfer
            openid: Request access to OpenId Connect functionality
            offline_access: Request an OAuth2 Refresh Token
          tokenUrl: https://simulator-api.db.com:443/gw/oidc/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_api_auth_code
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_api_auth_code
    api_implicit:
      flows:
        implicit:
          authorizationUrl: https://simulator-api.db.com:443/gw/oidc/authorize
          scopes:
            sepa_credit_transfers: Initiate and check status of Sepa Credit Transfer
            openid: Request access to OpenId Connect functionality
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_api_implicit
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_api_implicit
    api_db_smart_access:
      flows:
        clientCredentials:
          scopes:
            sepa_credit_transfers: Initiate and check status of Sepa Credit Transfer
          tokenUrl: https://simulator-api.db.com:443/gw/oidc/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_api_db_smart_access
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_api_db_smart_access
