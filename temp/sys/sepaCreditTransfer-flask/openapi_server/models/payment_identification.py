from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
import re
from openapi_server import util

import re  # noqa: E501

class PaymentIdentification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_to_end_id=None, instruction_id=None):  # noqa: E501
        """PaymentIdentification - a model defined in OpenAPI

        :param end_to_end_id: The end_to_end_id of this PaymentIdentification.  # noqa: E501
        :type end_to_end_id: str
        :param instruction_id: The instruction_id of this PaymentIdentification.  # noqa: E501
        :type instruction_id: str
        """
        self.openapi_types = {
            'end_to_end_id': str,
            'instruction_id': str
        }

        self.attribute_map = {
            'end_to_end_id': 'endToEndId',
            'instruction_id': 'instructionId'
        }

        self._end_to_end_id = end_to_end_id
        self._instruction_id = instruction_id

    @classmethod
    def from_dict(cls, dikt) -> 'PaymentIdentification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PaymentIdentification of this PaymentIdentification.  # noqa: E501
        :rtype: PaymentIdentification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_to_end_id(self) -> str:
        """Gets the end_to_end_id of this PaymentIdentification.

        Unique identification assigned by the initiating party to unambiguously identify the transaction  # noqa: E501

        :return: The end_to_end_id of this PaymentIdentification.
        :rtype: str
        """
        return self._end_to_end_id

    @end_to_end_id.setter
    def end_to_end_id(self, end_to_end_id: str):
        """Sets the end_to_end_id of this PaymentIdentification.

        Unique identification assigned by the initiating party to unambiguously identify the transaction  # noqa: E501

        :param end_to_end_id: The end_to_end_id of this PaymentIdentification.
        :type end_to_end_id: str
        """
        if end_to_end_id is not None and not re.search(r'[a-zA-Z0-9.-]{1,35}', end_to_end_id):  # noqa: E501
            raise ValueError(r"Invalid value for `end_to_end_id`, must be a follow pattern or equal to `/[a-zA-Z0-9.-]{1,35}/`")  # noqa: E501

        self._end_to_end_id = end_to_end_id

    @property
    def instruction_id(self) -> str:
        """Gets the instruction_id of this PaymentIdentification.


        :return: The instruction_id of this PaymentIdentification.
        :rtype: str
        """
        return self._instruction_id

    @instruction_id.setter
    def instruction_id(self, instruction_id: str):
        """Sets the instruction_id of this PaymentIdentification.


        :param instruction_id: The instruction_id of this PaymentIdentification.
        :type instruction_id: str
        """
        if instruction_id is not None and not re.search(r'[a-zA-Z0-9.-]{1,35}', instruction_id):  # noqa: E501
            raise ValueError(r"Invalid value for `instruction_id`, must be a follow pattern or equal to `/[a-zA-Z0-9.-]{1,35}/`")  # noqa: E501

        self._instruction_id = instruction_id
