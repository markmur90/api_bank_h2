# coding: utf-8

"""
    dbapi-processingOrders

    Create a document processing order. Limited access for special consumers only.

    The version of the OpenAPI document: v2
    Contact: bank.api@db.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.processing_order_metadata_events_inner import ProcessingOrderMetadataEventsInner

class TestProcessingOrderMetadataEventsInner(unittest.TestCase):
    """ProcessingOrderMetadataEventsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProcessingOrderMetadataEventsInner:
        """Test ProcessingOrderMetadataEventsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProcessingOrderMetadataEventsInner`
        """
        model = ProcessingOrderMetadataEventsInner()
        if include_optional:
            return ProcessingOrderMetadataEventsInner(
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = 'INBOX_ORIGINATOR'
            )
        else:
            return ProcessingOrderMetadataEventsInner(
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = 'INBOX_ORIGINATOR',
        )
        """

    def testProcessingOrderMetadataEventsInner(self):
        """Test ProcessingOrderMetadataEventsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
