
Empezando
Para comenzar con nuestra API de Premium Bank, primero hable con su banquero.Él o ella necesita activar la función API en el espacio de trabajo de su Banco de Memo.
Una vez que su banquero le haya otorgado un acceso a la API, puede configurar su autenticación utilizando nuestra interfaz web.Para hacerlo, navegue a la sección API del espacio de trabajo de su banco de notas.
Los propietarios y administradores pueden crear aplicaciones y administrar sus permisos.También pueden invitar a los colaboradores a una aplicación, lo que les permite administrar certificados, IP Permitir listas y webhooks.
Una vez que se haya creado una solicitud y un certificado, tendrá tres información que le permitirá autenticar solicitudes en la API:

    a certificate and its SHA256 thumbprint;
    a secret code;
    a cryptographic private key.


Autenticación
Nuestra autenticación se basa en JSON Web Token (JWT) y JSON Web Signature (JWS).
No importa qué lenguaje de codificación esté utilizando, debe haber una biblioteca para manejar la parte criptográfica para usted.Todo lo que necesita es alimentarlo con el encabezado correcto y las reclamaciones de carga útil.

En el encabezado JWT:
  ALG debe ser RS256, ya que requerimos una firma RSA-SHA256.
  Typ debe ser JWT.
  X5T#S256 es la huella digital SHA256 del certificado, que puede encontrar en la interfaz de usuario.

In the JWT payload:
  Sub debe ser el método de la solicitud, seguido de un espacio y la ruta completa, incluidos los parámetros de consulta.
  AUD debe ser el dominio en el que realiza la solicitud, p.api.memo.bank.
  IAT debe ser la marca de tiempo en la que creó el token.Tenga en cuenta que aceptamos solo 5 segundos de diferencia con el tiempo del servidor, para mitigar el sesgo del reloj.
  JTI debe ser un identificador único para el token.Debe ser diferente para cada solicitud y respetar el formato UUID.
  SEC debe ser la información secreta que obtuvo durante el proceso de configuración en la interfaz de usuario.Este es un reclamo personalizado, no cubierto por la especificación JWT.
  DIG#S256 debe ser una base64URL_Encoding (SHA_256 (cuerpo)), que se proporcionará solo si la solicitud tiene un cuerpo, por lo que, por ejemplo, no es necesario en las solicitudes (ver Base64URL_Encoding).Este es un reclamo personalizado, no cubierto por la especificación JWT.

El JWT debe firmarse con la clave privada que generó durante la configuración (ver comenzando) e incluidos en los encabezados HTTP de la solicitud, como una autorización de token de portador estándar: Bearer <Token>.

Example JWT header and payload
{
  "alg": "RS256",
  "typ": "JWT",
  "x5t#S256": "3A14ZcxIaasp4RHaYReL7wevm3oDzn7ZqmgqScCMY74"
}
{
  "sub": "POST /v1/transfers",
  "aud": "api.memo.bank",
  "iat": 1657055009,
  "jti": "5525620b-9dcd-4562-8c6c-60984f46cb48",
  "sec": "a2029d646c94406d2945b7a2b31e4fb3ff09a6d0ae29144380775b5471c4e846",
  "dig#S256": "lW6N_kO2gPMsMkzXyn028gWwrnaN0kJaiy7FMJcR0Ek"
}


Solicitudes ideMPotent
Nuestra API de Premium Bank admite idempotencia para volver a intentar las solicitudes de forma segura sin realizar accidentalmente la misma operación dos veces.Esto es útil cuando una llamada API se interrumpe en tránsito y no recibe una respuesta.Por ejemplo, si no se realiza una solicitud para crear una transferencia debido a un error de conexión de red, puede volver a intentar la solicitud con la misma clave de idempotencia para garantizar que solo se crea la transferencia única intentada originalmente.
Para realizar una solicitud ideMpotent, proporcione un encabezado adicional de solicitud de clave de idempotencia.Recomendamos usar un UUID V4.En caso de que la llamada API falle con un error de red, o responda con un código de estado 5xx, 409 o 429, esperamos que la persona que llama realice reintentos con el mismo encabezado de clave de idempotencia hasta que responda de manera diferente.Para cualquier otro código de respuesta, especialmente otros errores 4xx, no tiene sentido intentar reintentos, ya que siempre enviaremos el mismo resultado.
Cuando se reproduce una respuesta previa, la respuesta se envía con un encabezado HTTP adicional ideMpotent-Replayed: True.
Las claves de idempotencia persistirán en la API durante 24 horas.Si aún se procesa una solicitud original cuando se reutiliza una clave de idempotencia, la API devolverá un error de conflicto 409 (que es seguro volver a intentarlo).
Las solicitudes posteriores deben ser idénticas a la solicitud original o la API devolverá un error de entidad 422 sin procesar.No admitimos establecer una clave de idempotencia en las solicitudes GET y Eliminar, ya que estas solicitudes son inherentemente ideempotentes.

curl --request POST \
  --url https://api.memo.bank/v1/transfers \
  --header 'Authorization: Bearer ***' \
  --header 'Idempotency-Key: 19b390d1-e7d4-4e27-abe2-49cac9b41ba1' \
  --header 'Content-Type: application/json' \
  --data '{...}'


Errors
Our Premium Bank API uses standard HTTP response codes to indicate the success or failure of requests. Codes in the 2xx range indicate success; codes in the 4xx and 5xx ranges indicate errors. The format of error messages is unified, and can be distinguished by their code key. The message is a plain English explanation of the problem.
{
  "code": "error_code",
  "message": "Example error message.",
}


Versioning and backwards compatibility
Our Premium Bank API is versioned by path (/v1/...). When we introduce breaking changes, we will increase this version number. We will of course continually make backward-compatible changes without increasing the version number.
Examples of things we do not consider breaking include:

    Adding new API resources.
    Adding new optional request parameters to existing API methods.
    Adding new properties to existing API responses. We will occasionally move response fields in the API, and will continue to return the existing field in its previous location, while removing it from this documentation.
    Changing the order of properties in existing API responses.
    Changing the length or format of opaque strings, such as object IDs, error messages, and other human-readable strings. Strings that are marked as const or enum in this documentation will not change.
    Adding new EventType or ResourceType enum values for webhooks.
    Adding new TransactionSource enum values for transactions.


Rate limiting
We enforce a rate limit on how many HTTP requests can be made in a given period. When the limit is reached, our Premium Bank API will return an error 429 Too Many Requests.
To allow you to handle this rate limiting in a programmatic way, the following headers are sent along every response:

    RateLimit-Limit: total number of available requests between two quota resets;
    RateLimit-Remaining: number of available requests until the quota is reset;
    RateLimit-Reset: time remaining (in seconds) until the quota is reset.


FAQ
How do Transactions differ from Transfers and Collections?
Transfers and collections are types of Transaction that you can initiate through the API. They have dedicated endpoint resources in order for you to follow their lifecycle which is very detailed. On the other side, Transactions allows you to follow all transactions lifecycle even the ones that you did not initiate through the API (incoming transactions, card transactions, etc). Since Transfers and collections are a subset of Transactions, some webhooks will be triggered at the same time (for instance transfer_confirmed and transaction_confirmed) and you can use either.
Is creating a beneficiary or mandate mandatory before initiating transactions?
Creating a beneficiary for transfers or a mandate for collections is not mandatory. When initiating a new transfer or collection, you will provide the counterpart data directly in the initiating endpoint, we will auto-create it and you will be able to see it in the interface. For next transfers/collections, you will continue to provide the counterpart data and we will match it with any beneficiary/mandate that exists in the interface.
How can I reconcile a return with its original transfer or collection?
When you received a return transaction, we will notify you through a transaction_confirmed webhook. Then you will need to get the transaction, check the source type to determine if it is a collection_outgoing_return or transfer_outgoing_return, then use the returned_collection_id / returned_transfer_id field to reconcile with the original ID of your collection/transfer.
How can I differentiate transaction types?
To differentiate transaction types, you can use the type contained in the source object.
What happens if my system is unavailable when Memo Bank sends webhooks?
We will retry each webhook independently 8 times following an exponential backoff. The intervals between retries are: 3 min, 10 min, 30 min, 1 hour, 6 hours, 12 hours, 1 day, 3 days. After that, we will stop retrying but you will be able to manually trigger a retry through our interface.
When using the instant_if_available strategy, will Memo Bank retry a failed instant transfer as a standard transfer?
No, we will not retry failed instant transfers as standard transfers. However, we recommend you do so. If an instant transfer fails, retrying or using a standard transfer is often the best course of action. instant_if_available will only ensure that we will process your transfer as standard if the counterparty bank does not support instant transfers.
What is the difference between failed and cancelled transaction statuses?
Your transaction will end up in cancelled status when you choose to cancel the transaction either with our API or our interface. In some cases, your transaction could end up in cancelled status as well due to internal processing reasons, but most of the time for processing reasons your transaction will end up in failed status. Both statuses are definitive and if you are not at the origin of the cancellation, you could consider them equivalent in your developments.
Are webhooks triggered for transactions not initiated with the API?
Yes, they are. Webhooks are triggered independently of the channel you choose to use to initiate your transaction.
Can I retrieve the URL of the mandate request signature flow?
No, it is not possible for the moment. As of today, we only support sending the URL to your clients by email.
Is it possible to initiate a payment via API and have it validated by a human on the interface?
No, it is not possible. Our API is designed for automated, human-free transactions at scale.
How can I stay informed about the latest API updates?
We provide a RSS feed that you can subscribe to. It is available at this URL when you click on the Get Updates button at the top of the page.


Sandbox
We offer a sandbox, allowing you to integrate your application with our API in a controlled environment. Get in touch with your banker to create an access.
All the endpoints described in this specification can be used on the sandbox. We also offer some sandbox only endpoints, allowing you to simulate incoming transactions.
The base URL for the sandbox API is https://api.sandbox.memo.bank.
To get to know more about our sandbox behavior and features, please read our dedicated help page.


Accounts
Accounts are any bank account that your company own: current account, ring-fenced account, settlement account, specially dedicated account, trust account, meal voucher account, booster account, etc. They boil down to a list of transactions and a balance.
Get an account
GET /v2/accounts/{id}

Path parameters
    id string(uuid) Required
    ID of the account.

Responses
    200 application/json
    OK
    Hide response attributes object
        id string(uuid) Required
        ID of the account.
        name string Required
        Name of the account, as seen in the Memo Bank interface.
        status string Required
        Status of the account.
        Values are active or closed.
        balance integer(int64) Required
        Balance of the account, in cents. It represents the available money on the account at the time of the request. Note that authorized overdrafts are not included in the balance.
        currency string Required
        Currency of the account balance, in ISO 4217 format.
        iban string Required
        Main IBAN of the account.
        type string Required
        Type of the account.
        Values are current_account, ring_fenced_account, ring_fenced_credit_servicer_account, settlement_account, specially_dedicated_account, trust_account, meal_voucher_account, booster_account, dedicated_liquidity_account, or dedicated_recovery_account.
        is_main boolean Required
        Flag indicating if this account is the main account of your workspace.

GET /v2/accounts/{id}

curl \
 --request GET https://api.memo.bank/v2/accounts/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)
{
  "id": "db2b50c0-a943-4eb1-a69f-fa37f112daa8",
  "name": "Main account",
  "status": "active",
  "balance": 42,
  "currency": "EUR",
  "iban": "FR7617338000017498690379033",
  "type": "current_account",
  "is_main": true
}

List all accounts

GET /v2/accounts
Query parameters
    page integer(int32)
    Index of the requested page.
    Minimum value is 1. Default value is 1.
    size integer(int32)
    Number of elements per page in response.
    Minimum value is 1, maximum value is 100. Default value is 10.

Responses
    200 application/json
    OK
    Hide response attributes object
        results array[object] Required
        Elements of the page.
        Show results attributes object
        has_prev boolean Required
        Flag indicating if there is a previous page.
        has_next boolean Required
        Flag indicating if there is a next page.

GET /v2/accounts

curl \
 --request GET https://api.memo.bank/v2/accounts

Response examples (200)
{
  "results": [
    {
      "id": "db2b50c0-a943-4eb1-a69f-fa37f112daa8",
      "name": "Main account",
      "status": "active",
      "balance": 42,
      "currency": "EUR",
      "iban": "FR7617338000017498690379033",
      "type": "current_account",
      "is_main": true
    }
  ],
  "has_prev": true,
  "has_next": true
}


IBANs
IBANs are identifiers for bank accounts. There are two types of IBANs at Memo Bank:
    Main IBANs, which acts as a primary identifier for a bank account. There is exactly one main IBAN per bank account. You cannot delete it. When an account is closed, its main IBAN remains active only for incoming transactions, which will be automatically rerouted to the main account.
    Virtual IBANs, which are aliases for the main IBAN. They can be created, deactivated, and reactivated at will. When the account they are attached to is closed, they get reattached to the main account.
All operations on IBANs are synchronous and effective immediately, meaning that you can use a new IBAN to send or receive money right after its creation.


List all IBANs

GET /v2/ibans
Query parameters
    account_id string(uuid)
    ID of the account.
    include_deleted boolean
    When set to true, results will include IBANs that have been deleted.
    Default value is false.
    page integer(int32)
    Index of the requested page.
    Minimum value is 1. Default value is 1.
    size integer(int32)
    Number of elements per page in response.
    Minimum value is 1, maximum value is 100. Default value is 10.

Responses
    200 application/json

    OK
    Hide response attributes object
        results array[object] Required
        Elements of the page.
        Show results attributes object
        has_prev boolean Required
        Flag indicating if there is a previous page.
        has_next boolean Required
        Flag indicating if there is a next page.

GET /v2/ibans

curl \
 --request GET https://api.memo.bank/v2/ibans

Response examples (200)
{
  "results": [
    {
      "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
      "account_id": "de2284c3-0360-4e4a-b10d-771f75b772d4",
      "iban": "FR27590171083068762111832788",
      "name": "customer no12345",
      "status": "active",
      "type": "main",
      "allow_collections": true,
      "is_deleted": false
    }
  ],
  "has_prev": true,
  "has_next": true
}


Create a virtual IBAN

POST /v2/ibans
application/json
Body Required
    account_id string(uuid) Required
    ID of the account.
    name string Required
    Custom name of the new IBAN, as seen in the Memo Bank interface.
    allow_collections boolean
    Whether or not to accept incoming collections on this IBAN.
    Default value is true.

Responses
    201 application/json
    Created
    Hide response attributes object
        id string(uuid) Required
        ID of the IBAN.
        account_id string(uuid) Required
        ID of the account this IBAN belongs to.
        iban string Required
        Actual value of the IBAN.
        name string Required
        Name of the IBAN.
        status string Required
        Status of the IBAN. It determines if an IBAN accepts incoming or outgoing transfers.
        Values are active or inactive.
        type string Required
        Flag indicating if this IBAN is the main IBAN of an account, or a virtual IBAN. Please note that main IBANs cannot be updated or deleted.
        Values are main or virtual.
        allow_collections boolean Required
        Whether or not this IBAN accepts incoming collections.
        is_deleted boolean Required
        Whether or not this IBAN has been deleted.

POST /v2/ibans

curl \
 --request POST https://api.memo.bank/v2/ibans \
 --header "Content-Type: application/json" \
 --data '{"account_id":"29883c3d-0b11-4c38-91b0-af9018cc5b14","name":"customer no12345","allow_collections":false}'

Request examples
{
  "account_id": "29883c3d-0b11-4c38-91b0-af9018cc5b14",
  "name": "customer no12345",
  "allow_collections": false
}

Response examples (201)
{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "de2284c3-0360-4e4a-b10d-771f75b772d4",
  "iban": "FR27590171083068762111832788",
  "name": "customer no12345",
  "status": "active",
  "type": "main",
  "allow_collections": true,
  "is_deleted": false
}


Get an IBAN
GET /v2/ibans/{id}
Path parameters
    id string(uuid) Required
    ID of the IBAN.

Responses
    200 application/json
    OK
    Hide response attributes object
        id string(uuid) Required
        ID of the IBAN.
        account_id string(uuid) Required
        ID of the account this IBAN belongs to.
        iban string Required
        Actual value of the IBAN.
        name string Required
        Name of the IBAN.
        status string Required
        Status of the IBAN. It determines if an IBAN accepts incoming or outgoing transfers.
        Values are active or inactive.
        type string Required
        Flag indicating if this IBAN is the main IBAN of an account, or a virtual IBAN. Please note that main IBANs cannot be updated or deleted.
        Values are main or virtual.
        allow_collections boolean Required
        Whether or not this IBAN accepts incoming collections.
        is_deleted boolean Required
        Whether or not this IBAN has been deleted.

GET /v2/ibans/{id}

curl \
 --request GET https://api.memo.bank/v2/ibans/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)
{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "de2284c3-0360-4e4a-b10d-771f75b772d4",
  "iban": "FR27590171083068762111832788",
  "name": "customer no12345",
  "status": "active",
  "type": "main",
  "allow_collections": true,
  "is_deleted": false
}



GET /v2/ibans/{id}

curl \
 --request GET https://api.memo.bank/v2/ibans/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)
{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "de2284c3-0360-4e4a-b10d-771f75b772d4",
  "iban": "FR27590171083068762111832788",
  "name": "customer no12345",
  "status": "active",
  "type": "main",
  "allow_collections": true,
  "is_deleted": false
}

Delete an IBAN
DELETE /v2/ibans/{id}

This operation permanently deletes an IBAN from your account.
Path parameters
    id string(uuid) Required
    ID of the IBAN.

Responses
    204
    No content

DELETE /v2/ibans/{id}

curl \
 --request DELETE https://api.memo.bank/v2/ibans/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

DELETE /v2/ibans/{id}

curl \
 --request DELETE https://api.memo.bank/v2/ibans/c70bd7bc-58e0-4fdb-8c1f-70186e0de587


Update an IBAN
PATCH /v2/ibans/{id}

This operation allows you to update an IBAN name or change its status. Only provided parameters have an effect on the current state of an IBAN.
Path parameters
    id string(uuid) Required
    ID of the IBAN.

application/json
Body Required
    name string
    New IBAN name.
    status string
    New IBAN status.
    Values are active or inactive.
    allow_collections boolean
    New value for whether or not to accept incoming collections on this IBAN.

Responses
    200 application/json
    OK
    Hide response attributes object
        id string(uuid) Required
        ID of the IBAN.
        account_id string(uuid) Required
        ID of the account this IBAN belongs to.
        iban string Required
        Actual value of the IBAN.
        name string Required
        Name of the IBAN.
        status string Required
        Status of the IBAN. It determines if an IBAN accepts incoming or outgoing transfers.
        Values are active or inactive.
        type string Required
        Flag indicating if this IBAN is the main IBAN of an account, or a virtual IBAN. Please note that main IBANs cannot be updated or deleted.
        Values are main or virtual.
        allow_collections boolean Required
        Whether or not this IBAN accepts incoming collections.
        is_deleted boolean Required
        Whether or not this IBAN has been deleted.

PATCH /v2/ibans/{id}

curl \
 --request PATCH https://api.memo.bank/v2/ibans/fe98f29d-5165-45ff-83f9-d7aa83e970b5 \
 --header "Content-Type: application/json" \
 --data '{"name":"string","status":"active","allow_collections":true}'

Request examples
{
  "name": "string",
  "status": "active",
  "allow_collections": true
}

Response examples (200)
{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "de2284c3-0360-4e4a-b10d-771f75b772d4",
  "iban": "FR27590171083068762111832788",
  "name": "customer no12345",
  "status": "active",
  "type": "main",
  "allow_collections": true,
  "is_deleted": false
}


Transactions
Transactions are any debit and credit operations on an account.

Transactions lifecycle
Note that the status of the transaction indicates whether or not it affects the account’s available balance. debit transactions impact the balance as soon as they reach the authorized state. credit transactions impact it only when their status turns to confirmed.


Get a transaction
GET /v2/transactions/{id}
Path parameters
    id string(uuid) Required
    ID of the transaction.

Responses
    200 application/json
    OK
    Hide response attributes object
        id string(uuid) Required
        Unique ID of the transaction.
        reference string(uuid) Required
        Reference of the money movement. In case you initiate a transfer between two of your own accounts, both transactions (debit and credit) will have the same reference, it can be safely used to correlate them.
        account_id string(uuid) Required
        ID of the account this transaction belongs to.
        amount integer(int64) Required
        Amount of the transaction, in cents. The amount is always positive, use direction to give it a sign.
        local_iban string Required
        IBAN through which this transaction got in or out of the account. Can be the main IBAN of the account or a virtual IBAN.
        currency string Required
        Currency of the transaction amount, in ISO 4217 format.
        direction string Required
        Direction of the transaction.
        Values are debit or credit.
        request_date string(date-time) Required
        Date at which the transaction has been requested, in ISO8601 format. Usually the same as the execution date, except for scheduled transfers and transfer requests.
        execution_date string(date-time) Required
        Date at which the transaction processing has started or will start, in ISO8601 format. For debits, that’s when the money is removed from the available balance of the account.
        accounting_date string(date-time)
        Date at which the transaction has been confirmed, in ISO8601 format. For credits, that’s when the money is credited from the available balance of the account.
        counterparty_name string Required
        Name of the counterparty.
        internal_note string
        Internal note attached to this transaction, visible only in your Memo Bank workspace.
        status string Required
        Current status of the transaction.
        Values are scheduled, authorized, confirmed, rejected, or canceled.
        batch_id string(uuid)
        ID of the batch this transaction belongs to, if any.
        custom_id string
        Custom identifier attached to the transaction. It is not transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.
        custom_metadata string
        Custom metadata attached to the transaction. It is not transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.
        attachment_count integer(int32) Required
        Number of documents attached to this transaction.
        source object Required

        Source of the transaction. We may add additional source types over time; your application should be able to handle such additions gracefully.
        One of:
        BankAccountRemunerationSource object
        CardDeferredSource object
        CardWithdrawalSource object
        CollectionIncomingSource object
        CollectionOutgoingSource object
        CollectionIncomingReturnSource object
        CollectionOutgoingReturnFeesSource object
        CollectionOutgoingReturnSource object
        DebtPurchaseApplicationFeesSource object
        DebtPurchaseDisbursementSource object
        DebtPurchaseInterestsSource object
        DebtPurchaseRepaymentSource object
        DiverseOperationSource object
        LoanApplicationFeesSource object
        LoanDisbursementSource object
        LoanGuaranteeFeeSource object
        LoanReimbursementSource object
        LoanRepaymentSource object
        MaintenanceTransferSource object
        OverdraftAgiosSource object
        OverdraftApplicationFeesSource object
        RtgsTransferIncomingSource object
        TransferIncomingReturnSource object
        RtgsTransferOutgoingSource object
        SubscriptionSource object
        SweepTransferIncomingSource object
        SweepTransferOutgoingSource object
        TermDepositClosureSourceDTO object
        TermDepositCreationSourceDTO object
        TermDepositInterestPaymentSourceDTO object
        TermDepositWithdrawalSourceDTO object
        TransferIncomingSource object
        TransferOutgoingSource object
        TransferOutgoingReturnSource object
        WireTransferIncomingSource object
        WireTransferOutgoingSource object
        Hide attribute
            type string Required Discriminator
            Value is bank_account_remuneration.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is card_deferred.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is card_withdrawal.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is collection_incoming.
            counterparty_iban string

            IBAN of the counterparty. Can be null on old transactions for legacy reasons.
            counterparty_bank_bic string

            BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
            message string

            Message attached to this collection, visible to all involved parties.
            end_to_end_id string

            Unique identification to unambiguously identify the collection. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the collection. For example, if a collection is returned, its return will share the same endToEndId.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is collection_outgoing.
            counterparty_iban string

            IBAN of the counterparty. Can be null on old transactions for legacy reasons.
            counterparty_bank_bic string

            BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
            message string

            Message attached to this collection, visible to all involved parties.
            end_to_end_id string

            Unique identification to unambiguously identify the collection. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the collection. For example, if a collection is returned, its return will share the same endToEndId.
            collection_id string(uuid) Required

            ID of the collection that created this transaction.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is collection_incoming_return.
            counterparty_iban string

            IBAN of the counterparty. Can be null on old transactions for legacy reasons.
            counterparty_bank_bic string

            BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
            message string

            Message attached to this collection, visible to all involved parties.
            end_to_end_id string

            Unique identification to unambiguously identify the collection. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the collection. For example, if a collection is returned, its return will share the same endToEndId.
            returned_collection_reference string Required

            Reference of the original collection being returned.
            reason string

            Reason for the return of the original collection. Can be null on old transactions for legacy reasons.

            Values are bank_identifier_incorrect, blocked_account, closed_account, creditor_bank_is_not_registered, creditor_psp_not_registered, customer_deceased, customer_disabled_direct_debit, debtor_psp_not_registered, disputed, duplication, end_customer_deceased, eri_option_not_supported, following_cancellation_request, fraudulent_originated, inactive_mandate, incorrect_account_number, insufficient_funds, invalid_bank_operation_code, invalid_code_or_format, invalid_creditor_account_number, invalid_debtor_account, invalid_interbank_communication, invalid_transaction_code_or_invalid_file_format, mandate_mismatch, missing_creditors_name_or_address, missing_creditor_address, missing_creditor_name_or_address, missing_debtors_name_or_address, missing_debtor_account_or_identification, missing_debtor_name_or_address, missing_mandatory_information_mandate, no_mandate, no_mandate_on_scheme, not_specified_reason_agent_generated, not_specified_reason_customer_generated, psp_identifier_incorrect, refund_request_by_bank, refund_request_by_end_customer, regulatory_reason, requested_by_the_debtor, settlement_failed, specific_service_offered_by_debtor_psp, technical_problem, transaction_forbidden, transaction_unauthorized, unrecognized_initiating_party, or wrong_amount.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is collection_outgoing_return_fees.
            counterparty_iban string

            IBAN of the counterparty. Can be null on old transactions for legacy reasons.
            counterparty_bank_bic string

            BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
            message string

            Message attached to this collection, visible to all involved parties.
            end_to_end_id string

            Unique identification to unambiguously identify the collection. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the collection. For example, if a collection is returned, its return will share the same endToEndId.
            returned_collection_id string(uuid) Required

            ID of the original collection being returned.
            returned_collection_reference string Required

            Reference of the original collection being returned.
            reason string

            Reason for the return of the original collection. Can be null on old transactions for legacy reasons.

            Values are bank_identifier_incorrect, blocked_account, closed_account, creditor_bank_is_not_registered, creditor_psp_not_registered, customer_deceased, customer_disabled_direct_debit, debtor_psp_not_registered, disputed, duplication, end_customer_deceased, eri_option_not_supported, following_cancellation_request, fraudulent_originated, inactive_mandate, incorrect_account_number, insufficient_funds, invalid_bank_operation_code, invalid_code_or_format, invalid_creditor_account_number, invalid_debtor_account, invalid_interbank_communication, invalid_transaction_code_or_invalid_file_format, mandate_mismatch, missing_creditors_name_or_address, missing_creditor_address, missing_creditor_name_or_address, missing_debtors_name_or_address, missing_debtor_account_or_identification, missing_debtor_name_or_address, missing_mandatory_information_mandate, no_mandate, no_mandate_on_scheme, not_specified_reason_agent_generated, not_specified_reason_customer_generated, psp_identifier_incorrect, refund_request_by_bank, refund_request_by_end_customer, regulatory_reason, requested_by_the_debtor, settlement_failed, specific_service_offered_by_debtor_psp, technical_problem, transaction_forbidden, transaction_unauthorized, unrecognized_initiating_party, or wrong_amount.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is collection_outgoing_return.
            counterparty_iban string

            IBAN of the counterparty. Can be null on old transactions for legacy reasons.
            counterparty_bank_bic string

            BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
            message string

            Message attached to this collection, visible to all involved parties.
            end_to_end_id string

            Unique identification to unambiguously identify the collection. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the collection. For example, if a collection is returned, its return will share the same endToEndId.
            returned_collection_id string(uuid) Required

            ID of the original collection being returned.
            returned_collection_reference string Required

            Reference of the original collection being returned.
            reason string

            Reason for the return of the original collection. Can be null on old transactions for legacy reasons.

            Values are bank_identifier_incorrect, blocked_account, closed_account, creditor_bank_is_not_registered, creditor_psp_not_registered, customer_deceased, customer_disabled_direct_debit, debtor_psp_not_registered, disputed, duplication, end_customer_deceased, eri_option_not_supported, following_cancellation_request, fraudulent_originated, inactive_mandate, incorrect_account_number, insufficient_funds, invalid_bank_operation_code, invalid_code_or_format, invalid_creditor_account_number, invalid_debtor_account, invalid_interbank_communication, invalid_transaction_code_or_invalid_file_format, mandate_mismatch, missing_creditors_name_or_address, missing_creditor_address, missing_creditor_name_or_address, missing_debtors_name_or_address, missing_debtor_account_or_identification, missing_debtor_name_or_address, missing_mandatory_information_mandate, no_mandate, no_mandate_on_scheme, not_specified_reason_agent_generated, not_specified_reason_customer_generated, psp_identifier_incorrect, refund_request_by_bank, refund_request_by_end_customer, regulatory_reason, requested_by_the_debtor, settlement_failed, specific_service_offered_by_debtor_psp, technical_problem, transaction_forbidden, transaction_unauthorized, unrecognized_initiating_party, or wrong_amount.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is debt_purchase_application_fees.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is debt_purchase_disbursement.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is debt_purchase_interests.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is debt_purchase_repayment.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is diverse_operation.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is loan_application_fees.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is loan_disbursement.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is loan_guarantee_fee.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is loan_reimbursement.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is loan_repayment.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is maintenance_transfer.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is overdraft_agios.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is overdraft_application_fees.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is rtgs_transfer_incoming.
            counterparty_account_number string Required

            Account number of the counterparty.
            counterparty_bank_bic string

            BIC of the counterparty's bank.
            end_to_end_id string

            Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.
            message string

            Message attached to this transfer, visible to all involved parties.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is transfer_incoming_return.
            transfer_type string Required

            Type of the transfer.

            Values are standard or instant.
            counterparty_iban string

            IBAN of the counterparty. Can be null on old transactions for legacy reasons.
            counterparty_bank_bic string

            BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
            message string

            Message attached to this transfer, visible to all involved parties.
            end_to_end_id string

            Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.
            returned_transfer_reference string Required

            Reference of the original transfer being returned.
            reason string

            Reason for the return of the original transfer. Can be null on old transactions for legacy reasons.

            Values are bank_identifier_incorrect, blocked_account, closed_account, creditor_bank_is_not_registered, creditor_psp_not_registered, customer_deceased, customer_disabled_direct_debit, debtor_psp_not_registered, disputed, duplication, end_customer_deceased, eri_option_not_supported, following_cancellation_request, fraudulent_originated, inactive_mandate, incorrect_account_number, insufficient_funds, invalid_bank_operation_code, invalid_code_or_format, invalid_creditor_account_number, invalid_debtor_account, invalid_interbank_communication, invalid_transaction_code_or_invalid_file_format, mandate_mismatch, missing_creditors_name_or_address, missing_creditor_address, missing_creditor_name_or_address, missing_debtors_name_or_address, missing_debtor_account_or_identification, missing_debtor_name_or_address, missing_mandatory_information_mandate, no_mandate, no_mandate_on_scheme, not_specified_reason_agent_generated, not_specified_reason_customer_generated, psp_identifier_incorrect, refund_request_by_bank, refund_request_by_end_customer, regulatory_reason, requested_by_the_debtor, settlement_failed, specific_service_offered_by_debtor_psp, technical_problem, transaction_forbidden, transaction_unauthorized, unrecognized_initiating_party, or wrong_amount.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is rtgs_transfer_outgoing.
            counterparty_account_number string Required

            Account number of the counterparty.
            counterparty_bank_bic string

            BIC of the counterparty's bank.
            end_to_end_id string

            Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.
            message string

            Message attached to this transfer, visible to all involved parties.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is subscription.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is sweep_transfer_incoming.
            counterparty_iban string Required

            IBAN of the counterparty.
            counterparty_bank_bic string Required

            BIC of the counterparty's bank.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is sweep_transfer_outgoing.
            counterparty_iban string Required

            IBAN of the counterparty.
            counterparty_bank_bic string Required

            BIC of the counterparty's bank.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is term_deposit_closure.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is term_deposit_creation.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is term_deposit_interest_payment.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attribute
            type string Required Discriminator

            Value is term_deposit_withdrawal.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is transfer_incoming.
            transfer_type string Required

            Type of the transfer.

            Values are standard or instant.
            counterparty_iban string

            IBAN of the counterparty. Can be null on old transactions for legacy reasons.
            counterparty_bank_bic string

            BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
            message string

            Message attached to this transfer, visible to all involved parties.
            end_to_end_id string

            Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is transfer_outgoing.
            transfer_type string Required

            Type of the transfer.

            Values are standard or instant.
            counterparty_iban string

            IBAN of the counterparty. Can be null on old transactions for legacy reasons.
            counterparty_bank_bic string

            BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
            message string

            Message attached to this transfer, visible to all involved parties.
            end_to_end_id string

            Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.
            transfer_id string(uuid) Required

            ID of the transfer that created this transaction.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is transfer_outgoing_return.
            transfer_type string Required

            Type of the transfer.

            Values are standard or instant.
            counterparty_iban string

            IBAN of the counterparty. Can be null on old transactions for legacy reasons.
            counterparty_bank_bic string

            BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
            message string

            Message attached to this transfer, visible to all involved parties.
            end_to_end_id string

            Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.
            returned_transfer_id string(uuid) Required

            ID of the original transfer being returned.
            returned_transfer_reference string Required

            Reference of the original transfer being returned.
            reason string

            Reason for the return of the original transfer. Can be null on old transactions for legacy reasons.

            Values are bank_identifier_incorrect, blocked_account, closed_account, creditor_bank_is_not_registered, creditor_psp_not_registered, customer_deceased, customer_disabled_direct_debit, debtor_psp_not_registered, disputed, duplication, end_customer_deceased, eri_option_not_supported, following_cancellation_request, fraudulent_originated, inactive_mandate, incorrect_account_number, insufficient_funds, invalid_bank_operation_code, invalid_code_or_format, invalid_creditor_account_number, invalid_debtor_account, invalid_interbank_communication, invalid_transaction_code_or_invalid_file_format, mandate_mismatch, missing_creditors_name_or_address, missing_creditor_address, missing_creditor_name_or_address, missing_debtors_name_or_address, missing_debtor_account_or_identification, missing_debtor_name_or_address, missing_mandatory_information_mandate, no_mandate, no_mandate_on_scheme, not_specified_reason_agent_generated, not_specified_reason_customer_generated, psp_identifier_incorrect, refund_request_by_bank, refund_request_by_end_customer, regulatory_reason, requested_by_the_debtor, settlement_failed, specific_service_offered_by_debtor_psp, technical_problem, transaction_forbidden, transaction_unauthorized, unrecognized_initiating_party, or wrong_amount.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is wire_transfer_incoming.
            counterparty_account_number string

            Account number of the counterparty.
            message string

            Message attached to this transfer, visible to all involved parties.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}


        Hide attributes
            type string Required Discriminator

            Value is wire_transfer_outgoing.
            counterparty_account_number string

            Account number of the counterparty.
            message string

            Message attached to this transfer, visible to all involved parties.

GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}



GET /v2/transactions/{id}

curl \
 --request GET https://api.memo.bank/v2/transactions/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "amount": 42,
  "local_iban": "FR27590171083068762111832788",
  "currency": "EUR",
  "direction": "debit",
  "request_date": "2025-05-04T09:42:00Z",
  "execution_date": "2025-05-04T09:42:00Z",
  "accounting_date": "2025-05-04T09:42:00Z",
  "counterparty_name": "string",
  "internal_note": "phone bill",
  "status": "scheduled",
  "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata",
  "attachment_count": 42,
  "source": {
    "type": "bank_account_remuneration"
  }
}

List all transactions
GET /v2/transactions
Query parameters

    account_id string(uuid)

    Filter transactions by account.
    page integer(int32)

    Index of the requested page.

    Minimum value is 1. Default value is 1.
    size integer(int32)

    Number of elements per page in response.

    Minimum value is 1, maximum value is 100. Default value is 10.
    start_date string(date-time)

    Filter transactions by execution date (inclusive greater than), in ISO8601 format.
    end_date string(date-time)

    Filter transactions by execution date (exclusive lower than), in ISO8601 format.
    reference string(uuid)

    Filter transactions by reference.
    local_iban string

    Filter transactions by local IBAN. Allows for example to list all incoming and outgoing transactions that passed through a given virtual IBAN.
    batch_id string(uuid)

    Filter transactions by transaction batch.
    custom_id string

    Filter transactions by custom ID.
    order_by string

    Sort transactions in ascending or descending order.

    Values are execution_date or -execution_date. Default value is -execution_date.

Responses

    200 application/json

    OK
    Hide response attributes object
        results array[object] Required

        Elements of the page.
        Hide results attributes object
            id string(uuid) Required

            Unique ID of the transaction.
            reference string(uuid) Required

            Reference of the money movement. In case you initiate a transfer between two of your own accounts, both transactions (debit and credit) will have the same reference, it can be safely used to correlate them.
            account_id string(uuid) Required

            ID of the account this transaction belongs to.
            amount integer(int64) Required

            Amount of the transaction, in cents. The amount is always positive, use direction to give it a sign.
            local_iban string Required

            IBAN through which this transaction got in or out of the account. Can be the main IBAN of the account or a virtual IBAN.
            currency string Required

            Currency of the transaction amount, in ISO 4217 format.
            direction string Required

            Direction of the transaction.

            Values are debit or credit.
            request_date string(date-time) Required

            Date at which the transaction has been requested, in ISO8601 format. Usually the same as the execution date, except for scheduled transfers and transfer requests.
            execution_date string(date-time) Required

            Date at which the transaction processing has started or will start, in ISO8601 format. For debits, that’s when the money is removed from the available balance of the account.
            accounting_date string(date-time)

            Date at which the transaction has been confirmed, in ISO8601 format. For credits, that’s when the money is credited from the available balance of the account.
            counterparty_name string Required

            Name of the counterparty.
            internal_note string

            Internal note attached to this transaction, visible only in your Memo Bank workspace.
            status string Required

            Current status of the transaction.

            Values are scheduled, authorized, confirmed, rejected, or canceled.
            batch_id string(uuid)

            ID of the batch this transaction belongs to, if any.
            custom_id string

            Custom identifier attached to the transaction. It is not transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.
            custom_metadata string

            Custom metadata attached to the transaction. It is not transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.
            attachment_count integer(int32) Required

            Number of documents attached to this transaction.
            source object Required

            Source of the transaction. We may add additional source types over time; your application should be able to handle such additions gracefully.
            One of:
            BankAccountRemunerationSource object
            CardDeferredSource object
            CardWithdrawalSource object
            CollectionIncomingSource object
            CollectionOutgoingSource object
            CollectionIncomingReturnSource object
            CollectionOutgoingReturnFeesSource object
            CollectionOutgoingReturnSource object
            DebtPurchaseApplicationFeesSource object
            DebtPurchaseDisbursementSource object
            DebtPurchaseInterestsSource object
            DebtPurchaseRepaymentSource object
            DiverseOperationSource object
            LoanApplicationFeesSource object
            LoanDisbursementSource object
            LoanGuaranteeFeeSource object
            LoanReimbursementSource object
            LoanRepaymentSource object
            MaintenanceTransferSource object
            OverdraftAgiosSource object
            OverdraftApplicationFeesSource object
            RtgsTransferIncomingSource object
            TransferIncomingReturnSource object
            RtgsTransferOutgoingSource object
            SubscriptionSource object
            SweepTransferIncomingSource object
            SweepTransferOutgoingSource object
            TermDepositClosureSourceDTO object
            TermDepositCreationSourceDTO object
            TermDepositInterestPaymentSourceDTO object
            TermDepositWithdrawalSourceDTO object
            TransferIncomingSource object
            TransferOutgoingSource object
            TransferOutgoingReturnSource object
            WireTransferIncomingSource object
            WireTransferOutgoingSource object
            Hide attribute
                type string Required Discriminator

                Value is bank_account_remuneration.
        has_prev boolean Required

        Flag indicating if there is a previous page.
        has_next boolean Required

        Flag indicating if there is a next page.

GET /v2/transactions

curl \
 --request GET https://api.memo.bank/v2/transactions

Response examples (200)

{
  "results": [
    {
      "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
      "reference": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
      "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
      "amount": 42,
      "local_iban": "FR27590171083068762111832788",
      "currency": "EUR",
      "direction": "debit",
      "request_date": "2025-05-04T09:42:00Z",
      "execution_date": "2025-05-04T09:42:00Z",
      "accounting_date": "2025-05-04T09:42:00Z",
      "counterparty_name": "string",
      "internal_note": "phone bill",
      "status": "scheduled",
      "batch_id": "dc47b1ee-1bd7-4072-8d1b-27ff4297b33e",
      "custom_id": "637406efda8534de8c0e",
      "custom_metadata": "This is some metadata",
      "attachment_count": 42,
      "source": {
        "type": "bank_account_remuneration"
      }
    }
  ],
  "has_prev": true,
  "has_next": true
}


    Hide attribute
        type string Required Discriminator

        Value is bank_account_remuneration.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is card_deferred.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is card_withdrawal.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is collection_incoming.
        counterparty_iban string

        IBAN of the counterparty. Can be null on old transactions for legacy reasons.
        counterparty_bank_bic string

        BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
        message string

        Message attached to this collection, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the collection. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the collection. For example, if a collection is returned, its return will share the same endToEndId.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is collection_outgoing.
        counterparty_iban string

        IBAN of the counterparty. Can be null on old transactions for legacy reasons.
        counterparty_bank_bic string

        BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
        message string

        Message attached to this collection, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the collection. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the collection. For example, if a collection is returned, its return will share the same endToEndId.
        collection_id string(uuid) Required

        ID of the collection that created this transaction.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is collection_incoming_return.
        counterparty_iban string

        IBAN of the counterparty. Can be null on old transactions for legacy reasons.
        counterparty_bank_bic string

        BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
        message string

        Message attached to this collection, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the collection. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the collection. For example, if a collection is returned, its return will share the same endToEndId.
        returned_collection_reference string Required

        Reference of the original collection being returned.
        reason string

        Reason for the return of the original collection. Can be null on old transactions for legacy reasons.

        Values are bank_identifier_incorrect, blocked_account, closed_account, creditor_bank_is_not_registered, creditor_psp_not_registered, customer_deceased, customer_disabled_direct_debit, debtor_psp_not_registered, disputed, duplication, end_customer_deceased, eri_option_not_supported, following_cancellation_request, fraudulent_originated, inactive_mandate, incorrect_account_number, insufficient_funds, invalid_bank_operation_code, invalid_code_or_format, invalid_creditor_account_number, invalid_debtor_account, invalid_interbank_communication, invalid_transaction_code_or_invalid_file_format, mandate_mismatch, missing_creditors_name_or_address, missing_creditor_address, missing_creditor_name_or_address, missing_debtors_name_or_address, missing_debtor_account_or_identification, missing_debtor_name_or_address, missing_mandatory_information_mandate, no_mandate, no_mandate_on_scheme, not_specified_reason_agent_generated, not_specified_reason_customer_generated, psp_identifier_incorrect, refund_request_by_bank, refund_request_by_end_customer, regulatory_reason, requested_by_the_debtor, settlement_failed, specific_service_offered_by_debtor_psp, technical_problem, transaction_forbidden, transaction_unauthorized, unrecognized_initiating_party, or wrong_amount.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is collection_outgoing_return_fees.
        counterparty_iban string

        IBAN of the counterparty. Can be null on old transactions for legacy reasons.
        counterparty_bank_bic string

        BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
        message string

        Message attached to this collection, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the collection. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the collection. For example, if a collection is returned, its return will share the same endToEndId.
        returned_collection_id string(uuid) Required

        ID of the original collection being returned.
        returned_collection_reference string Required

        Reference of the original collection being returned.
        reason string

        Reason for the return of the original collection. Can be null on old transactions for legacy reasons.

        Values are bank_identifier_incorrect, blocked_account, closed_account, creditor_bank_is_not_registered, creditor_psp_not_registered, customer_deceased, customer_disabled_direct_debit, debtor_psp_not_registered, disputed, duplication, end_customer_deceased, eri_option_not_supported, following_cancellation_request, fraudulent_originated, inactive_mandate, incorrect_account_number, insufficient_funds, invalid_bank_operation_code, invalid_code_or_format, invalid_creditor_account_number, invalid_debtor_account, invalid_interbank_communication, invalid_transaction_code_or_invalid_file_format, mandate_mismatch, missing_creditors_name_or_address, missing_creditor_address, missing_creditor_name_or_address, missing_debtors_name_or_address, missing_debtor_account_or_identification, missing_debtor_name_or_address, missing_mandatory_information_mandate, no_mandate, no_mandate_on_scheme, not_specified_reason_agent_generated, not_specified_reason_customer_generated, psp_identifier_incorrect, refund_request_by_bank, refund_request_by_end_customer, regulatory_reason, requested_by_the_debtor, settlement_failed, specific_service_offered_by_debtor_psp, technical_problem, transaction_forbidden, transaction_unauthorized, unrecognized_initiating_party, or wrong_amount.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is collection_outgoing_return.
        counterparty_iban string

        IBAN of the counterparty. Can be null on old transactions for legacy reasons.
        counterparty_bank_bic string

        BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
        message string

        Message attached to this collection, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the collection. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the collection. For example, if a collection is returned, its return will share the same endToEndId.
        returned_collection_id string(uuid) Required

        ID of the original collection being returned.
        returned_collection_reference string Required

        Reference of the original collection being returned.
        reason string

        Reason for the return of the original collection. Can be null on old transactions for legacy reasons.

        Values are bank_identifier_incorrect, blocked_account, closed_account, creditor_bank_is_not_registered, creditor_psp_not_registered, customer_deceased, customer_disabled_direct_debit, debtor_psp_not_registered, disputed, duplication, end_customer_deceased, eri_option_not_supported, following_cancellation_request, fraudulent_originated, inactive_mandate, incorrect_account_number, insufficient_funds, invalid_bank_operation_code, invalid_code_or_format, invalid_creditor_account_number, invalid_debtor_account, invalid_interbank_communication, invalid_transaction_code_or_invalid_file_format, mandate_mismatch, missing_creditors_name_or_address, missing_creditor_address, missing_creditor_name_or_address, missing_debtors_name_or_address, missing_debtor_account_or_identification, missing_debtor_name_or_address, missing_mandatory_information_mandate, no_mandate, no_mandate_on_scheme, not_specified_reason_agent_generated, not_specified_reason_customer_generated, psp_identifier_incorrect, refund_request_by_bank, refund_request_by_end_customer, regulatory_reason, requested_by_the_debtor, settlement_failed, specific_service_offered_by_debtor_psp, technical_problem, transaction_forbidden, transaction_unauthorized, unrecognized_initiating_party, or wrong_amount.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is debt_purchase_application_fees.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is debt_purchase_disbursement.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is debt_purchase_interests.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is debt_purchase_repayment.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is diverse_operation.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is loan_application_fees.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is loan_disbursement.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is loan_guarantee_fee.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is loan_reimbursement.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is loan_repayment.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is maintenance_transfer.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is overdraft_agios.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is overdraft_application_fees.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is rtgs_transfer_incoming.
        counterparty_account_number string Required

        Account number of the counterparty.
        counterparty_bank_bic string

        BIC of the counterparty's bank.
        end_to_end_id string

        Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.
        message string

        Message attached to this transfer, visible to all involved parties.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is transfer_incoming_return.
        transfer_type string Required

        Type of the transfer.

        Values are standard or instant.
        counterparty_iban string

        IBAN of the counterparty. Can be null on old transactions for legacy reasons.
        counterparty_bank_bic string

        BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
        message string

        Message attached to this transfer, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.
        returned_transfer_reference string Required

        Reference of the original transfer being returned.
        reason string

        Reason for the return of the original transfer. Can be null on old transactions for legacy reasons.

        Values are bank_identifier_incorrect, blocked_account, closed_account, creditor_bank_is_not_registered, creditor_psp_not_registered, customer_deceased, customer_disabled_direct_debit, debtor_psp_not_registered, disputed, duplication, end_customer_deceased, eri_option_not_supported, following_cancellation_request, fraudulent_originated, inactive_mandate, incorrect_account_number, insufficient_funds, invalid_bank_operation_code, invalid_code_or_format, invalid_creditor_account_number, invalid_debtor_account, invalid_interbank_communication, invalid_transaction_code_or_invalid_file_format, mandate_mismatch, missing_creditors_name_or_address, missing_creditor_address, missing_creditor_name_or_address, missing_debtors_name_or_address, missing_debtor_account_or_identification, missing_debtor_name_or_address, missing_mandatory_information_mandate, no_mandate, no_mandate_on_scheme, not_specified_reason_agent_generated, not_specified_reason_customer_generated, psp_identifier_incorrect, refund_request_by_bank, refund_request_by_end_customer, regulatory_reason, requested_by_the_debtor, settlement_failed, specific_service_offered_by_debtor_psp, technical_problem, transaction_forbidden, transaction_unauthorized, unrecognized_initiating_party, or wrong_amount.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is rtgs_transfer_outgoing.
        counterparty_account_number string Required

        Account number of the counterparty.
        counterparty_bank_bic string

        BIC of the counterparty's bank.
        end_to_end_id string

        Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.
        message string

        Message attached to this transfer, visible to all involved parties.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is subscription.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is sweep_transfer_incoming.
        counterparty_iban string Required

        IBAN of the counterparty.
        counterparty_bank_bic string Required

        BIC of the counterparty's bank.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is sweep_transfer_outgoing.
        counterparty_iban string Required

        IBAN of the counterparty.
        counterparty_bank_bic string Required

        BIC of the counterparty's bank.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is term_deposit_closure.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is term_deposit_creation.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is term_deposit_interest_payment.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attribute
        type string Required Discriminator

        Value is term_deposit_withdrawal.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is transfer_incoming.
        transfer_type string Required

        Type of the transfer.

        Values are standard or instant.
        counterparty_iban string

        IBAN of the counterparty. Can be null on old transactions for legacy reasons.
        counterparty_bank_bic string

        BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
        message string

        Message attached to this transfer, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is transfer_outgoing.
        transfer_type string Required

        Type of the transfer.

        Values are standard or instant.
        counterparty_iban string

        IBAN of the counterparty. Can be null on old transactions for legacy reasons.
        counterparty_bank_bic string

        BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
        message string

        Message attached to this transfer, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.
        transfer_id string(uuid) Required

        ID of the transfer that created this transaction.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is transfer_outgoing_return.
        transfer_type string Required

        Type of the transfer.

        Values are standard or instant.
        counterparty_iban string

        IBAN of the counterparty. Can be null on old transactions for legacy reasons.
        counterparty_bank_bic string

        BIC of the counterparty's bank. Can be null on old transactions for legacy reasons.
        message string

        Message attached to this transfer, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the transfer. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transfer. For example, if a transfer is returned, its return will share the same endToEndId.
        returned_transfer_id string(uuid) Required

        ID of the original transfer being returned.
        returned_transfer_reference string Required

        Reference of the original transfer being returned.
        reason string

        Reason for the return of the original transfer. Can be null on old transactions for legacy reasons.

        Values are bank_identifier_incorrect, blocked_account, closed_account, creditor_bank_is_not_registered, creditor_psp_not_registered, customer_deceased, customer_disabled_direct_debit, debtor_psp_not_registered, disputed, duplication, end_customer_deceased, eri_option_not_supported, following_cancellation_request, fraudulent_originated, inactive_mandate, incorrect_account_number, insufficient_funds, invalid_bank_operation_code, invalid_code_or_format, invalid_creditor_account_number, invalid_debtor_account, invalid_interbank_communication, invalid_transaction_code_or_invalid_file_format, mandate_mismatch, missing_creditors_name_or_address, missing_creditor_address, missing_creditor_name_or_address, missing_debtors_name_or_address, missing_debtor_account_or_identification, missing_debtor_name_or_address, missing_mandatory_information_mandate, no_mandate, no_mandate_on_scheme, not_specified_reason_agent_generated, not_specified_reason_customer_generated, psp_identifier_incorrect, refund_request_by_bank, refund_request_by_end_customer, regulatory_reason, requested_by_the_debtor, settlement_failed, specific_service_offered_by_debtor_psp, technical_problem, transaction_forbidden, transaction_unauthorized, unrecognized_initiating_party, or wrong_amount.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is wire_transfer_incoming.
        counterparty_account_number string

        Account number of the counterparty.
        message string

        Message attached to this transfer, visible to all involved parties.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


    Hide attributes
        type string Required Discriminator

        Value is wire_transfer_outgoing.
        counterparty_account_number string

        Account number of the counterparty.
        message string

        Message attached to this transfer, visible to all involved parties.

has_prev boolean Required

Flag indicating if there is a previous page.
has_next boolean Required

Flag indicating if there is a next page.


Transfers

Transfers are SEPA transfers, including SEPA standard transfers and SEPA instant transfers.

They can be initiated asynchronously, one by one or in bulk.

They have a similar lifecycle compared to transactions but note that there are some minor differences for the canceled and failed states.

Transfers lifecycle


Transfers lifecycle
Get a transfer
GET /v2/transfers/{id}
Path parameters

    id string(uuid) Required

    ID of the transfer.

Responses

    200 application/json

    OK
    Hide response attributes object
        id string(uuid) Required

        ID of the transfer
        reference string(uuid) Required

        Unique reference, can be used to correlate with the resulting Transaction.
        amount integer(int64) Required

        Amount of the transfer, in cents.
        currency string Required

        Currency of the amount, in ISO 4217 format.
        local_iban string Required

        IBAN used as a source of the transfer. It can be the main IBAN of an account or a virtual IBAN.
        account_id string(uuid)

        ID of the account this transfer belongs to, it can be missing while we process it according to the local IBAN.
        beneficiary_iban string Required

        IBAN of the beneficiary.
        transfer_type string

        Type of the transfer. If the type strategy is instant_if_available, it can be missing while we determine the appropriate type.

        Values are standard or instant.
        type_strategy string Required

        Strategy used when creating the transfer.

        Values are standard_only, instant_only, or instant_if_available.
        status string Required

        Current status of the transfer.

        Values are pending, scheduled, authorized, confirmed, canceled, or failed.
        failure_code string

        Code that represents the failure reason when the transfer has failed:
            insufficient_funds: Not enough funds on your account to execute the transfer.
            instant_transfer_not_available: The beneficiary can not receive instant transfers.
            invalid_beneficiary_iban: The beneficiary's IBAN is invalid.
            unreachable_beneficiary_iban: The beneficiary is unreachable for the given transfer type.
            maximum_amount_exceeded: The transfer amount exceeds the limit.
            beneficiary_bank_account_closed: The beneficiary's bank account is closed.
            beneficiary_bank_error: The beneficiary's bank sent us an error.
            beneficiary_bank_invalid_bank_details: The beneficiary's bank account does not exist or no longer exists.
            beneficiary_bank_refusal: The beneficiary's bank has refused the transfer.
            intermediary_system_error: The interbank network sent us an error.
            memo_error: Something went wrong on our side.
            memo_refusal: We had to reject the transfer.
            execution_failure: Other or undefined pre-settlement execution failures.

        The following codes can only be present on transfers initiated as part of a bulk. When initiating a single transfer, those codes will be returned as an error response and the transfer won’t be created at all:
            current_account_not_found: The provided local IBAN does not exist.
            transfer_to_same_account: The transfer cannot credit the debtor account.
            transfer_to_owned_account_with_virtual_iban: A virtual IBAN cannot be used to transfer between your accounts.
            transfer_from_saving_account_to_external_beneficiary: You cannot transfer money to external beneficiaries from the Booster account.
            missing_new_beneficiary_name: The beneficiary does not exist and the name was not provided.
            new_beneficiary_is_owned_iban: The beneficiary does not exist and is one of your IBAN.

        Values are insufficient_funds, execution_failure, instant_transfer_not_available, invalid_beneficiary_iban, unreachable_beneficiary_iban, maximum_amount_exceeded, current_account_not_found, transfer_to_same_account, transfer_to_owned_account_with_virtual_iban, transfer_from_saving_account_to_external_beneficiary, missing_new_beneficiary_name, new_beneficiary_is_owned_iban, beneficiary_bank_account_closed, beneficiary_bank_error, beneficiary_bank_invalid_bank_details, beneficiary_bank_refusal, intermediary_system_error, memo_error, or memo_refusal.

        scheduled_date string(date)

        Date on which the transfer was scheduled, if any.
        message string

        Message attached to this transfer, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.
        internal_note string

        Internal note attached to this transfer, visible only in your Memo Bank workspace.
        custom_id string

        Custom identifier attached to the transaction resulting from this transfer. It is not transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.
        custom_metadata string

        Custom metadata attached to the transaction resulting from this transfer. It is not transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.

GET /v2/transfers/{id}

curl \
 --request GET https://api.memo.bank/v2/transfers/aa431134-bdc4-416e-8b7e-58a39e389707

Response examples (200)

{
  "id": "61b05c4f-3f72-4951-8c30-a2a9faaa5184",
  "reference": "ab004cfc-99fb-4ba9-bc9c-70982f853cb1",
  "amount": 500,
  "currency": "EUR",
  "local_iban": "FR6430003000509825397888D64",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "beneficiary_iban": "FR2512739000308553756377J95",
  "transfer_type": "standard",
  "type_strategy": "standard_only",
  "status": "failed",
  "failure_code": "insufficient_funds",
  "scheduled_date": "2025-05-04",
  "message": "invoice no12345",
  "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
  "internal_note": "phone bill",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata"
}



Cancel a SEPA transfer
DELETE /v2/transfers/{id}

This endpoint allows you to cancel a SEPA transfer before its execution has actually started.

Concretely a transfer can be canceled while in scheduled or authorized state. However, attempting to cancel a transfer in authorizedstate may result in a transfer_not_cancelable error if the transfer has already been sent to the creditor's bank. For the same reason, instant transfers cannot be canceled at all.
Path parameters

    id string(uuid) Required

    ID of the transfer.

Responses

    200

    OK

DELETE /v2/transfers/{id}

curl \
 --request DELETE https://api.memo.bank/v2/transfers/aa431134-bdc4-416e-8b7e-58a39e389707



Initiate a SEPA transfer
POST /v2/transfers

This endpoint allows you to initiate a SEPA transfer from your account.
application/json
Body Required

    amount integer(int64) Required

    Amount of the transfer, in cents. The currency is always EURO.

    Minimum value is 1.
    beneficiary_name string

    Name of the beneficiary. Will be used to create the beneficiary if one doesn't already exist with the same beneficiary_iban, will be ignored otherwise. If you know the beneficiary exists, you don't need to provide a name here.
    beneficiary_iban string Required

    IBAN of the beneficiary. Note that when you perform a transfer between your own accounts, you can't use a virtual IBAN.

    Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.
    local_iban string Required

    Existing IBAN to be used as the source of the transfer. Can be the main IBAN of an account or a virtual IBAN. Note that when you perform a transfer between your own accounts, you can't use a virtual IBAN.

    Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.
    type_strategy string

    Determines whether to use an instant transfer (available in a few seconds on the beneficiary account), or a standard transfer (1-3 business days). By default, use an instant transfer if available for the given beneficiary, use a standard transfer otherwise.

    Values are standard_only, instant_only, or instant_if_available. Default value is instant_if_available.
    scheduled_date string(date)

    The ISO8601 formatted date on which the transfer will be executed. This date must not be in the past. If not set, the transfer is executed immediately. Setting this date is incompatible with instant_only strategy.
    message string

    Message attached to this transfer, visible to all involved parties.
    end_to_end_id string

    Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.

    Minimum length is 1, maximum length is 35. Format should match the following pattern: [a-zA-Z0-9\-\?\:\(\)\.\,\'\+\ ]{1,35}.
    internal_note string

    Internal note attached to this transfer, visible only in your Memo Bank workspace.
    custom_id string

    Custom identifier that will be attached to the transaction resulting from this transfer. It will not be transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.

    Minimum length is 1, maximum length is 256.
    custom_metadata string

    Custom metadata that will be attached to the transaction resulting from this transfer. It will not be transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.

    Minimum length is 1, maximum length is 2048.

Responses

    200 application/json

    OK
    Hide response attributes object
        id string(uuid) Required

        ID of the transfer
        reference string(uuid) Required

        Unique reference, can be used to correlate with the resulting Transaction.
        amount integer(int64) Required

        Amount of the transfer, in cents.
        currency string Required

        Currency of the amount, in ISO 4217 format.
        local_iban string Required

        IBAN used as a source of the transfer. It can be the main IBAN of an account or a virtual IBAN.
        account_id string(uuid)

        ID of the account this transfer belongs to, it can be missing while we process it according to the local IBAN.
        beneficiary_iban string Required

        IBAN of the beneficiary.
        transfer_type string

        Type of the transfer. If the type strategy is instant_if_available, it can be missing while we determine the appropriate type.

        Values are standard or instant.
        type_strategy string Required

        Strategy used when creating the transfer.

        Values are standard_only, instant_only, or instant_if_available.
        status string Required

        Current status of the transfer.

        Values are pending, scheduled, authorized, confirmed, canceled, or failed.
        failure_code string

        Code that represents the failure reason when the transfer has failed:
            insufficient_funds: Not enough funds on your account to execute the transfer.
            instant_transfer_not_available: The beneficiary can not receive instant transfers.
            invalid_beneficiary_iban: The beneficiary's IBAN is invalid.
            unreachable_beneficiary_iban: The beneficiary is unreachable for the given transfer type.
            maximum_amount_exceeded: The transfer amount exceeds the limit.
            beneficiary_bank_account_closed: The beneficiary's bank account is closed.
            beneficiary_bank_error: The beneficiary's bank sent us an error.
            beneficiary_bank_invalid_bank_details: The beneficiary's bank account does not exist or no longer exists.
            beneficiary_bank_refusal: The beneficiary's bank has refused the transfer.
            intermediary_system_error: The interbank network sent us an error.
            memo_error: Something went wrong on our side.
            memo_refusal: We had to reject the transfer.
            execution_failure: Other or undefined pre-settlement execution failures.

        The following codes can only be present on transfers initiated as part of a bulk. When initiating a single transfer, those codes will be returned as an error response and the transfer won’t be created at all:
            current_account_not_found: The provided local IBAN does not exist.
            transfer_to_same_account: The transfer cannot credit the debtor account.
            transfer_to_owned_account_with_virtual_iban: A virtual IBAN cannot be used to transfer between your accounts.
            transfer_from_saving_account_to_external_beneficiary: You cannot transfer money to external beneficiaries from the Booster account.
            missing_new_beneficiary_name: The beneficiary does not exist and the name was not provided.
            new_beneficiary_is_owned_iban: The beneficiary does not exist and is one of your IBAN.

        Values are insufficient_funds, execution_failure, instant_transfer_not_available, invalid_beneficiary_iban, unreachable_beneficiary_iban, maximum_amount_exceeded, current_account_not_found, transfer_to_same_account, transfer_to_owned_account_with_virtual_iban, transfer_from_saving_account_to_external_beneficiary, missing_new_beneficiary_name, new_beneficiary_is_owned_iban, beneficiary_bank_account_closed, beneficiary_bank_error, beneficiary_bank_invalid_bank_details, beneficiary_bank_refusal, intermediary_system_error, memo_error, or memo_refusal.
        scheduled_date string(date)

        Date on which the transfer was scheduled, if any.
        message string

        Message attached to this transfer, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.
        internal_note string

        Internal note attached to this transfer, visible only in your Memo Bank workspace.
        custom_id string

        Custom identifier attached to the transaction resulting from this transfer. It is not transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.
        custom_metadata string

        Custom metadata attached to the transaction resulting from this transfer. It is not transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.

POST /v2/transfers

curl \
 --request POST https://api.memo.bank/v2/transfers \
 --header "Content-Type: application/json" \
 --data '{"amount":500,"beneficiary_name":"John Doe","beneficiary_iban":"FR2512739000308553756377J95","local_iban":"FR6430003000509825397888D64","type_strategy":"instant_if_available","scheduled_date":"2022-12-05","message":"invoice no12345","end_to_end_id":"b0bfb42baa2642c2af0ca3e880fcd590","internal_note":"phone bill","custom_id":"637406efda8534de8c0e","custom_metadata":"This is some metadata"}'

Request examples

{
  "amount": 500,
  "beneficiary_name": "John Doe",
  "beneficiary_iban": "FR2512739000308553756377J95",
  "local_iban": "FR6430003000509825397888D64",
  "type_strategy": "instant_if_available",
  "scheduled_date": "2022-12-05",
  "message": "invoice no12345",
  "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
  "internal_note": "phone bill",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata"
}

Response examples (200)

{
  "id": "61b05c4f-3f72-4951-8c30-a2a9faaa5184",
  "reference": "ab004cfc-99fb-4ba9-bc9c-70982f853cb1",
  "amount": 500,
  "currency": "EUR",
  "local_iban": "FR6430003000509825397888D64",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "beneficiary_iban": "FR2512739000308553756377J95",
  "transfer_type": "standard",
  "type_strategy": "standard_only",
  "status": "failed",
  "failure_code": "insufficient_funds",
  "scheduled_date": "2025-05-04",
  "message": "invoice no12345",
  "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
  "internal_note": "phone bill",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata"
}



Create bulk transfers
POST /v2/transfers/bulks

This endpoint allows to create up to 5000 transfers with a single call. It acts exactly as if you called the POST /v2/transfers endpoint 5000 times yourself, except you don't need to worry about rate limiting. It also allows you to get an aggregated state for this bulk.

This endpoint does not perform the transfers synchronously, a 200 OK response means the bulk will be handled in the near future. You can either poll the GET endpoint or use the webhooks to follow its progress.

Note that the completion of a bulk does not mean all transfers are settled, it only means the transfers were initiated (the equivalent of a call to POST /v2/transfers).
application/json
Body Required

    transfers array[object] Required

    Transfer creations to execute. There should not be more than 5000 transfers in a single bulk, and there should be at least one.
    Hide transfers attributes object
        amount integer(int64) Required

        Amount of the transfer, in cents. The currency is always EURO.

        Minimum value is 1.
        beneficiary_name string

        Name of the beneficiary. Will be used to create the beneficiary if one doesn't already exist with the same beneficiary_iban, will be ignored otherwise. If you know the beneficiary exists, you don't need to provide a name here.
        beneficiary_iban string Required

        IBAN of the beneficiary. Note that when you perform a transfer between your own accounts, you can't use a virtual IBAN.

        Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.
        local_iban string Required

        Existing IBAN to be used as the source of the transfer. Can be the main IBAN of an account or a virtual IBAN. Note that when you perform a transfer between your own accounts, you can't use a virtual IBAN.

        Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.
        type_strategy string

        Determines whether to use an instant transfer (available in a few seconds on the beneficiary account), or a standard transfer (1-3 business days). By default, use an instant transfer if available for the given beneficiary, use a standard transfer otherwise.

        Values are standard_only, instant_only, or instant_if_available. Default value is instant_if_available.
        scheduled_date string(date)

        The ISO8601 formatted date on which the transfer will be executed. This date must not be in the past. If not set, the transfer is executed immediately. Setting this date is incompatible with instant_only strategy.
        message string

        Message attached to this transfer, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.

        Minimum length is 1, maximum length is 35. Format should match the following pattern: [a-zA-Z0-9\-\?\:\(\)\.\,\'\+\ ]{1,35}.
        internal_note string

        Internal note attached to this transfer, visible only in your Memo Bank workspace.
        custom_id string

        Custom identifier that will be attached to the transaction resulting from this transfer. It will not be transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.

        Minimum length is 1, maximum length is 256.
        custom_metadata string

        Custom metadata that will be attached to the transaction resulting from this transfer. It will not be transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.

        Minimum length is 1, maximum length is 2048.

Responses

    200 application/json

    OK
    Hide response attributes object
        id string(uuid) Required

        ID of the bulk.
        transfers_total integer(int32) Required

        Total number of transfers in the bulk.
        transfers_confirmed integer(int32) Required

        Number of transfers that were processed and confirmed.
        transfers_canceled integer(int32) Required

        Number of transfers canceled before processing.
        transfers_failed integer(int32) Required

        Number of transfers that were processed and failed.
        status string Required

        Aggregated status of the bulk.

        Values are pending or completed.

POST /v2/transfers/bulks

curl \
 --request POST https://api.memo.bank/v2/transfers/bulks \
 --header "Content-Type: application/json" \
 --data '{"transfers":[{"amount":500,"beneficiary_name":"John Doe","beneficiary_iban":"FR2512739000308553756377J95","local_iban":"FR6430003000509825397888D64","type_strategy":"instant_if_available","scheduled_date":"2022-12-05","message":"invoice no12345","end_to_end_id":"b0bfb42baa2642c2af0ca3e880fcd590","internal_note":"phone bill","custom_id":"637406efda8534de8c0e","custom_metadata":"This is some metadata"}]}'

Request examples

{
  "transfers": [
    {
      "amount": 500,
      "beneficiary_name": "John Doe",
      "beneficiary_iban": "FR2512739000308553756377J95",
      "local_iban": "FR6430003000509825397888D64",
      "type_strategy": "instant_if_available",
      "scheduled_date": "2022-12-05",
      "message": "invoice no12345",
      "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
      "internal_note": "phone bill",
      "custom_id": "637406efda8534de8c0e",
      "custom_metadata": "This is some metadata"
    }
  ]
}

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "transfers_total": 3000,
  "transfers_confirmed": 1552,
  "transfers_canceled": 2,
  "transfers_failed": 57,
  "status": "pending"
}



Generate a proof of transfer
GET /v2/transfers/{id}/proof

Proofs can only be generated for confirmed transfers.
Path parameters

    id string(uuid) Required

    ID of the transfer.

Responses

    200 application/octet-stream

    OK

GET /v2/transfers/{id}/proof

curl \
 --request GET https://api.memo.bank/v2/transfers/c70bd7bc-58e0-4fdb-8c1f-70186e0de587/proof




GET /v2/transfers/{id}/proof

curl \
 --request GET https://api.memo.bank/v2/transfers/c70bd7bc-58e0-4fdb-8c1f-70186e0de587/proof

Get a bulk and its current progress
GET /v2/transfers/bulks/{id}
Path parameters

    id string(uuid) Required

    ID of the bulk.

Responses

    200 application/json

    OK
    Hide response attributes object
        id string(uuid) Required

        ID of the bulk.
        transfers_total integer(int32) Required

        Total number of transfers in the bulk.
        transfers_confirmed integer(int32) Required

        Number of transfers that were processed and confirmed.
        transfers_canceled integer(int32) Required

        Number of transfers canceled before processing.
        transfers_failed integer(int32) Required

        Number of transfers that were processed and failed.
        status string Required

        Aggregated status of the bulk.

        Values are pending or completed.

GET /v2/transfers/bulks/{id}

curl \
 --request GET https://api.memo.bank/v2/transfers/bulks/6ba07619-24ff-43f3-b1f0-cdc9b06bf8a7

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "transfers_total": 3000,
  "transfers_confirmed": 1552,
  "transfers_canceled": 2,
  "transfers_failed": 57,
  "status": "pending"
}



Get the status of individual transfers in a bulk
GET /v2/transfers/bulks/{id}/transfers
Path parameters

    id string(uuid) Required

    ID of the bulk.

Query parameters

    status array[string]

    Filter transfers by status.

    Values are pending, scheduled, authorized, confirmed, canceled, or failed.
    page integer(int32)

    Index of the requested page.

    Minimum value is 1. Default value is 1.
    size integer(int32)

    Number of elements per page in response.

    Minimum value is 1, maximum value is 100. Default value is 10.

Responses

    200 application/json

    OK
    Hide response attributes object
        results array[object] Required

        Elements of the page.
        Hide results attributes object
            id string(uuid) Required

            ID of the transfer
            reference string(uuid) Required

            Unique reference, can be used to correlate with the resulting Transaction.
            amount integer(int64) Required

            Amount of the transfer, in cents.
            currency string Required

            Currency of the amount, in ISO 4217 format.
            local_iban string Required

            IBAN used as a source of the transfer. It can be the main IBAN of an account or a virtual IBAN.
            account_id string(uuid)

            ID of the account this transfer belongs to, it can be missing while we process it according to the local IBAN.
            beneficiary_iban string Required

            IBAN of the beneficiary.
            transfer_type string

            Type of the transfer. If the type strategy is instant_if_available, it can be missing while we determine the appropriate type.

            Values are standard or instant.
            type_strategy string Required

            Strategy used when creating the transfer.

            Values are standard_only, instant_only, or instant_if_available.
            status string Required

            Current status of the transfer.

            Values are pending, scheduled, authorized, confirmed, canceled, or failed.
            failure_code string

            Code that represents the failure reason when the transfer has failed:
                insufficient_funds: Not enough funds on your account to execute the transfer.
                instant_transfer_not_available: The beneficiary can not receive instant transfers.
                invalid_beneficiary_iban: The beneficiary's IBAN is invalid.
                unreachable_beneficiary_iban: The beneficiary is unreachable for the given transfer type.
                maximum_amount_exceeded: The transfer amount exceeds the limit.
                beneficiary_bank_account_closed: The beneficiary's bank account is closed.
                beneficiary_bank_error: The beneficiary's bank sent us an error.
                beneficiary_bank_invalid_bank_details: The beneficiary's bank account does not exist or no longer exists.
                beneficiary_bank_refusal: The beneficiary's bank has refused the transfer.
                intermediary_system_error: The interbank network sent us an error.
                memo_error: Something went wrong on our side.
                memo_refusal: We had to reject the transfer.
                execution_failure: Other or undefined pre-settlement execution failures.

            The following codes can only be present on transfers initiated as part of a bulk. When initiating a single transfer, those codes will be returned as an error response and the transfer won’t be created at all:
                current_account_not_found: The provided local IBAN does not exist.
                transfer_to_same_account: The transfer cannot credit the debtor account.
                transfer_to_owned_account_with_virtual_iban: A virtual IBAN cannot be used to transfer between your accounts.
                transfer_from_saving_account_to_external_beneficiary: You cannot transfer money to external beneficiaries from the Booster account.
                missing_new_beneficiary_name: The beneficiary does not exist and the name was not provided.
                new_beneficiary_is_owned_iban: The beneficiary does not exist and is one of your IBAN.

            Values are insufficient_funds, execution_failure, instant_transfer_not_available, invalid_beneficiary_iban, unreachable_beneficiary_iban, maximum_amount_exceeded, current_account_not_found, transfer_to_same_account, transfer_to_owned_account_with_virtual_iban, transfer_from_saving_account_to_external_beneficiary, missing_new_beneficiary_name, new_beneficiary_is_owned_iban, beneficiary_bank_account_closed, beneficiary_bank_error, beneficiary_bank_invalid_bank_details, beneficiary_bank_refusal, intermediary_system_error, memo_error, or memo_refusal.
            scheduled_date string(date)

            Date on which the transfer was scheduled, if any.
            message string

            Message attached to this transfer, visible to all involved parties.
            end_to_end_id string

            Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.
            internal_note string

            Internal note attached to this transfer, visible only in your Memo Bank workspace.
            custom_id string

            Custom identifier attached to the transaction resulting from this transfer. It is not transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.
            custom_metadata string

            Custom metadata attached to the transaction resulting from this transfer. It is not transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.
        has_prev boolean Required

        Flag indicating if there is a previous page.
        has_next boolean Required

        Flag indicating if there is a next page.

GET /v2/transfers/bulks/{id}/transfers

curl \
 --request GET https://api.memo.bank/v2/transfers/bulks/6ba07619-24ff-43f3-b1f0-cdc9b06bf8a7/transfers

Response examples (200)

{
  "results": [
    {
      "id": "61b05c4f-3f72-4951-8c30-a2a9faaa5184",
      "reference": "ab004cfc-99fb-4ba9-bc9c-70982f853cb1",
      "amount": 500,
      "currency": "EUR",
      "local_iban": "FR6430003000509825397888D64",
      "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
      "beneficiary_iban": "FR2512739000308553756377J95",
      "transfer_type": "standard",
      "type_strategy": "standard_only",
      "status": "failed",
      "failure_code": "insufficient_funds",
      "scheduled_date": "2025-05-04",
      "message": "invoice no12345",
      "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
      "internal_note": "phone bill",
      "custom_id": "637406efda8534de8c0e",
      "custom_metadata": "This is some metadata"
    }
  ],
  "has_prev": true,
  "has_next": true
}




Collections

Collections are SEPA direct debit collections, including SEPA CORE direct debits and SEPA B2B direct debits.

To initiate a direct debit, a mandate signed by the debtor is required. You have the option to use our signature request workflow, which handles this signature, or you can choose to manage it yourself. Whichever method you select, you will only need to provide the mandate information when setting up the direct debit, not the signed document itself.

They can be initiated asynchronously, one by one or in bulk.

Unlike transfers, collections can only be scheduled for a date in the future. As a result, their lifecycle is also simplified.

Collections lifecycle

Collections lifecycle
Get a collection
GET /v2/collections/{id}
Path parameters

    id string(uuid) Required

    ID of the collection.

Responses

    200 application/json

    OK
    Hide response attributes object
        id string(uuid) Required

        ID of the collection.
        reference string(uuid) Required

        Unique reference, can be used to correlate with the resulting Transaction.
        amount integer(int64) Required

        The collection amount, in cents.
        currency string Required

        Currency of the amount, in ISO 4217 format.
        mandate object Required

        The SEPA Direct Debit collection mandate used.

        Additional properties are allowed.
        Hide mandate attributes object
            reference string Required

            The unique mandate reference.
            scheme string Required

            The mandate scheme.

            Values are b2b or core.
        scheduled_date string(date) Required

        The collection scheduled date, in ISO8601 format.
        local_iban string Required

        IBAN credited or to be credited. It can be the main IBAN of an account or a virtual IBAN.
        account_id string(uuid)

        ID of the account this collection belongs to, it can be missing while we process it according to the local IBAN.
        status string Required

        Current status of the collection.

        Values are pending, scheduled, confirmed, canceled, or failed.
        failure_code string

        Code that represents the failure reason when the collection has failed:
            invalid_mandate_iban: The mandate's IBAN is invalid.
            unreachable_mandate_iban: The mandate's IBAN is unreachable for the given scheme.
            missing_debtor_address: The debtor address is missing and required for non-EEA SEPA countries.
            core_limit_exceeded: The limit for CORE collections was exceeded.
            debtor_refusal: The debtor has refused the collection.
            debtor_bank_account_closed: The debtor's bank account is closed.
            debtor_bank_insufficient_funds: The debtor's bank account has insufficient funds.
            debtor_bank_error: The debtor's bank sent us an error.
            debtor_bank_invalid_bank_details: The debtor's bank account does not exist or no longer exists.
            debtor_bank_refusal: The debtor's bank has refused the collection.
            intermediary_system_error: The interbank network sent us an error.
            memo_error: Something went wrong on our side.
            memo_refusal: We had to reject the collection.
            execution_failure: Other or undefined pre-settlement execution failures.

        The following codes can only be present on collections initiated as part of a bulk. When initiating a single collection, those codes will be returned as an error response and the collection won’t be created at all:
            account_cannot_receive_collections: The account cannot receive collections.
            current_account_not_found: The provided local IBAN does not exist.
            creditor_is_saving_account: The provided local IBAN is a Booster account.
            no_sepa_creditor_identifier: You need to setup a SEPA creditor identifier with your banker.
            mandate_info_missing: New mandate information must be complete.
            mandate_iban_mismatch: The mandate reference already exists but with a different IBAN.
            collection_to_same_account: The local IBAN and the debtor IBAN can not be the same.

        Values are invalid_mandate_iban, unreachable_mandate_iban, missing_debtor_address, core_limit_exceeded, execution_failure, current_account_not_found, no_sepa_creditor_identifier, creditor_is_saving_account, mandate_info_missing, mandate_iban_mismatch, collection_to_same_account, debtor_refusal, debtor_bank_account_closed, debtor_bank_error, debtor_bank_insufficient_funds, debtor_bank_invalid_bank_details, debtor_bank_refusal, intermediary_system_error, memo_error, memo_refusal, or account_cannot_receive_collections.
        message string

        Message attached to this collection, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.
        internal_note string

        Internal note attached to this collection, visible only in your Memo Bank workspace.
        custom_id string

        Custom identifier attached to the transaction resulting from this collection. It is not transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.
        custom_metadata string

        Custom metadata attached to the transaction resulting from this collection. It is not transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.

GET /v2/collections/{id}

curl \
 --request GET https://api.memo.bank/v2/collections/45195a6f-daa8-4bc1-9ac4-3979e72bd89d

Response examples (200)

{
  "id": "61b05c4f-3f72-4951-8c30-a2a9faaa5184",
  "reference": "ab004cfc-99fb-4ba9-bc9c-70982f853cb1",
  "amount": 500,
  "currency": "EUR",
  "mandate": {
    "reference": "ABC123DEF",
    "scheme": "core"
  },
  "scheduled_date": "2022-12-05",
  "local_iban": "FR6430003000509825397888D64",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "status": "failed",
  "failure_code": "invalid_mandate_iban",
  "message": "invoice no12345",
  "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
  "internal_note": "phone bill",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata"
}



Cancel a SEPA Direct Debit collection
DELETE /v2/collections/{id}

This endpoint allows you to cancel a SEPA Direct Debit collection before it has been submitted.

Concretely a collection can only be canceled while in scheduled state.
Path parameters

    id string(uuid) Required

    ID of the collection.

Responses

    200

    OK

DELETE /v2/collections/{id}

curl \
 --request DELETE https://api.memo.bank/v2/collections/45195a6f-daa8-4bc1-9ac4-3979e72bd89d




DELETE /v2/collections/{id}

curl \
 --request DELETE https://api.memo.bank/v2/collections/45195a6f-daa8-4bc1-9ac4-3979e72bd89d

Schedule a SEPA Direct Debit collection
POST /v2/collections

This endpoint allows you to schedule a SEPA Direct Debit collection to be credited on one of your accounts.
application/json
Body Required

    amount integer(int64) Required

    Amount to be collected, in cents. The currency is always EURO.

    Minimum value is 1.
    mandate object Required

    The SEPA Direct Debit collection mandate to be used.

    Additional properties are allowed.
    Hide mandate attributes object
        reference string Required

        The unique mandate reference.

        Format should match the following pattern: [A-Za-z0-9+?/\-:().,'\s]{1,35}.
        scheme string Required

        The mandate scheme.

        Values are b2b or core.
        signature_date string(date)

        The mandate signature date, in ISO8601 format. The date must not be in the future. This field is only required in case of a new mandate. If there is an existing mandate matching the scheme and with the same reference, this field will be ignored.
        debtor object

        The debtor associated with this mandate.This field is only required in case of a new mandate. If there is an existing mandate with this reference and scheme, all information in this field will be ignored except for the debtor IBAN which needs to be the same as the one in the existing mandate. Providing a different IBAN will produce a 400 error with the code outgoing_collection_mandate_iban_mismatch.

        Additional properties are allowed.
        Hide debtor attributes object
            name string Required

            Name of the debtor.

            Minimum length is 1, maximum length is 256.
            iban string Required

            IBAN of the debtor.

            Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.
            address object

            The debtor's address. Mandatory only when the debtor's bank — more specifically, its BIC — is located in a non-EEA SEPA country or territory.

            Additional properties are allowed.
            Hide address attributes object
                street string Required

                Name of the street.

                Minimum length is 1, maximum length is 256.
                building_number string

                Number of the building or house.

                Minimum length is 1, maximum length is 256.
                postal_code string Required

                Postal or zip code.

                Minimum length is 1, maximum length is 256.
                city string Required

                Name of the city.

                Minimum length is 1, maximum length is 256.
                country string Required

                ISO3166-1 alpha-2 country code.

                Format should match the following pattern: [A-Z]{2}.
        contract_reference string

        The contract reference attached to this mandate. This is optional metadata.If there is an existing mandate matching the scheme and with the same reference, this field will be ignored when provided.

        Minimum length is 1, maximum length is 256.
    scheduled_date string(date) Required

    The ISO8601 formatted date on which the direct debit collection will be submitted. This date must not be in the past. If your direct debit is scheduled to be submitted on a non-business day, it will be effectively submitted on the next business day. The execution will then happen on the following business day. For example, a direct debit scheduled on a Saturday will be submitted on the following Monday and executed on the Tuesday (assuming that both week days are business days).
    local_iban string Required

    Existing IBAN to be credited. It can be the main IBAN of an account or a virtual IBAN.

    Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.
    message string

    Message attached to this collection, visible to all involved parties.

    Minimum length is 1, maximum length is 256.
    end_to_end_id string

    Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.

    Minimum length is 1, maximum length is 35. Format should match the following pattern: [a-zA-Z0-9\-\?\:\(\)\.\,\'\+\ ]{1,35}.
    internal_note string

    Internal note attached to this collection, visible only in your Memo Bank workspace.

    Minimum length is 1, maximum length is 256.
    custom_id string

    Custom identifier that will be attached to the transaction resulting from this collection. It will not be transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.

    Minimum length is 1, maximum length is 256.
    custom_metadata string

    Custom metadata that will be attached to the transaction resulting from this collection. It will not be transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.

    Minimum length is 1, maximum length is 2048.

Responses

    200 application/json

    OK
    Hide response attributes object
        id string(uuid) Required

        ID of the collection.
        reference string(uuid) Required

        Unique reference, can be used to correlate with the resulting Transaction.
        amount integer(int64) Required

        The collection amount, in cents.
        currency string Required

        Currency of the amount, in ISO 4217 format.
        mandate object Required

        The SEPA Direct Debit collection mandate used.

        Additional properties are allowed.
        Hide mandate attributes object
            reference string Required

            The unique mandate reference.
            scheme string Required

            The mandate scheme.

            Values are b2b or core.
        scheduled_date string(date) Required

        The collection scheduled date, in ISO8601 format.
        local_iban string Required

        IBAN credited or to be credited. It can be the main IBAN of an account or a virtual IBAN.
        account_id string(uuid)

        ID of the account this collection belongs to, it can be missing while we process it according to the local IBAN.
        status string Required

        Current status of the collection.

        Values are pending, scheduled, confirmed, canceled, or failed.
        failure_code string

        Code that represents the failure reason when the collection has failed:
            invalid_mandate_iban: The mandate's IBAN is invalid.
            unreachable_mandate_iban: The mandate's IBAN is unreachable for the given scheme.
            missing_debtor_address: The debtor address is missing and required for non-EEA SEPA countries.
            core_limit_exceeded: The limit for CORE collections was exceeded.
            debtor_refusal: The debtor has refused the collection.
            debtor_bank_account_closed: The debtor's bank account is closed.
            debtor_bank_insufficient_funds: The debtor's bank account has insufficient funds.
            debtor_bank_error: The debtor's bank sent us an error.
            debtor_bank_invalid_bank_details: The debtor's bank account does not exist or no longer exists.
            debtor_bank_refusal: The debtor's bank has refused the collection.
            intermediary_system_error: The interbank network sent us an error.
            memo_error: Something went wrong on our side.
            memo_refusal: We had to reject the collection.
            execution_failure: Other or undefined pre-settlement execution failures.

        The following codes can only be present on collections initiated as part of a bulk. When initiating a single collection, those codes will be returned as an error response and the collection won’t be created at all:
            account_cannot_receive_collections: The account cannot receive collections.
            current_account_not_found: The provided local IBAN does not exist.
            creditor_is_saving_account: The provided local IBAN is a Booster account.
            no_sepa_creditor_identifier: You need to setup a SEPA creditor identifier with your banker.
            mandate_info_missing: New mandate information must be complete.
            mandate_iban_mismatch: The mandate reference already exists but with a different IBAN.
            collection_to_same_account: The local IBAN and the debtor IBAN can not be the same.

        Values are invalid_mandate_iban, unreachable_mandate_iban, missing_debtor_address, core_limit_exceeded, execution_failure, current_account_not_found, no_sepa_creditor_identifier, creditor_is_saving_account, mandate_info_missing, mandate_iban_mismatch, collection_to_same_account, debtor_refusal, debtor_bank_account_closed, debtor_bank_error, debtor_bank_insufficient_funds, debtor_bank_invalid_bank_details, debtor_bank_refusal, intermediary_system_error, memo_error, memo_refusal, or account_cannot_receive_collections.
        message string

        Message attached to this collection, visible to all involved parties.
        end_to_end_id string

        Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.
        internal_note string

        Internal note attached to this collection, visible only in your Memo Bank workspace.
        custom_id string

        Custom identifier attached to the transaction resulting from this collection. It is not transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.
        custom_metadata string

        Custom metadata attached to the transaction resulting from this collection. It is not transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.

POST /v2/collections

curl \
 --request POST https://api.memo.bank/v2/collections \
 --header "Content-Type: application/json" \
 --data '{"amount":500,"mandate":{"reference":"ABC123DEF","scheme":"core","signature_date":"2022-12-01","debtor":{"name":"John Doe","iban":"FR2512739000308553756377J95","address":{"street":"rue de la Boétie","building_number":"42","postal_code":"75008","city":"Paris","country":"FR"}},"contract_reference":"CUST-1234"},"scheduled_date":"2022-12-05","local_iban":"FR6430003000509825397888D64","message":"invoice no12345","end_to_end_id":"b0bfb42baa2642c2af0ca3e880fcd590","internal_note":"phone bill","custom_id":"637406efda8534de8c0e","custom_metadata":"This is some metadata"}'

Request examples

{
  "amount": 500,
  "mandate": {
    "reference": "ABC123DEF",
    "scheme": "core",
    "signature_date": "2022-12-01",
    "debtor": {
      "name": "John Doe",
      "iban": "FR2512739000308553756377J95",
      "address": {
        "street": "rue de la Boétie",
        "building_number": "42",
        "postal_code": "75008",
        "city": "Paris",
        "country": "FR"
      }
    },
    "contract_reference": "CUST-1234"
  },
  "scheduled_date": "2022-12-05",
  "local_iban": "FR6430003000509825397888D64",
  "message": "invoice no12345",
  "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
  "internal_note": "phone bill",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata"
}

Response examples (200)

{
  "id": "61b05c4f-3f72-4951-8c30-a2a9faaa5184",
  "reference": "ab004cfc-99fb-4ba9-bc9c-70982f853cb1",
  "amount": 500,
  "currency": "EUR",
  "mandate": {
    "reference": "ABC123DEF",
    "scheme": "core"
  },
  "scheduled_date": "2022-12-05",
  "local_iban": "FR6430003000509825397888D64",
  "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
  "status": "failed",
  "failure_code": "invalid_mandate_iban",
  "message": "invoice no12345",
  "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
  "internal_note": "phone bill",
  "custom_id": "637406efda8534de8c0e",
  "custom_metadata": "This is some metadata"
}



Create bulk collections
POST /v2/collections/bulks

This endpoint allows to create up to 5000 collections with a single call. It acts exactly as if you called the POST /v2/collections endpoint 5000 times yourself, except you don't need to worry about rate limiting. It also allows you to get an aggregated state for this bulk.

This endpoint does not perform the collections synchronously, a 200 OK response means the bulk will be handled in the near future. You can either poll the GET endpoint or use the webhooks to follow its progress.

Note that the completion of a bulk does not mean all collections are settled, it only means the collections were initiated (the equivalent of a call to POST /v2/collections).
application/json
Body Required

    collections array[object] Required

    Collection creations to execute. There should not be more than 5000 collections in a single bulk, and there should be at least one.
    Hide collections attributes object
        amount integer(int64) Required

        Amount to be collected, in cents. The currency is always EURO.

        Minimum value is 1.
        mandate object Required

        The SEPA Direct Debit collection mandate to be used.

        Additional properties are allowed.
        Hide mandate attributes object
            reference string Required

            The unique mandate reference.

            Format should match the following pattern: [A-Za-z0-9+?/\-:().,'\s]{1,35}.
            scheme string Required

            The mandate scheme.

            Values are b2b or core.
            signature_date string(date)

            The mandate signature date, in ISO8601 format. The date must not be in the future. This field is only required in case of a new mandate. If there is an existing mandate matching the scheme and with the same reference, this field will be ignored.
            debtor object

            The debtor associated with this mandate.This field is only required in case of a new mandate. If there is an existing mandate with this reference and scheme, all information in this field will be ignored except for the debtor IBAN which needs to be the same as the one in the existing mandate. Providing a different IBAN will produce a 400 error with the code outgoing_collection_mandate_iban_mismatch.

            Additional properties are allowed.
            Hide debtor attributes object
                name string Required

                Name of the debtor.

                Minimum length is 1, maximum length is 256.
                iban string Required

                IBAN of the debtor.

                Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.
                address object

                The debtor's address. Mandatory only when the debtor's bank — more specifically, its BIC — is located in a non-EEA SEPA country or territory.

                Additional properties are allowed.
                Hide address attributes object
                    street string Required

                    Name of the street.

                    Minimum length is 1, maximum length is 256.
                    building_number string

                    Number of the building or house.

                    Minimum length is 1, maximum length is 256.
                    postal_code string Required

                    Postal or zip code.

                    Minimum length is 1, maximum length is 256.
                    city string Required

                    Name of the city.

                    Minimum length is 1, maximum length is 256.
                    country string Required

                    ISO3166-1 alpha-2 country code.

                    Format should match the following pattern: [A-Z]{2}.
            contract_reference string

            The contract reference attached to this mandate. This is optional metadata.If there is an existing mandate matching the scheme and with the same reference, this field will be ignored when provided.

            Minimum length is 1, maximum length is 256.
        scheduled_date string(date) Required

        The ISO8601 formatted date on which the direct debit collection will be submitted. This date must not be in the past. If your direct debit is scheduled to be submitted on a non-business day, it will be effectively submitted on the next business day. The execution will then happen on the following business day. For example, a direct debit scheduled on a Saturday will be submitted on the following Monday and executed on the Tuesday (assuming that both week days are business days).
        local_iban string Required

        Existing IBAN to be credited. It can be the main IBAN of an account or a virtual IBAN.

        Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.
        message string

        Message attached to this collection, visible to all involved parties.

        Minimum length is 1, maximum length is 256.
        end_to_end_id string

        Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.

        Minimum length is 1, maximum length is 35. Format should match the following pattern: [a-zA-Z0-9\-\?\:\(\)\.\,\'\+\ ]{1,35}.
        internal_note string

        Internal note attached to this collection, visible only in your Memo Bank workspace.

        Minimum length is 1, maximum length is 256.
        custom_id string

        Custom identifier that will be attached to the transaction resulting from this collection. It will not be transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.

        Minimum length is 1, maximum length is 256.
        custom_metadata string

        Custom metadata that will be attached to the transaction resulting from this collection. It will not be transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.

        Minimum length is 1, maximum length is 2048.

Responses

    200 application/json

    OK
    Hide response attributes object
        id string(uuid) Required

        ID of the bulk.
        collections_total integer(int32) Required

        Total number of collections in the bulk.
        collections_confirmed integer(int32) Required

        Number of collections that were processed and confirmed.
        collections_canceled integer(int32) Required

        Number of collections canceled before processing.
        collections_failed integer(int32) Required

        Number of collections that were processed and failed.
        status string Required

        Aggregated status of the bulk.

        Values are pending or completed.

POST /v2/collections/bulks

curl \
 --request POST https://api.memo.bank/v2/collections/bulks \
 --header "Content-Type: application/json" \
 --data '{"collections":[{"amount":500,"mandate":{"reference":"ABC123DEF","scheme":"core","signature_date":"2022-12-01","debtor":{"name":"John Doe","iban":"FR2512739000308553756377J95","address":{"street":"rue de la Boétie","building_number":"42","postal_code":"75008","city":"Paris","country":"FR"}},"contract_reference":"CUST-1234"},"scheduled_date":"2022-12-05","local_iban":"FR6430003000509825397888D64","message":"invoice no12345","end_to_end_id":"b0bfb42baa2642c2af0ca3e880fcd590","internal_note":"phone bill","custom_id":"637406efda8534de8c0e","custom_metadata":"This is some metadata"}]}'

Request examples

{
  "collections": [
    {
      "amount": 500,
      "mandate": {
        "reference": "ABC123DEF",
        "scheme": "core",
        "signature_date": "2022-12-01",
        "debtor": {
          "name": "John Doe",
          "iban": "FR2512739000308553756377J95",
          "address": {
            "street": "rue de la Boétie",
            "building_number": "42",
            "postal_code": "75008",
            "city": "Paris",
            "country": "FR"
          }
        },
        "contract_reference": "CUST-1234"
      },
      "scheduled_date": "2022-12-05",
      "local_iban": "FR6430003000509825397888D64",
      "message": "invoice no12345",
      "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
      "internal_note": "phone bill",
      "custom_id": "637406efda8534de8c0e",
      "custom_metadata": "This is some metadata"
    }
  ]
}

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "collections_total": 3000,
  "collections_confirmed": 1552,
  "collections_canceled": 2,
  "collections_failed": 57,
  "status": "pending"
}



Get a bulk and its current progress
GET /v2/collections/bulks/{id}
Path parameters

    id string(uuid) Required

    ID of the bulk.

Responses

    200 application/json

    OK
    Hide response attributes object
        id string(uuid) Required

        ID of the bulk.
        collections_total integer(int32) Required

        Total number of collections in the bulk.
        collections_confirmed integer(int32) Required

        Number of collections that were processed and confirmed.
        collections_canceled integer(int32) Required

        Number of collections canceled before processing.
        collections_failed integer(int32) Required

        Number of collections that were processed and failed.
        status string Required

        Aggregated status of the bulk.

        Values are pending or completed.

GET /v2/collections/bulks/{id}

curl \
 --request GET https://api.memo.bank/v2/collections/bulks/6ba07619-24ff-43f3-b1f0-cdc9b06bf8a7

Response examples (200)

{
  "id": "fe98f29d-5165-45ff-83f9-d7aa83e970b5",
  "collections_total": 3000,
  "collections_confirmed": 1552,
  "collections_canceled": 2,
  "collections_failed": 57,
  "status": "pending"
}



Get the status of individual collection in a bulk
GET /v2/collections/bulks/{id}/collections
Path parameters

    id string(uuid) Required

    ID of the bulk.

Query parameters

    status array[string]

    Filter collections by status.

    Values are pending, scheduled, confirmed, canceled, or failed.
    page integer(int32)

    Index of the requested page.

    Minimum value is 1. Default value is 1.
    size integer(int32)

    Number of elements per page in response.

    Minimum value is 1, maximum value is 100. Default value is 10.

Responses

    200 application/json

    OK
    Hide response attributes object
        results array[object] Required

        Elements of the page.
        Hide results attributes object
            id string(uuid) Required

            ID of the collection.
            reference string(uuid) Required

            Unique reference, can be used to correlate with the resulting Transaction.
            amount integer(int64) Required

            The collection amount, in cents.
            currency string Required

            Currency of the amount, in ISO 4217 format.
            mandate object Required

            The SEPA Direct Debit collection mandate used.

            Additional properties are allowed.
            Hide mandate attributes object
                reference string Required

                The unique mandate reference.
                scheme string Required

                The mandate scheme.

                Values are b2b or core.
            scheduled_date string(date) Required

            The collection scheduled date, in ISO8601 format.
            local_iban string Required

            IBAN credited or to be credited. It can be the main IBAN of an account or a virtual IBAN.
            account_id string(uuid)

            ID of the account this collection belongs to, it can be missing while we process it according to the local IBAN.
            status string Required

            Current status of the collection.

            Values are pending, scheduled, confirmed, canceled, or failed.
            failure_code string

            Code that represents the failure reason when the collection has failed:
                invalid_mandate_iban: The mandate's IBAN is invalid.
                unreachable_mandate_iban: The mandate's IBAN is unreachable for the given scheme.
                missing_debtor_address: The debtor address is missing and required for non-EEA SEPA countries.
                core_limit_exceeded: The limit for CORE collections was exceeded.
                debtor_refusal: The debtor has refused the collection.
                debtor_bank_account_closed: The debtor's bank account is closed.
                debtor_bank_insufficient_funds: The debtor's bank account has insufficient funds.
                debtor_bank_error: The debtor's bank sent us an error.
                debtor_bank_invalid_bank_details: The debtor's bank account does not exist or no longer exists.
                debtor_bank_refusal: The debtor's bank has refused the collection.
                intermediary_system_error: The interbank network sent us an error.
                memo_error: Something went wrong on our side.
                memo_refusal: We had to reject the collection.
                execution_failure: Other or undefined pre-settlement execution failures.

            The following codes can only be present on collections initiated as part of a bulk. When initiating a single collection, those codes will be returned as an error response and the collection won’t be created at all:
                account_cannot_receive_collections: The account cannot receive collections.
                current_account_not_found: The provided local IBAN does not exist.
                creditor_is_saving_account: The provided local IBAN is a Booster account.
                no_sepa_creditor_identifier: You need to setup a SEPA creditor identifier with your banker.
                mandate_info_missing: New mandate information must be complete.
                mandate_iban_mismatch: The mandate reference already exists but with a different IBAN.
                collection_to_same_account: The local IBAN and the debtor IBAN can not be the same.

            Values are invalid_mandate_iban, unreachable_mandate_iban, missing_debtor_address, core_limit_exceeded, execution_failure, current_account_not_found, no_sepa_creditor_identifier, creditor_is_saving_account, mandate_info_missing, mandate_iban_mismatch, collection_to_same_account, debtor_refusal, debtor_bank_account_closed, debtor_bank_error, debtor_bank_insufficient_funds, debtor_bank_invalid_bank_details, debtor_bank_refusal, intermediary_system_error, memo_error, memo_refusal, or account_cannot_receive_collections.
            message string

            Message attached to this collection, visible to all involved parties.
            end_to_end_id string

            Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.
            internal_note string

            Internal note attached to this collection, visible only in your Memo Bank workspace.
            custom_id string

            Custom identifier attached to the transaction resulting from this collection. It is not transmitted nor visible in your Memo Bank workspace. It can only be retrieved or used to search for transactions via Memo Bank API.
            custom_metadata string

            Custom metadata attached to the transaction resulting from this collection. It is not transmitted nor visible in your Memo Bank workspace and can only be retrieved via API.
        has_prev boolean Required

        Flag indicating if there is a previous page.
        has_next boolean Required

        Flag indicating if there is a next page.

GET /v2/collections/bulks/{id}/collections

curl \
 --request GET https://api.memo.bank/v2/collections/bulks/6ba07619-24ff-43f3-b1f0-cdc9b06bf8a7/collections

Response examples (200)

{
  "results": [
    {
      "id": "61b05c4f-3f72-4951-8c30-a2a9faaa5184",
      "reference": "ab004cfc-99fb-4ba9-bc9c-70982f853cb1",
      "amount": 500,
      "currency": "EUR",
      "mandate": {
        "reference": "ABC123DEF",
        "scheme": "core"
      },
      "scheduled_date": "2022-12-05",
      "local_iban": "FR6430003000509825397888D64",
      "account_id": "708683cb-60f6-464a-a62f-be2e339c34aa",
      "status": "failed",
      "failure_code": "invalid_mandate_iban",
      "message": "invoice no12345",
      "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
      "internal_note": "phone bill",
      "custom_id": "637406efda8534de8c0e",
      "custom_metadata": "This is some metadata"
    }
  ],
  "has_prev": true,
  "has_next": true
}




Mandate signature requests

Mandate signature requests are a way to prepare and send collection mandates for signature. The mandate debtor receives an email with a link so they can complete and sign the mandate. Once it has been signed, the resulting mandate becomes immediately available for making collections. Dedicated webhook events can be used to track mandate signature requests state changes.
List the mandate signature requests
GET /v2/mandate_signature_requests
Query parameters

    status array[string]

    Filter mandate signature requests by status.

    Values are sent, expired, or completed.
    page integer(int32)

    Index of the requested page.

    Minimum value is 1. Default value is 1.
    size integer(int32)

    Number of elements per page in response.

    Minimum value is 1, maximum value is 100. Default value is 10.

Responses

    200 application/json

    OK
    Hide response attributes object
        results array[object] Required

        Elements of the page.
        Hide results attributes object
            id string(uuid) Required

            ID of the mandate signature request
            reference string Required

            The unique mandate reference.

            Format should match the following pattern: [A-Za-z0-9+?/\-:().,'\s]{1,35}.
            scheme string Required

            The mandate scheme.

            Values are b2b or core.
            debtor_email string Required

            The email address of the debtor.
            email_custom_message string

            Custom text message included in the email sent to the debtor.
            contract_reference string

            The contract reference attached to the mandate. This is optional metadata.
            status string Required

            Current status of the mandate signature request.

            Values are sent, expired, or completed.
            language string Required

            The language used for the email and signature page for the debtor.

            Values are french or english. Default value is french.
            is_deleted boolean Required

            Whether or not this mandate signature request has been deleted.
        has_prev boolean Required

        Flag indicating if there is a previous page.
        has_next boolean Required

        Flag indicating if there is a next page.

GET /v2/mandate_signature_requests

curl \
 --request GET https://api.memo.bank/v2/mandate_signature_requests

Response examples (200)

{
  "results": [
    {
      "id": "61b05c4f-3f72-4951-8c30-a2a9faaa5184",
      "reference": "ABC123DEF",
      "scheme": "core",
      "debtor_email": "foo@bar.com",
      "email_custom_message": "Hi John Doe, here's a collection mandate to sign.",
      "contract_reference": "CUST-1234",
      "status": "sent",
      "language": "french",
      "is_deleted": false
    }
  ],
  "has_prev": true,
  "has_next": true
}



Create a new mandate signature request
POST /v2/mandate_signature_requests

An email will be sent to the mandate debtor so they can complete and sign the collection mandate.
application/json
Body Required

    reference string Required

    The unique mandate reference.

    Format should match the following pattern: [A-Za-z0-9+?/\-:().,'\s]{1,35}.
    scheme string Required

    The mandate scheme.

    Values are b2b or core.
    debtor_email string Required

    The email address of the debtor.

    Minimum length is 1, maximum length is 256. Format should match the following pattern: ^(?!.*\.\.)[a-zA-Z0-9._%+-]{1,250}@[a-zA-Z0-9.-]{2,250}\.[a-zA-Z]{2,63}$.
    email_custom_message string

    Custom text message that will be included in the email sent to the debtor.

    Minimum length is 1, maximum length is 3000. Format should match the following pattern: [a-zA-Zà-üÀ-Ü0-9€@&;.,?!()+\-'’"\s]*.
    contract_reference string

    The contract reference that will be attached to the mandate. This is optional metadata.

    Minimum length is 1, maximum length is 256.
    language string

    The language used for the email and signature page for the debtor. This is optional.

    Values are french or english. Default value is french.

Responses

    200 application/json

    OK
    Hide response attributes object
        id string(uuid) Required

        ID of the mandate signature request
        reference string Required

        The unique mandate reference.

        Format should match the following pattern: [A-Za-z0-9+?/\-:().,'\s]{1,35}.
        scheme string Required

        The mandate scheme.

        Values are b2b or core.
        debtor_email string Required

        The email address of the debtor.
        email_custom_message string

        Custom text message included in the email sent to the debtor.
        contract_reference string

        The contract reference attached to the mandate. This is optional metadata.
        status string Required

        Current status of the mandate signature request.

        Values are sent, expired, or completed.
        language string Required

        The language used for the email and signature page for the debtor.

        Values are french or english. Default value is french.
        is_deleted boolean Required

        Whether or not this mandate signature request has been deleted.

POST /v2/mandate_signature_requests

curl \
 --request POST https://api.memo.bank/v2/mandate_signature_requests \
 --header "Content-Type: application/json" \
 --data '{"reference":"ABC123DEF","scheme":"core","debtor_email":"foo@bar.com","email_custom_message":"Hi John Doe, here's a collection mandate to sign.","contract_reference":"CUST-1234","language":"french"}'

Request examples

{
  "reference": "ABC123DEF",
  "scheme": "core",
  "debtor_email": "foo@bar.com",
  "email_custom_message": "Hi John Doe, here's a collection mandate to sign.",
  "contract_reference": "CUST-1234",
  "language": "french"
}

Response examples (200)

{
  "id": "61b05c4f-3f72-4951-8c30-a2a9faaa5184",
  "reference": "ABC123DEF",
  "scheme": "core",
  "debtor_email": "foo@bar.com",
  "email_custom_message": "Hi John Doe, here's a collection mandate to sign.",
  "contract_reference": "CUST-1234",
  "status": "sent",
  "language": "french",
  "is_deleted": false
}



Get a mandate signature request
GET /v2/mandate_signature_requests/{id}
Path parameters

    id string(uuid) Required

    ID of the mandate signature request.

Responses

    200 application/json

    OK
    Hide response attributes object
        id string(uuid) Required

        ID of the mandate signature request
        reference string Required

        The unique mandate reference.

        Format should match the following pattern: [A-Za-z0-9+?/\-:().,'\s]{1,35}.
        scheme string Required

        The mandate scheme.

        Values are b2b or core.
        debtor_email string Required

        The email address of the debtor.
        email_custom_message string

        Custom text message included in the email sent to the debtor.
        contract_reference string

        The contract reference attached to the mandate. This is optional metadata.
        status string Required

        Current status of the mandate signature request.

        Values are sent, expired, or completed.
        language string Required

        The language used for the email and signature page for the debtor.

        Values are french or english. Default value is french.
        is_deleted boolean Required

        Whether or not this mandate signature request has been deleted.

GET /v2/mandate_signature_requests/{id}

curl \
 --request GET https://api.memo.bank/v2/mandate_signature_requests/45195a6f-daa8-4bc1-9ac4-3979e72bd89d

Response examples (200)

{
  "id": "61b05c4f-3f72-4951-8c30-a2a9faaa5184",
  "reference": "ABC123DEF",
  "scheme": "core",
  "debtor_email": "foo@bar.com",
  "email_custom_message": "Hi John Doe, here's a collection mandate to sign.",
  "contract_reference": "CUST-1234",
  "status": "sent",
  "language": "french",
  "is_deleted": false
}




GET /v2/mandate_signature_requests/{id}

curl \
 --request GET https://api.memo.bank/v2/mandate_signature_requests/45195a6f-daa8-4bc1-9ac4-3979e72bd89d

Response examples (200)

{
  "id": "61b05c4f-3f72-4951-8c30-a2a9faaa5184",
  "reference": "ABC123DEF",
  "scheme": "core",
  "debtor_email": "foo@bar.com",
  "email_custom_message": "Hi John Doe, here's a collection mandate to sign.",
  "contract_reference": "CUST-1234",
  "status": "sent",
  "language": "french",
  "is_deleted": false
}

Delete a mandate signature request
DELETE /v2/mandate_signature_requests/{id}

A mandate signature request can be deleted in case the collection mandate no longer needs to be completed and signed. This action is only possible while the mandate signature request is not in completed status.
Path parameters

    id string(uuid) Required

    ID of the mandate signature request.

Responses

    200

    OK

DELETE /v2/mandate_signature_requests/{id}

curl \
 --request DELETE https://api.memo.bank/v2/mandate_signature_requests/45195a6f-daa8-4bc1-9ac4-3979e72bd89d




DELETE /v2/mandate_signature_requests/{id}

curl \
 --request DELETE https://api.memo.bank/v2/mandate_signature_requests/45195a6f-daa8-4bc1-9ac4-3979e72bd89d

Renew a mandate signature request
POST /v2/mandate_signature_requests/{id}/renewals

A mandate signature request can be renewed in case it has expired before the collection mandate could be completed and signed. This action is only possible while the mandate signature request is in expired status.
Path parameters

    id string(uuid) Required

    ID of the mandate signature request.

Responses

    200

    OK

POST /v2/mandate_signature_requests/{id}/renewals

curl \
 --request POST https://api.memo.bank/v2/mandate_signature_requests/45195a6f-daa8-4bc1-9ac4-3979e72bd89d/renewals


         object
            id string(uuid) Required

            ID of the attachment.
            transaction_id string(uuid) Required

            ID of the transaction this document is attached to.
            filename string Required

            Name of the attached file.
            size integer(int64) Required

            Size of the attached file in bytes.
            mime_type string Required

            Mime type of the attached file.
            date string(date-time) Required

            Date at which the file has been attached to a transaction.
            is_deleted boolean Required

            Whether or not this attachment has been deleted.
        has_prev boolean Required

        Flag indicating if there is a previous page.
        has_next boolean Required

        Flag indicating if there is a next page.

GET /v2/attachments

curl \
 --request GET https://api.memo.bank/v2/attachments

Response examples (200)

{
  "results": [
    {
      "id": "db2b50c0-a943-4eb1-a69f-fa37f112daa8",
      "transaction_id": "20588f37-0ca6-4abd-80ae-1964d601b516",
      "filename": "document.pdf",
      "size": 42,
      "mime_type": "application/pdf",
      "date": "2025-05-04T09:42:00Z",
      "is_deleted": true
    }
  ],
  "has_prev": true,
  "has_next": true
}




GET /v2/attachments

curl \
 --request GET https://api.memo.bank/v2/attachments

Response examples (200)

{
  "results": [
    {
      "id": "db2b50c0-a943-4eb1-a69f-fa37f112daa8",
      "transaction_id": "20588f37-0ca6-4abd-80ae-1964d601b516",
      "filename": "document.pdf",
      "size": 42,
      "mime_type": "application/pdf",
      "date": "2025-05-04T09:42:00Z",
      "is_deleted": true
    }
  ],
  "has_prev": true,
  "has_next": true
}

Create an attachment
POST /v2/attachments

This operation allows you to upload and attach a document to a transaction.
multipart/form-data
Body

    document string(binary) Required
    transaction_id string(uuid) Required

    ID of the transaction the document will be attached to.

Responses

    201 application/json

    Created
    Hide response attributes object
        id string(uuid) Required

        ID of the attachment.
        transaction_id string(uuid) Required

        ID of the transaction this document is attached to.
        filename string Required

        Name of the attached file.
        size integer(int64) Required

        Size of the attached file in bytes.
        mime_type string Required

        Mime type of the attached file.
        date string(date-time) Required

        Date at which the file has been attached to a transaction.
        is_deleted boolean Required

        Whether or not this attachment has been deleted.

POST /v2/attachments

curl \
 --request POST https://api.memo.bank/v2/attachments \
 --header "Content-Type: multipart/form-data" \
 --form "document=@file" \
 --form "transaction_id=3439bd9a-077a-4c02-8bd7-f14eadf8975b"

Response examples (201)

{
  "id": "db2b50c0-a943-4eb1-a69f-fa37f112daa8",
  "transaction_id": "20588f37-0ca6-4abd-80ae-1964d601b516",
  "filename": "document.pdf",
  "size": 42,
  "mime_type": "application/pdf",
  "date": "2025-05-04T09:42:00Z",
  "is_deleted": true
}




POST /v2/attachments

curl \
 --request POST https://api.memo.bank/v2/attachments \
 --header "Content-Type: multipart/form-data" \
 --form "document=@file" \
 --form "transaction_id=3439bd9a-077a-4c02-8bd7-f14eadf8975b"

Response examples (201)

{
  "id": "db2b50c0-a943-4eb1-a69f-fa37f112daa8",
  "transaction_id": "20588f37-0ca6-4abd-80ae-1964d601b516",
  "filename": "document.pdf",
  "size": 42,
  "mime_type": "application/pdf",
  "date": "2025-05-04T09:42:00Z",
  "is_deleted": true
}

Get an attachment
GET /v2/attachments/{id}

This operation uses content negotiation to request either a JSON representation of the attachment, or the actual document. Check the OpenAPI specification for more details.
Path parameters

    id string(uuid) Required

    ID of the attachment.

Responses

    200

    OK
    Hide response attributes object
        id string(uuid) Required

        ID of the attachment.
        transaction_id string(uuid) Required

        ID of the transaction this document is attached to.
        filename string Required

        Name of the attached file.
        size integer(int64) Required

        Size of the attached file in bytes.
        mime_type string Required

        Mime type of the attached file.
        date string(date-time) Required

        Date at which the file has been attached to a transaction.
        is_deleted boolean Required

        Whether or not this attachment has been deleted.

GET /v2/attachments/{id}

curl \
 --request GET https://api.memo.bank/v2/attachments/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "db2b50c0-a943-4eb1-a69f-fa37f112daa8",
  "transaction_id": "20588f37-0ca6-4abd-80ae-1964d601b516",
  "filename": "document.pdf",
  "size": 42,
  "mime_type": "application/pdf",
  "date": "2025-05-04T09:42:00Z",
  "is_deleted": true
}




GET /v2/attachments/{id}

curl \
 --request GET https://api.memo.bank/v2/attachments/c70bd7bc-58e0-4fdb-8c1f-70186e0de587

Response examples (200)

{
  "id": "db2b50c0-a943-4eb1-a69f-fa37f112daa8",
  "transaction_id": "20588f37-0ca6-4abd-80ae-1964d601b516",
  "filename": "document.pdf",
  "size": 42,
  "mime_type": "application/pdf",
  "date": "2025-05-04T09:42:00Z",
  "is_deleted": true
}

Delete an attachment
DELETE /v2/attachments/{id}
Path parameters

    id string(uuid) Required

    ID of the attachment.

Responses

    204

    No content

DELETE /v2/attachments/{id}

curl \
 --request DELETE https://api.memo.bank/v2/attachments/c70bd7bc-58e0-4fdb-8c1f-70186e0de587



Sandbox

Sandbox only endpoints.
Simulate an incoming SEPA collection
POST /v2/sandbox/incoming_collections

This endpoint allows you to simulate an incoming SEPA collection to your account.
application/json
Body Required

    amount integer(int64) Required

    Amount of the transfer, in cents. The currency is always EURO.

    Minimum value is 1.
    local_iban string Required

    Existing IBAN to be used as the destination of the transfer. Can be the main IBAN of an account or a virtual IBAN.

    Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.
    message string

    Message attached to this transfer, visible to all involved parties.
    end_to_end_id string

    Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.

    Minimum length is 1, maximum length is 35. Format should match the following pattern: [a-zA-Z0-9\-\?\:\(\)\.\,\'\+\ ]{1,35}.
    mandate object

    The SEPA Direct Debit collection mandate. Allow you to provide mandate information that will be used for the transaction. If not provided, default values will be used.

    Additional properties are allowed.
    Hide mandate attributes object
        reference string

        The unique mandate reference.

        Format should match the following pattern: [A-Za-z0-9+?/\-:().,'\s]{1,35}.
        creditor object

        The creditor associated with this mandate.

        Additional properties are allowed.
        Hide creditor attributes object
            name string

            Name of the creditor.

            Minimum length is 1, maximum length is 256.
            iban string

            IBAN of the creditor.

            Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.
            sepa_identifier string

            SEPA identifier of the creditor.

            Format should match the following pattern: ([A-Z]{2})([0-9]{2})ZZZ([A-Z0-9]{4,}).

Responses

    204

    No content

POST /v2/sandbox/incoming_collections

curl \
 --request POST https://api.sandbox.memo.bank/v2/sandbox/incoming_collections \
 --header "Content-Type: application/json" \
 --data '{"amount":500,"local_iban":"FR6430003000509825397888D64","message":"invoice no12345","end_to_end_id":"b0bfb42baa2642c2af0ca3e880fcd590","mandate":{"reference":"ABC123DEF","creditor":{"name":"John Doe","iban":"FR2512739000308553756377J95","sepa_identifier":"FR18ZZZ002305"}}}'

Request examples

{
  "amount": 500,
  "local_iban": "FR6430003000509825397888D64",
  "message": "invoice no12345",
  "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
  "mandate": {
    "reference": "ABC123DEF",
    "creditor": {
      "name": "John Doe",
      "iban": "FR2512739000308553756377J95",
      "sepa_identifier": "FR18ZZZ002305"
    }
  }
}




POST /v2/sandbox/incoming_collections

curl \
 --request POST https://api.sandbox.memo.bank/v2/sandbox/incoming_collections \
 --header "Content-Type: application/json" \
 --data '{"amount":500,"local_iban":"FR6430003000509825397888D64","message":"invoice no12345","end_to_end_id":"b0bfb42baa2642c2af0ca3e880fcd590","mandate":{"reference":"ABC123DEF","creditor":{"name":"John Doe","iban":"FR2512739000308553756377J95","sepa_identifier":"FR18ZZZ002305"}}}'

Request examples

{
  "amount": 500,
  "local_iban": "FR6430003000509825397888D64",
  "message": "invoice no12345",
  "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
  "mandate": {
    "reference": "ABC123DEF",
    "creditor": {
      "name": "John Doe",
      "iban": "FR2512739000308553756377J95",
      "sepa_identifier": "FR18ZZZ002305"
    }
  }
}

Simulate an incoming SEPA transfer
POST /v2/sandbox/incoming_transfers

This endpoint allows you to simulate an incoming SEPA transfer to your account.
application/json
Body Required

    amount integer(int64) Required

    Amount of the transfer, in cents. The currency is always EURO.

    Minimum value is 1.
    local_iban string Required

    Existing IBAN to be used as the destination of the transfer. Can be the main IBAN of an account or a virtual IBAN.

    Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.
    message string

    Message attached to this transfer, visible to all involved parties.
    end_to_end_id string

    Unique identification to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. It can be used for reconciliation or to link tasks relating to the transaction.

    Minimum length is 1, maximum length is 35. Format should match the following pattern: [a-zA-Z0-9\-\?\:\(\)\.\,\'\+\ ]{1,35}.
    counterparty_name string

    Name of the debtor. Allow you to provide the name that will be used for the transaction. If not provided, a default value will be used.
    counterparty_iban string

    IBAN of the debtor. Allow you to provide the IBAN that will be used for the transaction. If not provided, a default value will be used.

    Format should match the following pattern: [A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}.

Responses

    204

    No content

POST /v2/sandbox/incoming_transfers

curl \
 --request POST https://api.sandbox.memo.bank/v2/sandbox/incoming_transfers \
 --header "Content-Type: application/json" \
 --data '{"amount":500,"local_iban":"FR6430003000509825397888D64","message":"invoice no12345","end_to_end_id":"b0bfb42baa2642c2af0ca3e880fcd590","counterparty_name":"John Doe","counterparty_iban":"FR2512739000308553756377J95"}'

Request examples

{
  "amount": 500,
  "local_iban": "FR6430003000509825397888D64",
  "message": "invoice no12345",
  "end_to_end_id": "b0bfb42baa2642c2af0ca3e880fcd590",
  "counterparty_name": "John Doe",
  "counterparty_iban": "FR2512739000308553756377J95"
}



Webhook
Events

When something interesting happens on your Memo Bank workspace, such as a new Transaction being created, Memo Bank can reach out to your application so that you can take action (such as sending an e-mail alert about the transaction to your user) automatically.

The first step is to add a Webhook to your application in the API section of your Memo Bank workspace. As part of this, you will have to provide a URL on your own servers. Memo Bank will then send HTTPS requests to that URL when there is an activity on your Memo Bank workspace.
Consuming Events

Individual Events do not contain very much information on their own. This is by design, as the API structure can remain extremely stable and avoid difficult webhook migrations in the future as the Memo Bank API changes. If you need additional metadata, such as the amount of the Transaction in the above example, make a GET request to the API for that information. You can use the resource_type and resource_id to determine what resource to fetch from the API.
Failures and retries

If your application returns anything other than a 2xx HTTP status code, we will retry it up to 8 times with exponentially increasing backoffs. In your webhook endpoint implementation, we recommend you place inbound Events into your application’s own queuing system (such as Kafka, Resque, etc) for asynchronous event processing, and returning a 200 response from your endpoint as quickly as possible.
Securing your webhook endpoint (recommended)

Memo Bank will include an Authorization header in each webhook request. Inside of it, you will find Bearer <token> with the authentication token we provided when you created the webhook on the web interface. We recommend that you check this header and reject requests with invalid token, indicating a malicious request that would not have been issued by Memo Bank.

We also recommend that you restrict which IP addresses can call your webhook. Here is the list of our IP addresses:

    35.181.64.230
    15.236.178.243
    13.36.24.215
    3.78.51.103
    3.74.208.131
    3.122.142.56



Handle an event
POST https://webhook.example.com
Body Required

    id string(uuid) Required

    ID of this event. Must be used for idempotence: an event with the same ID can be sent multiple times in case of error, but should only be processed once.
    date string(date-time) Required

    Event creation date, in ISO8601 format.
    event_type string Required

    Type of event. We may add additional possible types over time; your application should be able to handle such additions gracefully.

    Values are account_created, account_updated, account_closed, attachment_created, attachment_deleted, collection_confirmed, collection_canceled, collection_failed, iban_created, iban_updated, iban_deleted, transaction_scheduled, transaction_authorized, transaction_confirmed, transaction_rejected, transaction_canceled, transfer_confirmed, transfer_canceled, transfer_failed, bulk_transfers_completed, bulk_collections_completed, mandate_signature_request_sent, mandate_signature_request_expired, mandate_signature_request_completed, or mandate_signature_request_deleted.
    resource_type string Required

    Type of the resource referenced by this event. We may add additional possible source types over time; your application should be able to handle such additions gracefully.

    Values are account, attachment, collection, iban, transaction, transfer, bulk_transfers, bulk_collections, or mandate_signature_request.
    resource_id string(uuid) Required

    ID of the resource referenced by this event.

Responses

    204

    No content

POST event
Request examples

{
  "id": "ad8340e7-0675-4182-9c95-520e7c9a72a3",
  "date": "2025-05-04T09:42:00Z",
  "event_type": "account_created",
  "resource_type": "account",
  "resource_id": "5400f1ad-788c-4bef-9ded-4d7afd8472d7"
}

