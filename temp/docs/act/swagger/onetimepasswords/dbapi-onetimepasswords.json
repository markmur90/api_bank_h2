{
  "openapi": "3.0.1",
  "info": {
    "title": "dbapi-onetimepasswords",
    "description": "One-Time Passwords API. Please also refer to the Transaction Authorization API which covers even more use cases.",
    "termsOfService": "https://developer.db.com/termsandconditions",
    "contact": {
      "url": "https://developer.db.com/contact",
      "email": "bank.api@db.com"
    },
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://simulator-api.db.com:443/gw/dbapi/others/onetimepasswords/v2"
    }
  ],
  "tags": [
    {
      "name": "One-Time Passwords"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "One-Time Passwords"
        ],
        "summary": "This service returns the customers one-time-password challenge methods.",
        "description": "This service provides an overview of one-time password challenge methods and their corresponding status.",
        "operationId": "getChallengeMethodsV2",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "description": "Free form key controlled by the caller e.g. uuid",
            "required": false,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeMethodsAndTypes"
                }
              }
            }
          },
          "400": {
            "description": "Unsuccessful operation, returns http status 400. See 'example' property for possible values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": [
                  {
                    "code": 2,
                    "message": "Invalid value for %s."
                  },
                  {
                    "code": 111,
                    "message": "2FA method is not ACTIVE."
                  },
                  {
                    "code": 112,
                    "message": "OTP invalid challenge response."
                  },
                  {
                    "code": 113,
                    "message": "OTP no challenge issued."
                  },
                  {
                    "code": 114,
                    "message": "Unable to identify transaction by Id."
                  },
                  {
                    "code": 121,
                    "message": "OTP invalid challenge response: %s."
                  },
                  {
                    "code": 122,
                    "message": "Invalid OTP."
                  },
                  {
                    "code": 127,
                    "message": "Booking date from must precede booking date to."
                  },
                  {
                    "code": 131,
                    "message": "Invalid value for 'sortBy'. Valid values are 'bookingDate[ASC]' and 'bookingDate[DESC]'."
                  },
                  {
                    "code": 132,
                    "message": "not supported"
                  },
                  {
                    "code": 138,
                    "message": "it seems that you started a non pushTAN challenge. Please use the PATCH endpoint to continue"
                  },
                  {
                    "code": 139,
                    "message": "it seems that you started a pushTAN challenge. Please use the GET endpoint to continue"
                  },
                  {
                    "code": 601,
                    "message": "Order deletion/modification not allowed due to order state."
                  },
                  {
                    "code": 602,
                    "message": "Multiple positions exist. Please contact your personal bank advisor."
                  },
                  {
                    "code": 603,
                    "message": "Insufficient stock"
                  },
                  {
                    "code": 604,
                    "message": "Security data not found"
                  },
                  {
                    "code": 605,
                    "message": "Missing authorization"
                  },
                  {
                    "code": 606,
                    "message": "Quantity not tradeable"
                  },
                  {
                    "code": 610,
                    "message": "The order exceeds the maximum available quota: Free quota: {freeQuota}"
                  },
                  {
                    "code": 611,
                    "message": "Not enough securities with minimum holding period available"
                  },
                  {
                    "code": 613,
                    "message": "Ordering quotas of OEREFs (Open-Ended Real Estate Funds) bought after 21.07.2013 and cannot be returned"
                  },
                  {
                    "code": 614,
                    "message": "Ordering quotas of OEREFs (Open-Ended Real Estate Funds) bought partly after 21.07.2013 and cannot be returned"
                  },
                  {
                    "code": 615,
                    "message": "Security not tradeable"
                  },
                  {
                    "code": 616,
                    "message": "Order not in orderbook"
                  },
                  {
                    "code": 617,
                    "message": "Minimum order amount not reached"
                  },
                  {
                    "code": 620,
                    "message": "CashAccount does not exist"
                  },
                  {
                    "code": 621,
                    "message": "Customer is not allowed to order"
                  },
                  {
                    "code": 622,
                    "message": "Security Account is not valid for orders"
                  },
                  {
                    "code": 623,
                    "message": "Liquidity not sufficient for order"
                  },
                  {
                    "code": 624,
                    "message": "MarketPlace does not exist"
                  },
                  {
                    "code": 633,
                    "message": "SecurityAccount does not exist"
                  },
                  {
                    "code": 634,
                    "message": "ExpiryDate is before current date"
                  },
                  {
                    "code": 635,
                    "message": "Invalid blockingDate"
                  },
                  {
                    "code": 636,
                    "message": "ExpiryDate must be a business day"
                  },
                  {
                    "code": 637,
                    "message": "Setting a limit when ordering over the capital management company is not possible"
                  },
                  {
                    "code": 638,
                    "message": "Setting an expiry date when ordering over the capital management company is not possible"
                  },
                  {
                    "code": 654,
                    "message": "Invalid limit price/stop price."
                  },
                  {
                    "code": 656,
                    "message": "addOns.expiryDate not allowed with type of addOns.restriction"
                  },
                  {
                    "code": 657,
                    "message": "OTC market place not allowed"
                  },
                  {
                    "code": 658,
                    "message": "Maximum addOns.expiryDate exceeded."
                  },
                  {
                    "code": 659,
                    "message": "Token doesnâ€™t exist"
                  },
                  {
                    "code": 660,
                    "message": "No price returned by PriceModule"
                  },
                  {
                    "code": 661,
                    "message": "BestEx could not be retrieved for holding recommendation"
                  },
                  {
                    "code": 662,
                    "message": "No data for given wkn found"
                  },
                  {
                    "code": 664,
                    "message": "Mismatching ccy for the given security"
                  },
                  {
                    "code": 665,
                    "message": "Security not tradeable with market place"
                  },
                  {
                    "code": 666,
                    "message": "Best Execution stock market could not be determined"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unsuccessful operation, returns http status 401. See 'example' property for possible values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": [
                  {
                    "code": 401,
                    "message": "The requested function requires a SCA Level Authentication."
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "api_auth_code": [
              "read_partners_legi",
              "order_securities",
              "instant_sepa_credit_transfers"
            ]
          },
          {
            "api_implicit": [
              "read_partners_legi",
              "order_securities",
              "instant_sepa_credit_transfers"
            ]
          }
        ]
      }
    },
    "/single": {
      "post": {
        "tags": [
          "One-Time Passwords"
        ],
        "summary": "Generate a one-time password challenge request.",
        "description": "This service generates a one-time password challenge request for the given method and transaction.",
        "operationId": "createChallengeV2",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "description": "Free form key controlled by the caller e.g. uuid",
            "required": false,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input parameters to start a OTP challenge",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChallengeStart"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "headers": {
              "location": {
                "description": "URI of the created challenge resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeRequest"
                }
              }
            }
          },
          "400": {
            "description": "Unsuccessful operation, returns http status 400. See 'example' property for possible values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": [
                  {
                    "code": 2,
                    "message": "Invalid value for %s."
                  },
                  {
                    "code": 111,
                    "message": "2FA method is not ACTIVE."
                  },
                  {
                    "code": 112,
                    "message": "OTP invalid challenge response."
                  },
                  {
                    "code": 113,
                    "message": "OTP no challenge issued."
                  },
                  {
                    "code": 114,
                    "message": "Unable to identify transaction by Id."
                  },
                  {
                    "code": 121,
                    "message": "OTP invalid challenge response: %s."
                  },
                  {
                    "code": 122,
                    "message": "Invalid OTP."
                  },
                  {
                    "code": 127,
                    "message": "Booking date from must precede booking date to."
                  },
                  {
                    "code": 131,
                    "message": "Invalid value for 'sortBy'. Valid values are 'bookingDate[ASC]' and 'bookingDate[DESC]'."
                  },
                  {
                    "code": 132,
                    "message": "not supported"
                  },
                  {
                    "code": 138,
                    "message": "it seems that you started a non pushTAN challenge. Please use the PATCH endpoint to continue"
                  },
                  {
                    "code": 139,
                    "message": "it seems that you started a pushTAN challenge. Please use the GET endpoint to continue"
                  },
                  {
                    "code": 601,
                    "message": "Order deletion/modification not allowed due to order state."
                  },
                  {
                    "code": 602,
                    "message": "Multiple positions exist. Please contact your personal bank advisor."
                  },
                  {
                    "code": 603,
                    "message": "Insufficient stock"
                  },
                  {
                    "code": 604,
                    "message": "Security data not found"
                  },
                  {
                    "code": 605,
                    "message": "Missing authorization"
                  },
                  {
                    "code": 606,
                    "message": "Quantity not tradeable"
                  },
                  {
                    "code": 610,
                    "message": "The order exceeds the maximum available quota: Free quota: {freeQuota}"
                  },
                  {
                    "code": 611,
                    "message": "Not enough securities with minimum holding period available"
                  },
                  {
                    "code": 613,
                    "message": "Ordering quotas of OEREFs (Open-Ended Real Estate Funds) bought after 21.07.2013 and cannot be returned"
                  },
                  {
                    "code": 614,
                    "message": "Ordering quotas of OEREFs (Open-Ended Real Estate Funds) bought partly after 21.07.2013 and cannot be returned"
                  },
                  {
                    "code": 615,
                    "message": "Security not tradeable"
                  },
                  {
                    "code": 616,
                    "message": "Order not in orderbook"
                  },
                  {
                    "code": 617,
                    "message": "Minimum order amount not reached"
                  },
                  {
                    "code": 620,
                    "message": "CashAccount does not exist"
                  },
                  {
                    "code": 621,
                    "message": "Customer is not allowed to order"
                  },
                  {
                    "code": 622,
                    "message": "Security Account is not valid for orders"
                  },
                  {
                    "code": 623,
                    "message": "Liquidity not sufficient for order"
                  },
                  {
                    "code": 624,
                    "message": "MarketPlace does not exist"
                  },
                  {
                    "code": 633,
                    "message": "SecurityAccount does not exist"
                  },
                  {
                    "code": 634,
                    "message": "ExpiryDate is before current date"
                  },
                  {
                    "code": 635,
                    "message": "Invalid blockingDate"
                  },
                  {
                    "code": 636,
                    "message": "ExpiryDate must be a business day"
                  },
                  {
                    "code": 637,
                    "message": "Setting a limit when ordering over the capital management company is not possible"
                  },
                  {
                    "code": 638,
                    "message": "Setting an expiry date when ordering over the capital management company is not possible"
                  },
                  {
                    "code": 654,
                    "message": "Invalid limit price/stop price."
                  },
                  {
                    "code": 656,
                    "message": "addOns.expiryDate not allowed with type of addOns.restriction"
                  },
                  {
                    "code": 657,
                    "message": "OTC market place not allowed"
                  },
                  {
                    "code": 658,
                    "message": "Maximum addOns.expiryDate exceeded."
                  },
                  {
                    "code": 659,
                    "message": "Token doesnâ€™t exist"
                  },
                  {
                    "code": 660,
                    "message": "No price returned by PriceModule"
                  },
                  {
                    "code": 661,
                    "message": "BestEx could not be retrieved for holding recommendation"
                  },
                  {
                    "code": 662,
                    "message": "No data for given wkn found"
                  },
                  {
                    "code": 664,
                    "message": "Mismatching ccy for the given security"
                  },
                  {
                    "code": 665,
                    "message": "Security not tradeable with market place"
                  },
                  {
                    "code": 666,
                    "message": "Best Execution stock market could not be determined"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unsuccessful operation, returns http status 401. See 'example' property for possible values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": [
                  {
                    "code": 401,
                    "message": "The requested function requires a SCA Level Authentication."
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "api_auth_code": [
              "read_partners_legi",
              "order_securities",
              "instant_sepa_credit_transfers"
            ]
          },
          {
            "api_implicit": [
              "read_partners_legi",
              "order_securities",
              "instant_sepa_credit_transfers"
            ]
          }
        ],
        "x-codegen-request-body-name": "challengeStart"
      }
    },
    "/single/{id}": {
      "patch": {
        "tags": [
          "One-Time Passwords"
        ],
        "summary": "Reply to a one-time password challenge request.",
        "description": "The service generates a one-time password token, if given the correct challenge response.",
        "operationId": "verifyChallengeV2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the challenge resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "description": "Free form key controlled by the caller e.g. uuid",
            "required": false,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "OTP response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChallengeResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeResult"
                }
              }
            }
          },
          "400": {
            "description": "Unsuccessful operation, returns http status 400. See 'example' property for possible values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": [
                  {
                    "code": 2,
                    "message": "Invalid value for %s."
                  },
                  {
                    "code": 111,
                    "message": "2FA method is not ACTIVE."
                  },
                  {
                    "code": 112,
                    "message": "OTP invalid challenge response."
                  },
                  {
                    "code": 113,
                    "message": "OTP no challenge issued."
                  },
                  {
                    "code": 114,
                    "message": "Unable to identify transaction by Id."
                  },
                  {
                    "code": 121,
                    "message": "OTP invalid challenge response: %s."
                  },
                  {
                    "code": 122,
                    "message": "Invalid OTP."
                  },
                  {
                    "code": 127,
                    "message": "Booking date from must precede booking date to."
                  },
                  {
                    "code": 131,
                    "message": "Invalid value for 'sortBy'. Valid values are 'bookingDate[ASC]' and 'bookingDate[DESC]'."
                  },
                  {
                    "code": 132,
                    "message": "not supported"
                  },
                  {
                    "code": 138,
                    "message": "it seems that you started a non pushTAN challenge. Please use the PATCH endpoint to continue"
                  },
                  {
                    "code": 139,
                    "message": "it seems that you started a pushTAN challenge. Please use the GET endpoint to continue"
                  },
                  {
                    "code": 601,
                    "message": "Order deletion/modification not allowed due to order state."
                  },
                  {
                    "code": 602,
                    "message": "Multiple positions exist. Please contact your personal bank advisor."
                  },
                  {
                    "code": 603,
                    "message": "Insufficient stock"
                  },
                  {
                    "code": 604,
                    "message": "Security data not found"
                  },
                  {
                    "code": 605,
                    "message": "Missing authorization"
                  },
                  {
                    "code": 606,
                    "message": "Quantity not tradeable"
                  },
                  {
                    "code": 610,
                    "message": "The order exceeds the maximum available quota: Free quota: {freeQuota}"
                  },
                  {
                    "code": 611,
                    "message": "Not enough securities with minimum holding period available"
                  },
                  {
                    "code": 613,
                    "message": "Ordering quotas of OEREFs (Open-Ended Real Estate Funds) bought after 21.07.2013 and cannot be returned"
                  },
                  {
                    "code": 614,
                    "message": "Ordering quotas of OEREFs (Open-Ended Real Estate Funds) bought partly after 21.07.2013 and cannot be returned"
                  },
                  {
                    "code": 615,
                    "message": "Security not tradeable"
                  },
                  {
                    "code": 616,
                    "message": "Order not in orderbook"
                  },
                  {
                    "code": 617,
                    "message": "Minimum order amount not reached"
                  },
                  {
                    "code": 620,
                    "message": "CashAccount does not exist"
                  },
                  {
                    "code": 621,
                    "message": "Customer is not allowed to order"
                  },
                  {
                    "code": 622,
                    "message": "Security Account is not valid for orders"
                  },
                  {
                    "code": 623,
                    "message": "Liquidity not sufficient for order"
                  },
                  {
                    "code": 624,
                    "message": "MarketPlace does not exist"
                  },
                  {
                    "code": 633,
                    "message": "SecurityAccount does not exist"
                  },
                  {
                    "code": 634,
                    "message": "ExpiryDate is before current date"
                  },
                  {
                    "code": 635,
                    "message": "Invalid blockingDate"
                  },
                  {
                    "code": 636,
                    "message": "ExpiryDate must be a business day"
                  },
                  {
                    "code": 637,
                    "message": "Setting a limit when ordering over the capital management company is not possible"
                  },
                  {
                    "code": 638,
                    "message": "Setting an expiry date when ordering over the capital management company is not possible"
                  },
                  {
                    "code": 654,
                    "message": "Invalid limit price/stop price."
                  },
                  {
                    "code": 656,
                    "message": "addOns.expiryDate not allowed with type of addOns.restriction"
                  },
                  {
                    "code": 657,
                    "message": "OTC market place not allowed"
                  },
                  {
                    "code": 658,
                    "message": "Maximum addOns.expiryDate exceeded."
                  },
                  {
                    "code": 659,
                    "message": "Token doesnâ€™t exist"
                  },
                  {
                    "code": 660,
                    "message": "No price returned by PriceModule"
                  },
                  {
                    "code": 661,
                    "message": "BestEx could not be retrieved for holding recommendation"
                  },
                  {
                    "code": 662,
                    "message": "No data for given wkn found"
                  },
                  {
                    "code": 664,
                    "message": "Mismatching ccy for the given security"
                  },
                  {
                    "code": 665,
                    "message": "Security not tradeable with market place"
                  },
                  {
                    "code": 666,
                    "message": "Best Execution stock market could not be determined"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unsuccessful operation, returns http status 401. See 'example' property for possible values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": [
                  {
                    "code": 401,
                    "message": "The requested function requires a SCA Level Authentication."
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "api_auth_code": [
              "read_partners_legi",
              "order_securities",
              "instant_sepa_credit_transfers"
            ]
          },
          {
            "api_implicit": [
              "read_partners_legi",
              "order_securities",
              "instant_sepa_credit_transfers"
            ]
          }
        ],
        "x-codegen-request-body-name": "challengeResponse"
      }
    },
    "/single/{id}/switchMethod": {
      "patch": {
        "tags": [
          "One-Time Passwords"
        ],
        "summary": "Switch authorization method",
        "description": "Switch the authorization method for a given challenge request.",
        "operationId": "switchMethodV2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the challenge resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "description": "Free form key controlled by the caller e.g. uuid",
            "required": false,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "OTP response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChallengeRequestSwitchMethod"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeRequest"
                }
              }
            }
          },
          "400": {
            "description": "Unsuccessful operation, returns http status 400. See 'example' property for possible values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": [
                  {
                    "code": 2,
                    "message": "Invalid value for %s."
                  },
                  {
                    "code": 111,
                    "message": "2FA method is not ACTIVE."
                  },
                  {
                    "code": 112,
                    "message": "OTP invalid challenge response."
                  },
                  {
                    "code": 113,
                    "message": "OTP no challenge issued."
                  },
                  {
                    "code": 114,
                    "message": "Unable to identify transaction by Id."
                  },
                  {
                    "code": 121,
                    "message": "OTP invalid challenge response: %s."
                  },
                  {
                    "code": 122,
                    "message": "Invalid OTP."
                  },
                  {
                    "code": 127,
                    "message": "Booking date from must precede booking date to."
                  },
                  {
                    "code": 131,
                    "message": "Invalid value for 'sortBy'. Valid values are 'bookingDate[ASC]' and 'bookingDate[DESC]'."
                  },
                  {
                    "code": 132,
                    "message": "not supported"
                  },
                  {
                    "code": 138,
                    "message": "it seems that you started a non pushTAN challenge. Please use the PATCH endpoint to continue"
                  },
                  {
                    "code": 139,
                    "message": "it seems that you started a pushTAN challenge. Please use the GET endpoint to continue"
                  },
                  {
                    "code": 601,
                    "message": "Order deletion/modification not allowed due to order state."
                  },
                  {
                    "code": 602,
                    "message": "Multiple positions exist. Please contact your personal bank advisor."
                  },
                  {
                    "code": 603,
                    "message": "Insufficient stock"
                  },
                  {
                    "code": 604,
                    "message": "Security data not found"
                  },
                  {
                    "code": 605,
                    "message": "Missing authorization"
                  },
                  {
                    "code": 606,
                    "message": "Quantity not tradeable"
                  },
                  {
                    "code": 610,
                    "message": "The order exceeds the maximum available quota: Free quota: {freeQuota}"
                  },
                  {
                    "code": 611,
                    "message": "Not enough securities with minimum holding period available"
                  },
                  {
                    "code": 613,
                    "message": "Ordering quotas of OEREFs (Open-Ended Real Estate Funds) bought after 21.07.2013 and cannot be returned"
                  },
                  {
                    "code": 614,
                    "message": "Ordering quotas of OEREFs (Open-Ended Real Estate Funds) bought partly after 21.07.2013 and cannot be returned"
                  },
                  {
                    "code": 615,
                    "message": "Security not tradeable"
                  },
                  {
                    "code": 616,
                    "message": "Order not in orderbook"
                  },
                  {
                    "code": 617,
                    "message": "Minimum order amount not reached"
                  },
                  {
                    "code": 620,
                    "message": "CashAccount does not exist"
                  },
                  {
                    "code": 621,
                    "message": "Customer is not allowed to order"
                  },
                  {
                    "code": 622,
                    "message": "Security Account is not valid for orders"
                  },
                  {
                    "code": 623,
                    "message": "Liquidity not sufficient for order"
                  },
                  {
                    "code": 624,
                    "message": "MarketPlace does not exist"
                  },
                  {
                    "code": 633,
                    "message": "SecurityAccount does not exist"
                  },
                  {
                    "code": 634,
                    "message": "ExpiryDate is before current date"
                  },
                  {
                    "code": 635,
                    "message": "Invalid blockingDate"
                  },
                  {
                    "code": 636,
                    "message": "ExpiryDate must be a business day"
                  },
                  {
                    "code": 637,
                    "message": "Setting a limit when ordering over the capital management company is not possible"
                  },
                  {
                    "code": 638,
                    "message": "Setting an expiry date when ordering over the capital management company is not possible"
                  },
                  {
                    "code": 654,
                    "message": "Invalid limit price/stop price."
                  },
                  {
                    "code": 656,
                    "message": "addOns.expiryDate not allowed with type of addOns.restriction"
                  },
                  {
                    "code": 657,
                    "message": "OTC market place not allowed"
                  },
                  {
                    "code": 658,
                    "message": "Maximum addOns.expiryDate exceeded."
                  },
                  {
                    "code": 659,
                    "message": "Token doesnâ€™t exist"
                  },
                  {
                    "code": 660,
                    "message": "No price returned by PriceModule"
                  },
                  {
                    "code": 661,
                    "message": "BestEx could not be retrieved for holding recommendation"
                  },
                  {
                    "code": 662,
                    "message": "No data for given wkn found"
                  },
                  {
                    "code": 664,
                    "message": "Mismatching ccy for the given security"
                  },
                  {
                    "code": 665,
                    "message": "Security not tradeable with market place"
                  },
                  {
                    "code": 666,
                    "message": "Best Execution stock market could not be determined"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unsuccessful operation, returns http status 401. See 'example' property for possible values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": [
                  {
                    "code": 401,
                    "message": "The requested function requires a SCA Level Authentication."
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "api_auth_code": [
              "read_partners_legi",
              "order_securities",
              "instant_sepa_credit_transfers"
            ]
          },
          {
            "api_implicit": [
              "read_partners_legi",
              "order_securities",
              "instant_sepa_credit_transfers"
            ]
          }
        ],
        "x-codegen-request-body-name": "challengeResponse"
      }
    }
  },
  "components": {
    "schemas": {
      "ChallengeStart": {
        "required": [
          "method",
          "requestData",
          "requestType"
        ],
        "type": "object",
        "properties": {
          "method": {
            "$ref": "#/components/schemas/ChallengeMethodType"
          },
          "requestType": {
            "type": "string",
            "description": "The type of the OTP challenge to start.",
            "enum": [
              "TRANSFER_PARTNER_LEGI_DATA",
              "SECURITIES_ORDER_ENTRY",
              "SECURITIES_ORDER_MODIFY",
              "SECURITIES_ORDER_DELETE",
              "INSTANT_SEPA_CREDIT_TRANSFERS"
            ]
          },
          "requestData": {
            "type": "object",
            "properties": {},
            "description": "object depending on requestType. E.g. SECURITIES_ORDER_ENTRY use model ChallengeRequestDataSecuritiesOrderEntry."
          },
          "language": {
            "type": "string",
            "description": "The language that should be used in customer facing texts created in the challenge process, i.e. SMS or photoTAN app. ISO-639-1 code.",
            "enum": [
              "de",
              "en"
            ],
            "default": "de"
          }
        }
      },
      "ChallengeRequestSwitchMethod": {
        "required": [
          "method"
        ],
        "type": "object",
        "properties": {
          "method": {
            "$ref": "#/components/schemas/ChallengeMethodType"
          }
        }
      },
      "ChallengeMethodsAndTypes": {
        "required": [
          "methods"
        ],
        "type": "object",
        "properties": {
          "methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChallengeMethodItem"
            }
          }
        }
      },
      "ChallengeRequest": {
        "required": [
          "challenge",
          "id",
          "method"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the ID of the created challenge request"
          },
          "method": {
            "$ref": "#/components/schemas/ChallengeMethodType"
          },
          "challenge": {
            "type": "object",
            "properties": {},
            "description": "The sub-type of the response challenge. Depending on the value see swagger model ChallengeMethodMTAN or ChallengeMethodPHOTOTAN. This is actually a constrain of the swagger 2.0 spec."
          }
        }
      },
      "ChallengeMethodMTAN": {
        "required": [
          "mobilePhoneNumber"
        ],
        "type": "object",
        "properties": {
          "mobilePhoneNumber": {
            "type": "string",
            "description": "The telephone number the short message is being sent to"
          }
        }
      },
      "ChallengeMethodPHOTOTAN": {
        "required": [
          "imageBase64"
        ],
        "type": "object",
        "properties": {
          "imageBase64": {
            "type": "string",
            "description": "The base64 encoded PNG image that contains the challenge"
          }
        }
      },
      "ChallengeResponse": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "description": "The response code to the created challenge."
          }
        }
      },
      "ChallengeResult": {
        "required": [
          "otp"
        ],
        "type": "object",
        "properties": {
          "otp": {
            "type": "string",
            "description": "The created one-time password. The password is valid once, for the current user, the provided request type and the current access_token only. The returned one-time password should be treated as random string, with no structure and semantic."
          }
        }
      },
      "ChallengeMethodType": {
        "type": "string",
        "description": "Challenge method",
        "enum": [
          "MTAN",
          "PHOTOTAN",
          "PUSHTAN"
        ]
      },
      "ChallengeMethodMetadata": {
        "type": "object",
        "properties": {
          "mobilePhoneNumber": {
            "type": "string",
            "description": "The telephone number the short message is being sent to"
          },
          "activeDevicesCount": {
            "type": "integer",
            "description": "Number of active devices for this method type."
          }
        }
      },
      "ChallengeMethodItem": {
        "required": [
          "method",
          "status"
        ],
        "type": "object",
        "properties": {
          "method": {
            "$ref": "#/components/schemas/ChallengeMethodType"
          },
          "status": {
            "type": "string",
            "description": "Challenge method status",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DEACTIVATED",
              "DEVICE_STATUS_ACTIVATING",
              "PERMANENTLY_LOCKED",
              "TEMPORARILY_LOCKED",
              "UNKNOWN"
            ]
          },
          "metadata": {
            "$ref": "#/components/schemas/ChallengeMethodMetadata"
          }
        }
      },
      "ChallengeTypeItem": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ChallengeTypeType"
          },
          "metadata": {
            "$ref": "#/components/schemas/ChallengeTypeMetadata"
          }
        }
      },
      "ChallengeTypeType": {
        "type": "string",
        "description": "Challenge method type",
        "enum": [
          "SINGLE"
        ]
      },
      "ChallengeTypeMetadata": {
        "type": "object",
        "description": "Future extension object."
      },
      "OrderActivityType": {
        "type": "string",
        "description": "SELL - an order to sell <br/> BUY - an order to buy <br/> PLACEMENT - <br/> SUBSCRIPTION - an IPO order",
        "enum": [
          "SELL",
          "BUY"
        ]
      },
      "OrderLimit": {
        "type": "object",
        "properties": {
          "limitPrice": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "The lowest price (for a buy) or highest price (for a sell) at which an order execution should be triggered.",
            "format": "double"
          },
          "stopPrice": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "format": "double"
          }
        }
      },
      "OrderAddOns": {
        "type": "object",
        "properties": {
          "expiryDate": {
            "type": "string",
            "description": "The expiry date defines how long the order will be valid and the order can get executed in ISO 8601 format YYYY-MM-DD",
            "format": "date"
          },
          "restriction": {
            "type": "string",
            "description": "Use Order Restrictions to define specific price quote, if required. Please be aware of potential dependencies of the defined order type",
            "enum": [
              "GOOD_TILL_DATE",
              "GOOD_FOR_DAY",
              "FILL_OR_KILL",
              "IMMEDIATE_OR_CANCEL",
              "FIRST_RATE",
              "SPOT_RATE",
              "CLOSING_RATE"
            ]
          }
        },
        "description": "Order Add-Ons"
      },
      "ChallengeRequestDataTransferPartnerLegiData": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "challengeRequestDataTransferPartnerLegiData"
          }
        },
        "description": "challenge request data for requestType TRANSFER_PARTNER_LEGI_DATA"
      },
      "ChallengeRequestDataSecuritiesOrderEntry": {
        "required": [
          "activityType",
          "quantity",
          "securityAccountId",
          "securityId",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "challengeRequestDataSecuritiesOrderEntry"
          },
          "securityAccountId": {
            "pattern": "[0-9]{12}",
            "type": "string",
            "description": "the security account id"
          },
          "securityId": {
            "pattern": "[A-Z0-9]{6}",
            "type": "string",
            "description": "currently only wkn is supported"
          },
          "quantity": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "Quantity of orders to be traded",
            "format": "double"
          },
          "activityType": {
            "$ref": "#/components/schemas/OrderActivityType"
          },
          "orderLimit": {
            "$ref": "#/components/schemas/OrderLimit"
          },
          "addOns": {
            "$ref": "#/components/schemas/OrderAddOns"
          }
        },
        "description": "challenge request data for requestType SECURITIES_ORDER_ENTRY"
      },
      "ChallengeRequestDataSecuritiesOrderModify": {
        "required": [
          "orderId",
          "securityAccountId",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "challengeRequestDataSecuritiesOrderModify"
          },
          "orderId": {
            "type": "string",
            "description": "Order identifier"
          },
          "securityAccountId": {
            "pattern": "[0-9]{12}",
            "type": "string",
            "description": "the security account id"
          },
          "orderLimit": {
            "$ref": "#/components/schemas/OrderLimit"
          },
          "addOns": {
            "$ref": "#/components/schemas/OrderAddOns"
          }
        },
        "description": "challenge request data for requestType SECURITIES_ORDER_MODIFY"
      },
      "ChallengeRequestDataSecuritiesOrderDelete": {
        "required": [
          "orderId",
          "securityAccountId",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "challengeRequestDataSecuritiesOrderDelete"
          },
          "orderId": {
            "type": "string",
            "description": "Order identifier"
          },
          "securityAccountId": {
            "pattern": "[0-9]{12}",
            "type": "string",
            "description": "the security account id"
          }
        },
        "description": "challenge request data for requestType SECURITIES_ORDER_DELETE"
      },
      "ChallengeRequestDataInstantSepaCreditTransfers": {
        "required": [
          "amountCurrency",
          "amountValue",
          "targetIban",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "challengeRequestDataInstantSepaCreditTransfers"
          },
          "targetIban": {
            "$ref": "#/components/schemas/IBAN"
          },
          "amountCurrency": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "amountValue": {
            "type": "number",
            "description": "value of the money transfer in given currency"
          }
        },
        "description": "challenge request data for requestType INSTANT_SEPA_CREDIT_TRANSFERS"
      },
      "ErrorResponse": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "The error code"
          },
          "message": {
            "type": "string",
            "description": "Description of the belonging error code."
          },
          "messageId": {
            "type": "string",
            "description": "dbAPI internal message-id (unique identifier) that allow reference to each of your API calls."
          }
        },
        "description": "Default error response message"
      },
      "IBAN": {
        "pattern": "[A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}",
        "type": "string",
        "description": "The IBAN of this account."
      },
      "CurrencyCode": {
        "pattern": "[A-Z]{3}",
        "type": "string",
        "description": "ISO 4217 Alpha 3 currency code.",
        "example": "EUR"
      }
    },
    "securitySchemes": {
      "api_auth_code": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://simulator-api.db.com:443/gw/oidc/authorize",
            "tokenUrl": "https://simulator-api.db.com:443/gw/oidc/token",
            "scopes": {
              "read_partners_legi": "Grants read access to legitimation data of the current partner/customer. This data is only available for natural persons. Legitimation data contains information, e.g. about the document type, document number and document issue date for the given customer.",
              "order_securities": "Order Securities",
              "instant_sepa_credit_transfers": "Initiate and check status of instant SEPA credit transfers",
              "openid": "Request access to OpenId Connect functionality",
              "offline_access": "Request an OAuth2 Refresh Token"
            }
          }
        }
      },
      "api_implicit": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://simulator-api.db.com:443/gw/oidc/authorize",
            "scopes": {
              "read_partners_legi": "Grants read access to legitimation data of the current partner/customer. This data is only available for natural persons. Legitimation data contains information, e.g. about the document type, document number and document issue date for the given customer.",
              "order_securities": "Order Securities",
              "instant_sepa_credit_transfers": "Initiate and check status of instant SEPA credit transfers",
              "openid": "Request access to OpenId Connect functionality"
            }
          }
        }
      }
    }
  },
  "x-original-swagger-version": "2.0"
}