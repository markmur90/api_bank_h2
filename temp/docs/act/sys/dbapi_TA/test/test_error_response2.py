# coding: utf-8

"""
    dbapi-transactionAuthorization

    Accessing sensitive data like ID card information or performing actions such as initiating payments or investment orders need a second factor for authentication (2FA). The Transaction Authorization API lets you easily create proof tokens for 2FA that can be used with other APIs.

    The version of the OpenAPI document: v2
    Contact: bank.api@db.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.error_response2 import ErrorResponse2

class TestErrorResponse2(unittest.TestCase):
    """ErrorResponse2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ErrorResponse2:
        """Test ErrorResponse2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ErrorResponse2`
        """
        model = ErrorResponse2()
        if include_optional:
            return ErrorResponse2(
                code = 56,
                message = '',
                message_id = ''
            )
        else:
            return ErrorResponse2(
                code = 56,
                message = '',
        )
        """

    def testErrorResponse2(self):
        """Test ErrorResponse2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
