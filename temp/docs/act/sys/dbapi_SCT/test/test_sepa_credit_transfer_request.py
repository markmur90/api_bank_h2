# coding: utf-8

"""
    dbapi-sepaCreditTransfer

    Easily initiate SEPA credit transfer then if required cancel or get the status and get the details afterwards.

    The version of the OpenAPI document: v1
    Contact: bank.api@db.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sepa_credit_transfer_request import SepaCreditTransferRequest

class TestSepaCreditTransferRequest(unittest.TestCase):
    """SepaCreditTransferRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SepaCreditTransferRequest:
        """Test SepaCreditTransferRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SepaCreditTransferRequest`
        """
        model = SepaCreditTransferRequest()
        if include_optional:
            return SepaCreditTransferRequest(
                purpose_code = '0123',
                requested_execution_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                debtor = openapi_client.models.debtor.Debtor(
                    debtor_name = '', 
                    debtor_postal_address = openapi_client.models.address.Address(
                        country = 'DE', 
                        address_line = openapi_client.models.address_line.AddressLine(
                            street_and_house_number = '', 
                            zip_code_and_city = '', ), ), ),
                debtor_account = openapi_client.models.debtor_account.DebtorAccount(
                    iban = 'AE80GCKEC0L3O4GI7XHK0J', 
                    currency = 'EUR', ),
                payment_identification = openapi_client.models.payment_identification.PaymentIdentification(
                    end_to_end_id = 'zA9LCSLv1C1ylmgd0.Y2T', 
                    instruction_id = 'zA9LCSLv1C1ylmgd0.Y2T', ),
                instructed_amount = openapi_client.models.instructed_amount.InstructedAmount(
                    amount = 58.13, 
                    currency = 'EUR', ),
                creditor_agent = openapi_client.models.creditor_agent.CreditorAgent(
                    financial_institution_id = '', ),
                creditor = openapi_client.models.creditor.Creditor(
                    creditor_name = '', 
                    creditor_postal_address = openapi_client.models.address.Address(
                        country = 'DE', 
                        address_line = openapi_client.models.address_line.AddressLine(
                            street_and_house_number = '', 
                            zip_code_and_city = '', ), ), ),
                creditor_account = openapi_client.models.creditor_account.CreditorAccount(
                    iban = 'AE80GCKEC0L3O4GI7XHK0J', 
                    currency = 'EUR', ),
                remittance_information_structured = '',
                remittance_information_unstructured = ''
            )
        else:
            return SepaCreditTransferRequest(
                debtor = openapi_client.models.debtor.Debtor(
                    debtor_name = '', 
                    debtor_postal_address = openapi_client.models.address.Address(
                        country = 'DE', 
                        address_line = openapi_client.models.address_line.AddressLine(
                            street_and_house_number = '', 
                            zip_code_and_city = '', ), ), ),
                debtor_account = openapi_client.models.debtor_account.DebtorAccount(
                    iban = 'AE80GCKEC0L3O4GI7XHK0J', 
                    currency = 'EUR', ),
                instructed_amount = openapi_client.models.instructed_amount.InstructedAmount(
                    amount = 58.13, 
                    currency = 'EUR', ),
                creditor_agent = openapi_client.models.creditor_agent.CreditorAgent(
                    financial_institution_id = '', ),
                creditor = openapi_client.models.creditor.Creditor(
                    creditor_name = '', 
                    creditor_postal_address = openapi_client.models.address.Address(
                        country = 'DE', 
                        address_line = openapi_client.models.address_line.AddressLine(
                            street_and_house_number = '', 
                            zip_code_and_city = '', ), ), ),
                creditor_account = openapi_client.models.creditor_account.CreditorAccount(
                    iban = 'AE80GCKEC0L3O4GI7XHK0J', 
                    currency = 'EUR', ),
        )
        """

    def testSepaCreditTransferRequest(self):
        """Test SepaCreditTransferRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
