Escribe un script haga lo siguiente

Par√°metros:
ruta del proyecto(directorio actual que puede cambiar siempre de ruta) = PROJECT_DIR
entorno virtual = PROJECT_DIR/venv/
CACHE_DIR="$PROJECT_DIR/tmp/ghostcache"
archivo log ip_antes.txt = CACHE_DIR/ip_antes.txt
archivo log mac_antes.txt = CACHE_DIR/mac_antes.txt
archivo log ip_actual.txt = CACHE_DIR/ip_actual.txt
archivo log mac_actual.txt = CACHE_DIR/mac_actual.txt
LOG_DIR="$LOG_DIR/logs"
LOGFILE="$LOG_DIR/red.log"
PIDFILE="CACHE_DIR/gunicorn.pid"
GUNICORN_LOG="LOG_DIR/gunicorn_error.log"
VENV_DIR="$PROJECT_DIR/venv"
PORT=8011
INTERFAZ="wlan0"

A. UFW
	sudo ufw --force reset
	sudo ufw default deny incoming
	sudo ufw default allow outgoing
	sudo ufw allow 22/tcp
	sudo ufw allow 443/tcp
	sudo ufw allow 2222/tcp
	sudo ufw allow 8000/tcp
	sudo ufw allow 8443/tcp
	sudo ufw allow 5000/tcp
	sudo ufw allow 35729/tcp
	sudo ufw allow from 0.0.0.0 to any port 8001 proto tcp comment "Gunicorn local backend"

B. IP Y MAC
	1. registrar la ip actual antes del proceso en ip_antes.txt
	2. registrar la mac actual antes del proceso en mac_antes.txt
	3. cambiar la ip actual y registrar en ip_actual.txt
	4. cambiar la mac actual y registrar en mac_actual.txt

C. Rotar Log diario si existe
	1. LOGFILE se registra
				
		[7;30müîÅ Cambiando MAC de la interfaz wlan0[0m
		=========================================
		üîÅ Cambio de red realizado (2025-05-15 22:13:25)
		üñß Interfaz: wlan0
		üîç MAC anterior: 62:89:c3:08:af:ea
		üéâ MAC actual:   5a:21:84:91:4a:4c
		üåê IP anterior:  192.168.0.158
		üåê IP actual:    192.168.0.159
		=========================================

D. Verificar y liberar puerto

E. Verificar si TOR est√° activo

F. Iniciar y lanzar Gunicorn
    1. En el puerto con la ruta /ghostrecon/dashboard/
    2. asegurarse que est√© blindada
    4. abrir en una nueva ventana de firefox
    5. notify-send "Ghost Recon" "‚úÖ Proyecto iniciado correctamente en URL"




Quiero que:
- muestre una barra de cuenta regresiva en pantalla cuando se abran las p√°ginas para navegaci√≥n? Eso ayudar√≠a visualmente al usuario a saber cu√°ndo se cerrar√°n autom√°ticamente.
- las repeticiones, delay, e identificadores se analicen en backend mientras el usuario esta navegando y la ventana activa, y muestre alertas en pantalla


Revisa los archivos del proyecto a fondo;
En el dashboard debe traer los eventos registrados en la base de datos;
En la lista debe traer los eventos registrados en la base de datos;
Revisa que en ejecutar_reconocimiento:
	se aplique las reglas y se registre.
	se guarde en base de datos.
	al tiempo de finalizar cierre las ventanas que abrio se dirija al dashboard y actualice para que se muestre el resultado en el listado.


modifica para que: 
- el tiempo de navegaci√≥n es lo que dura la ventana y sessi√≥n de la urls abierta.
- al finalizar el tiempo se deben cerrar a la fuerza las ventanas abiertas.
- los logs y registros en base de datos se realizan de acuerdo al cumplice las repeticiones.
- las repeticiones, espera y navegaci√≥n se pueden:
		escribir manualmente.
		calcular de acuerdo a:
			repeticiones = tiempo / espera
			espera = tiempo / repeticiones 
			navegaci√≥n = repeticiones * espera


ControlPort 9051
CookieAuthentication 0
HashedControlPassword 16:C2CC7421C362FDFF6052BFFB17791359890DCDFF260F0A040E85AC6480
