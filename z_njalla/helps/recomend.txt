‚úÖ Recomendaciones finales

    Siempre usa VPN + Tor para accesos administrativos.
    Usa fail2ban + ufw + honeypot para reforzar el VPS.
    Monitorea acceso con logs rotados y cifrados.
    En el entorno API, registra cada conexi√≥n saliente (ping, SEPA, OTP) en log individual.

üöÄ Subir la clave al VPS (cuando tengas acceso)

Si ya ten√©s acceso por contrase√±a, pod√©s hacer:
ssh-copy-id -i ~/.ssh/vps_njalla_nueva.pub root@IP_DEL_VPS

O manualmente, copiando el contenido de vps_njalla_nueva.pub en:
/root/.ssh/authorized_keys

üß™ Conectar con la nueva clave
ssh -i ~/.ssh/vps_njalla_nueva root@IP_DEL_VPS

üìú Bonus: Configurar acceso por nombre en ~/.ssh/config

Agreg√° esto para hacerlo m√°s f√°cil:

Host vps-njalla
    HostName IP_DEL_VPS
    User root
    IdentityFile ~/.ssh/vps_njalla_nueva
    IdentitiesOnly yes

Y luego pod√©s simplemente usar:

ssh vps-njalla




### Genere un script que verifique la huella digital del VPS (fingerprint), habilite ufw, y oculte el puerto SSH





üì¶ Siguiente paso: Configuraci√≥n base del VPS coretransapi

Aqu√≠ te dejo un script maestro de inicializaci√≥n segura, personalizado con tu nombre clave:


# =====================================
setup_coretransapi.sh
# =====================================
#!/bin/bash

set -e
echo "üîê Iniciando configuraci√≥n b√°sica para VPS: coretransapi"

# Par√°metros
USER=root
IP_VPS="80.78.30.242"
CLAVE_SSH="/home/markmur88/.ssh/vps_njalla_nueva"

# 1. Subir clave p√∫blica SSH
echo "üì§ Subiendo clave SSH..."
scp -i "$CLAVE_SSH" ~/.ssh/vps_njalla_nueva.pub $USER@$IP_VPS:/root/coretransapi.pub

# 2. Configurar clave en el VPS
ssh -i "$CLAVE_SSH" $USER@$IP_VPS <<'EOF'
    echo "üìé Aplicando clave p√∫blica a authorized_keys..."
    mkdir -p ~/.ssh
    cat ~/coretransapi.pub >> ~/.ssh/authorized_keys
    chmod 600 ~/.ssh/authorized_keys
    chmod 700 ~/.ssh
    rm ~/coretransapi.pub

    echo "üß± Activando firewall UFW..."
    apt update && apt install ufw -y
    ufw allow OpenSSH
    ufw --force enable

    echo "üîÑ Cambiando puerto SSH..."
    PORT=49222
    sed -i "s/^#Port 22/Port $PORT/" /etc/ssh/sshd_config
    sed -i "s/^PermitRootLogin yes/PermitRootLogin prohibit-password/" /etc/ssh/sshd_config
    systemctl restart sshd
    echo "‚úÖ SSH configurado en puerto $PORT"

    echo "üéØ Hostname y entorno inicial..."
    hostnamectl set-hostname coretransapi
    echo "coretransapi" > /etc/hostname

    echo "üåç Zona horaria..."
    timedatectl set-timezone Europe/Madrid

    echo "üßº Limpieza y seguridad b√°sica..."
    apt install fail2ban -y
    systemctl enable fail2ban --now
EOF

echo "‚úÖ VPS coretransapi configurado correctamente."
echo "üõ°Ô∏è Puedes conectarte con: ssh -i $CLAVE_SSH -p 49222 root@IP_DEL_VPS"
# =====================================



üß† Recomendaciones post-instalaci√≥n
    Backup de claves en USB cifrado.
    Instalar Nginx + Gunicorn seg√∫n tu 01_full.sh.
    Asociar dominio Njalla: coretransapi.net o similar.
    Agregar validaci√≥n SSL con Certbot o claves propias (schemas/keys/).

### Prepara un nginx.conf profesional para coretransapi, apuntando a mi API


üõ†Ô∏è Instrucciones para apuntar desde Njalla al VPS

    Ve a DNS Settings de coretransapi.com en Njalla.
    Crea un registro A como este:
    Nombre	Tipo	IP del VPS	TTL
    api	A	XXX.XXX.XXX.XXX	3600

    Esper√° unos minutos a que se propague el DNS.

üîê Configuraci√≥n Nginx para api.coretransapi.com

Aqu√≠ ten√©s un bloque nginx.conf listo para servir tu API con Gunicorn y Let's Encrypt SSL:
# =====================================
# nginx.conf
# =====================================
server {
    listen 80;
    server_name api.coretransapi.com;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name api.coretransapi.com;

    ssl_certificate /etc/letsencrypt/live/api.coretransapi.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.coretransapi.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
# =====================================

    Requiere que tengas Certbot instalado y ejecutado:

certbot --nginx -d api.coretransapi.com

Genera un bloque gunicorn.socket y gunicorn.service para servir tu API con systemd bajo ese dominio?



‚îå‚îÄ‚îÄ(markmur88„âømarkmur88)-[~]
‚îî‚îÄ$ gpg --full-generate-key
gpg (GnuPG) 2.4.7; Copyright (C) 2024 g10 Code GmbH
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

gpg: caja de claves '/home/markmur88/.gnupg/pubring.kbx' creada
Por favor seleccione tipo de clave deseado:
   (1) RSA and RSA
   (2) DSA and Elgamal
   (3) DSA (sign only)
   (4) RSA (sign only)
   (9) ECC (sign and encrypt) *default*
  (10) ECC (s√≥lo firmar)
  (14) Existing key from card
Su elecci√≥n: 9
Seleccione el tipo de curva el√≠ptica deseado:
   (1) Curve 25519 *default*
   (4) NIST P-384
   (6) Brainpool P-256
Su elecci√≥n: 1
Por favor, especifique el per√≠odo de validez de la clave.
         0 = la clave nunca caduca
      <n>  = la clave caduca en n d√≠as
      <n>w = la clave caduca en n semanas
      <n>m = la clave caduca en n meses
      <n>y = la clave caduca en n a√±os
¬øValidez de la clave (0)? 
La clave nunca caduca
¬øEs correcto? (s/n) S

GnuPG debe construir un ID de usuario para identificar su clave.

Nombre y apellidos: James Von Moltke
Direcci√≥n de correo electr√≥nico: j.moltke@db.com
Comentario: 
Ha seleccionado este ID de usuario:
    "James Von Moltke <j.moltke@db.com>"

¬øCambia (N)ombre, (C)omentario, (D)irecci√≥n o (V)ale/(S)alir? v
Es necesario generar muchos bytes aleatorios. Es una buena idea realizar
alguna otra tarea (trabajar en otra ventana/consola, mover el rat√≥n, usar
la red y los discos) durante la generaci√≥n de n√∫meros primos. Esto da al
generador de n√∫meros aleatorios mayor oportunidad de recoger suficiente
entrop√≠a.
Es necesario generar muchos bytes aleatorios. Es una buena idea realizar
alguna otra tarea (trabajar en otra ventana/consola, mover el rat√≥n, usar
la red y los discos) durante la generaci√≥n de n√∫meros primos. Esto da al
generador de n√∫meros aleatorios mayor oportunidad de recoger suficiente
entrop√≠a.
gpg: /home/markmur88/.gnupg/trustdb.gpg: se ha creado base de datos de confianza
gpg: creado el directorio '/home/markmur88/.gnupg/openpgp-revocs.d'
gpg: certificado de revocaci√≥n guardado como '/home/markmur88/.gnupg/openpgp-revocs.d/1206B430DF0B35D1AF0D6CB9692D61FB9172B56A.rev'
claves p√∫blica y secreta creadas y firmadas.

pub   ed25519 2025-05-22 [SC]
      1206B430DF0B35D1AF0D6CB9692D61FB9172B56A
uid                      James Von Moltke <j.moltke@db.com>
sub   cv25519 2025-05-22 [E]
