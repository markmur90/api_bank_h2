# =====================================
Trust Wallet:
# =====================================
USDT (TRC20)
kind kiwi cause strike arrest legal price energy great warm rely common
TBfeWqKSBvkQbvxTSxfMrXHe4n1gGmXPvR
# =====================================



# =====================================
Monedero:
# =====================================
syncd.cache.018

Red:
Mainnet

##_//Ptf8454Jd55\\_##

carga l√≠quido ceniza amigo iris pie puerta deporte melena afici√≥n batuta moneda piscina cr√°ter apagar hormiga atroz ahogo bingo disco f√°brica mito afirmar alivio carga

4B7fF6GUcMt1JQhpZ7iVLkepvxFmQvXQs8TY7iGohk4f7yDDTZV1ezr5mpYHeoifkQWL7nynJt6dGh4CqHCv21D5K7om4bv
# =====================================



# =====================================
Protonmail:
# =====================================
netghostx90@protonmail.com
##_//Ptf8454Jd55\\_##
# =====================================



# =====================================
server - Debian 12 (VPS 15)
# =====================================
Server name:
FGM069DMT

Reverse DNS Name (FQDN):
504e1ebc.host.njalla.net

Network
IPs: 80.78.30.188
2a0a:3840:8078:30::504e:1ebc:1337

You can log in via ssh as root with the provided SSH key. 
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIELi49PO3V5HAtZUsmOAgMpvkj83C08cqehlt8azE628 vps_njalla_api
# =====================================

adduser markmur88
usermod -aG sudo markmur88

ssh-copy-id -i ~/.ssh/vps_njalla_ed25519.pub root@80.78.30.188
ssh -i ~/.ssh/vps_njalla_ed25519 root@80.78.30.188
ssh vps-njalla

# =====================================
dominain - coretransapi.com
# =====================================
DNS Settings

Custom name servers:
By enabling custom name servers, you are delegating the management of all records to those servers. You are responsible for the configuration of those name servers, we can not help with that.

Whois
Njalla does not publish any information about you in the WHOIS database unless you insist and enter your details here. In that case they will be added to the WHOIS database. Please note that you have to verify the email or your domain will be suspended. Providing wrong or invalid information can also lead to the suspension of your domain. 

DNSSEC

Glue records
# =====================================


‚úÖ Recomendaciones finales

    Siempre usa VPN + Tor para accesos administrativos.
    Usa fail2ban + ufw + honeypot para reforzar el VPS.
    Monitorea acceso con logs rotados y cifrados.
    En el entorno API, registra cada conexi√≥n saliente (ping, SEPA, OTP) en log individual.

üöÄ Subir la clave al VPS (cuando tengas acceso)

Si ya ten√©s acceso por contrase√±a, pod√©s hacer:
ssh-copy-id -i ~/.ssh/vps_njalla_ed25519.pub root@IP_DEL_VPS

O manualmente, copiando el contenido de vps_njalla_ed25519.pub en:
/root/.ssh/authorized_keys

üß™ Conectar con la nueva clave
ssh -i ~/.ssh/vps_njalla_ed25519 root@IP_DEL_VPS

üìú Bonus: Configurar acceso por nombre en ~/.ssh/config

Agreg√° esto para hacerlo m√°s f√°cil:

Host vps-njalla
    HostName IP_DEL_VPS
    User root
    IdentityFile ~/.ssh/vps_njalla_ed25519
    IdentitiesOnly yes

Y luego pod√©s simplemente usar:

ssh vps-njalla




### Genere un script que verifique la huella digital del VPS (fingerprint), habilite ufw, y oculte el puerto SSH





üì¶ Siguiente paso: Configuraci√≥n base del VPS coretransapi

Aqu√≠ te dejo un script maestro de inicializaci√≥n segura, personalizado con tu nombre clave:


# =====================================
setup_coretransapi.sh
# =====================================
#!/bin/bash

set -e
echo "üîê Iniciando configuraci√≥n b√°sica para VPS: coretransapi"

# Par√°metros
USER=root
IP_VPS="80.78.30.188"
CLAVE_SSH="$HOME/.ssh/vps_njalla_ed25519"

# 1. Subir clave p√∫blica SSH
echo "üì§ Subiendo clave SSH..."
scp -i "$CLAVE_SSH" ~/.ssh/vps_njalla_ed25519.pub $USER@$IP_VPS:/root/coretransapi.pub

# 2. Configurar clave en el VPS
ssh -i "$CLAVE_SSH" $USER@$IP_VPS <<'EOF'
    echo "üìé Aplicando clave p√∫blica a authorized_keys..."
    mkdir -p ~/.ssh
    cat ~/coretransapi.pub >> ~/.ssh/authorized_keys
    chmod 600 ~/.ssh/authorized_keys
    chmod 700 ~/.ssh
    rm ~/coretransapi.pub

    echo "üß± Activando firewall UFW..."
    apt update && apt install ufw -y
    ufw allow OpenSSH
    ufw --force enable

    echo "üîÑ Cambiando puerto SSH..."
    PORT=49222
    sed -i "s/^#Port 22/Port $PORT/" /etc/ssh/sshd_config
    sed -i "s/^PermitRootLogin yes/PermitRootLogin prohibit-password/" /etc/ssh/sshd_config
    systemctl restart sshd
    echo "‚úÖ SSH configurado en puerto $PORT"

    echo "üéØ Hostname y entorno inicial..."
    hostnamectl set-hostname coretransapi
    echo "coretransapi" > /etc/hostname

    echo "üåç Zona horaria..."
    timedatectl set-timezone Europe/Madrid

    echo "üßº Limpieza y seguridad b√°sica..."
    apt install fail2ban -y
    systemctl enable fail2ban --now
EOF

echo "‚úÖ VPS coretransapi configurado correctamente."
echo "üõ°Ô∏è Puedes conectarte con: ssh -i $CLAVE_SSH -p 49222 root@IP_DEL_VPS"
# =====================================



üß† Recomendaciones post-instalaci√≥n
    Backup de claves en USB cifrado.
    Instalar Nginx + Gunicorn seg√∫n tu 01_full.sh.
    Asociar dominio Njalla: coretransapi.net o similar.
    Agregar validaci√≥n SSL con Certbot o claves propias (schemas/keys/).

### Prepara un nginx.conf profesional para coretransapi, apuntando a mi API


üõ†Ô∏è Instrucciones para apuntar desde Njalla al VPS

    Ve a DNS Settings de coretransapi.com en Njalla.
    Crea un registro A como este:
    Nombre	Tipo	IP del VPS	TTL
    api	A	XXX.XXX.XXX.XXX	3600

    Esper√° unos minutos a que se propague el DNS.

üîê Configuraci√≥n Nginx para api.coretransapi.com

Aqu√≠ ten√©s un bloque nginx.conf listo para servir tu API con Gunicorn y Let's Encrypt SSL:
# =====================================
# nginx.conf
# =====================================
server {
    listen 80;
    server_name api.coretransapi.com;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name api.coretransapi.com;

    ssl_certificate /etc/letsencrypt/live/api.coretransapi.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.coretransapi.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
# =====================================

    Requiere que tengas Certbot instalado y ejecutado:

certbot --nginx -d api.coretransapi.com

Genera un bloque gunicorn.socket y gunicorn.service para servir tu API con systemd bajo ese dominio?